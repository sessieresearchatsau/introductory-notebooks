(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    939678,      17539]
NotebookOptionsPosition[    923884,      17281]
NotebookOutlinePosition[    924923,      17311]
CellTagsIndexPosition[    924843,      17306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["FAQ : SSS Enumeration", "Title",
 CellChangeTimes->{{3.934981651775061*^9, 3.9349816698382225`*^9}, {
  3.939819762487564*^9, 3.939819765758381*^9}, {3.939819797199844*^9, 
  3.9398198183817024`*^9}, {3.940426567841462*^9, 
  3.940426573921479*^9}},ExpressionUUID->"a3854beb-fd0e-4df7-aa0c-\
bab197b93b32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<SSSiCv100`\>\"", "]"}], ";"}]}], "Input",
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.8159227950159807`*^9, 3.815922857230071*^9}, {
   3.832959057462519*^9, 3.8329590603471575`*^9}, 3.938448124213293*^9, {
   3.939048652824898*^9, 3.939048662772999*^9}, {3.939048891462473*^9, 
   3.939048899769232*^9}, {3.939050675614113*^9, 3.9390506757015133`*^9}, {
   3.9390507275600243`*^9, 3.93905072931427*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"cef5c5d2-55d4-47d0-adce-42b0f5efa22a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Introduction",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
  3.941032778553177*^9, 3.941032787528918*^9}, {3.941038151755287*^9, 
  3.941038156544903*^9}},ExpressionUUID->"3ce7e1f7-6f93-6040-99a2-\
c39c5c736db3"],

Cell["\<\
Enumerations are useful, both theoretically and practically. The existence of \
a set enumeration guarantees that the set is at most countably infinite. For \
example, an enumeration of the rationals proved that there are the same \
number of fractions as integers, while a proof that no enumeration of the \
reals exists showed that the real numbers are uncountable. More usefully, an \
enumeration assigns an index to every member of the set under consideration, \
giving a practical means to consider every case. This makes enumeration a \
powerful part of the methodology found in NKS (\[OpenCurlyDoubleQuote]New \
Kind of Science\[CloseCurlyDoubleQuote]).\
\>", "Text",
 CellChangeTimes->{{3.47662568465625*^9, 3.476625687203125*^9}, 
   3.47663191809375*^9, {3.478365275565014*^9, 3.478365700561663*^9}, {
   3.478365735571071*^9, 3.478365877016378*^9}, {3.4783659149886923`*^9, 
   3.478365918568626*^9}, {3.478365969719475*^9, 3.4783659734713707`*^9}, {
   3.478366012616153*^9, 3.478366054965678*^9}, {3.478367742904491*^9, 
   3.47836776878744*^9}, {3.478367891403221*^9, 3.478368111877179*^9}, 
   3.478368162627092*^9, {3.478368243964051*^9, 3.4783682922754536`*^9}, {
   3.4784608408244877`*^9, 3.4784608690743065`*^9}, {3.478460920620852*^9, 
   3.478460932448901*^9}, {3.479049227629093*^9, 3.479049227722845*^9}, {
   3.4791596672610707`*^9, 3.47915968384015*^9}, 3.479159794347774*^9, {
   3.479290524762335*^9, 3.4792905317321105`*^9}, {3.941038192307899*^9, 
   3.941038221606819*^9}},ExpressionUUID->"5e0cba32-b56e-3f40-bdac-\
a8c1cc8451b6"],

Cell["\<\
Sequential substitution systems (SSS or \[OpenCurlyDoubleQuote]sessies\
\[CloseCurlyDoubleQuote]) are defined by sets of rules (here called \
\"rulesets\"), each consisting of a target string and a replacement string. \
Given some initial state (which may also be represented as a string) these \
rules are applied and the system evolves. But without a well-defined \
enumeration of strings and rulesets any treatment of sequential substitution \
systems will be haphazard and may miss important features. To develop an \
enumeration of all sessie rulesets, it was first necessary to enumerate all \
strings and then all lists of all strings. These enumerations can be used or \
modified for other applications based on rulesets and initial state strings \
(for example, non-sequential substitution systems, multiway systems, etc.). \
\>", "Text",
 CellChangeTimes->{{3.47662568465625*^9, 3.476625688734375*^9}, {
  3.47663191465625*^9, 3.476631915078125*^9}, {3.4766560441875*^9, 
  3.47665607596875*^9}, {3.4783648528248215`*^9, 3.4783648538877296`*^9}, {
  3.478366110274377*^9, 3.478366114557189*^9}, {3.4783684557621155`*^9, 
  3.47836846595268*^9}, {3.47904922776972*^9, 3.479049227894722*^9}, {
  3.479290624511384*^9, 3.4792906499055843`*^9}, {3.941038265112557*^9, 
  3.941038338219038*^9}, {3.941038373908024*^9, 3.941038380969017*^9}, {
  3.941038419564098*^9, 3.941038483836212*^9}, {3.941038526613903*^9, 
  3.941038539369842*^9}},ExpressionUUID->"dc5a2f52-4eed-2147-8c67-\
cdc19e546565"],

Cell["\<\
In developing an enumeration, previous successful enumerations can be studied \
to good advantage. More detail on these initial steps can be found here (from \
which some of the following summary is taken):\
\>", "Text",
 CellChangeTimes->{{3.47662568465625*^9, 3.476625688734375*^9}, {
  3.47663191465625*^9, 3.476631915078125*^9}, {3.4766560441875*^9, 
  3.47665607596875*^9}, {3.4783648528248215`*^9, 3.4783648538877296`*^9}, {
  3.478366110274377*^9, 3.478366114557189*^9}, {3.4783684557621155`*^9, 
  3.47836846595268*^9}, {3.47904922776972*^9, 3.479049227894722*^9}, {
  3.479290624511384*^9, 3.4792906499055843`*^9}, {3.941038265112557*^9, 
  3.941038338219038*^9}, {3.941038373908024*^9, 3.941038380969017*^9}, {
  3.941038419564098*^9, 3.941038483836212*^9}, {3.941038526613903*^9, 
  3.941038558084414*^9}, {3.94103860196392*^9, 
  3.941038615836706*^9}},ExpressionUUID->"13a43344-3a0c-704f-8fe5-\
efac0963dc80"],

Cell[TextData[{
 "\t",
 ButtonBox["http://www.mathematica-journal.com/2011/05/indexing-strings-and-\
rulesets/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mathematica-journal.com/2011/05/indexing-strings-and-\
rulesets/"], None},
  ButtonNote->
   "http://www.mathematica-journal.com/2011/05/indexing-strings-and-rulesets/"]
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.9386092204075623`*^9}, {3.940536565177908*^9, 
  3.940536578680151*^9}, {3.9405366410499*^9, 
  3.9405366410499*^9}},ExpressionUUID->"97842065-2369-9d48-8ba5-88160b6ce70f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Enumeration of all Rationals",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
  3.941032778553177*^9, 
  3.941032787528918*^9}},ExpressionUUID->"cb6b8ab5-2fbc-4aae-9dfe-\
b2a1feab4c8e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Cantor\[CloseCurlyQuote]s Diagonalization",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
   3.941032778553177*^9, 3.941032787528918*^9}, 3.9410462860321274`*^9, 
   3.941046324414024*^9},ExpressionUUID->"f38e27cb-5925-b842-8acd-\
9e533e6e5916"],

Cell["\<\
There are ways to create an ordered list of things that grow infinitely in \
two different \[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote]. One \
is Georg Cantor's famous diagonal ordering of the rational numbers:\
\>", "Text",
 CellChangeTimes->{{3.474455072479068*^9, 3.4744551042186794`*^9}, {
   3.474455883871648*^9, 3.4744558865129824`*^9}, {3.4744559503270063`*^9, 
   3.474455977240488*^9}, {3.4744560523387947`*^9, 3.4744561251853333`*^9}, {
   3.4744561700544677`*^9, 3.474456179681564*^9}, 3.474476810110858*^9, 
   3.4762178915653677`*^9, {3.476440616546875*^9, 3.476440621015625*^9}, {
   3.47644066859375*^9, 3.476440671390625*^9}, {3.476440730546875*^9, 
   3.476440743859375*^9}, 3.476632076453125*^9, {3.476632172078125*^9, 
   3.476632188109375*^9}, {3.476656390796875*^9, 3.476656392140625*^9}, 
   3.479049229394741*^9, {3.9410386536835423`*^9, 
   3.941038659667332*^9}},ExpressionUUID->"3a45cc0f-a0f0-ac4b-b476-\
2248885c4880"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Successor", "[", 
    RowBox[{"{", 
     RowBox[{"n_Integer", ",", "d_Integer"}], "}"}], "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"d", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{"d", "-", "1"}], ")"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"display", "[", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "d_"}], "}"}], "]"}], ":=", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "d", "\[Equal]", "6"}], ",", 
       "\"\<\[DescendingEllipsis]\>\"", ",", 
       RowBox[{"n", "\[Equal]", "6"}], ",", "\"\<\[CenterEllipsis]\>\"", ",", 
       RowBox[{"d", "\[Equal]", "6"}], ",", "\"\<\[VerticalEllipsis]\>\"", 
       ",", "True", ",", 
       RowBox[{"ToString", "@", 
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "d"}], "}"}], ",", "\"\</\>\""}], "]"}]}]}], 
      "]"}], ",", "20"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{"#1", ",", "Null"}], "]"}], "&"}], ")"}], "[", 
    RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", "d"}], "}"}], "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"n", ",", "d"}], "}"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n", "\[LessEqual]", "7"}], "&&", 
              RowBox[{"d", "\[LessEqual]", "7"}], "&&", 
              RowBox[{
               RowBox[{"n", "+", "d"}], "\[LessEqual]", "6"}], "&&", 
              RowBox[{"n", "<", "6"}]}], ")"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"n", ",", "d"}], "}"}], "\[Rule]", 
             RowBox[{"Successor", "[", 
              RowBox[{"{", 
               RowBox[{"n", ",", "d"}], "}"}], "]"}]}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "1", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", "3"}], "]"}],
     "]"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"SelfLoopStyle", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"VertexCoordinateRules", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "d"}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"6", "-", "d"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "1", ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", "1"}], 
     "]"}]}], ",", 
   RowBox[{"VertexRenderingFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
          "6"}], "&&", 
         RowBox[{
          RowBox[{
          "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
          "6"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{".8", "+", 
            RowBox[{".09", " ", 
             RowBox[{"Plus", "@@", "#2"}]}]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"#1", "-", 
             RowBox[{"{", 
              RowBox[{"0.33", ",", ".26"}], "}"}]}], ",", 
            RowBox[{"#1", "+", 
             RowBox[{"{", 
              RowBox[{"0.33", ",", ".31"}], "}"}]}], ",", 
            RowBox[{"RoundingRadius", "\[Rule]", ".11"}]}], "]"}], ",", 
          "Black", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"display", "@", "#2"}], ",", "#1"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"display", "@", "#2"}], ",", "#1"}], "]"}]}], "]"}], "&"}], 
     ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeRenderingFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[Equal]", "1"}], ",", "Red", ",", "Blue"}], "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[Equal]", 
             RowBox[{
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[Equal]", "1"}], ",", "0.35", ",", ".33"}], "]"}]}], "]"}]}], 
       "}"}], "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", ".7"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.476135009953125*^9, 3.476135051453125*^9}, {
   3.47613663465625*^9, 3.476136636859375*^9}, {3.476136725515625*^9, 
   3.47613674025*^9}, {3.476136795859375*^9, 3.476136815296875*^9}, {
   3.47613686484375*^9, 3.476136894125*^9}, {3.4761370003125*^9, 
   3.47613715365625*^9}, 3.476137472453125*^9, {3.476137509015625*^9, 
   3.476137564921875*^9}, {3.476137653984375*^9, 3.47613769215625*^9}, {
   3.4761379920625*^9, 3.476137994875*^9}, {3.47618859940625*^9, 
   3.476188664484375*^9}, {3.47618869628125*^9, 3.476188800296875*^9}, {
   3.4761888436875*^9, 3.476189109421875*^9}, {3.476189188359375*^9, 
   3.4761892606875*^9}, {3.476189334859375*^9, 3.476189438265625*^9}, {
   3.476189591984375*^9, 3.47618985803125*^9}, {3.47618989734375*^9, 
   3.476189922359375*^9}, {3.4761899524375*^9, 3.4761899616875*^9}, {
   3.476190579234375*^9, 3.4761906158125*^9}, {3.47619151378125*^9, 
   3.4761915266875*^9}, 3.4761916214375*^9, 3.4766320660625*^9, {
   3.4790664245*^9, 3.479066466671875*^9}, {3.479066497828125*^9, 
   3.479066501*^9}, {3.479066663265625*^9, 3.47906666371875*^9}, {
   3.479066754328125*^9, 3.4790667810818233`*^9}, {3.4790669263777227`*^9, 
   3.479066931367967*^9}, {3.4790674121726837`*^9, 3.479067414407402*^9}, {
   3.4790675613987265`*^9, 3.4790676502717505`*^9}, {3.479067685745203*^9, 
   3.4790677291224236`*^9}, {3.47906776868695*^9, 3.4790678554474893`*^9}, {
   3.4790679102691083`*^9, 3.479067979139943*^9}, {3.47906811092669*^9, 
   3.479068114270675*^9}, {3.47906817691571*^9, 3.4790682325133743`*^9}, {
   3.4790683199101496`*^9, 
   3.4790683451306767`*^9}},ExpressionUUID->"4a4802f5-9878-cc4a-8ec1-\
55061de92cb1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[{{
     {RGBColor[1, 0, 0], ArrowBox[{{1., 5.}, {1., 4.}}, 0.35]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{1., 4.}, {2., 5.}}, 0.33]}, 
     {RGBColor[1, 0, 0], ArrowBox[{{2., 5.}, {1., 3.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{1., 3.}, {2., 4.}}, 0.33]}, 
     {RGBColor[1, 0, 0], ArrowBox[{{3., 5.}, {1., 2.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{1., 2.}, {2., 3.}}, 0.33]}, 
     {RGBColor[1, 0, 0], ArrowBox[{{4., 5.}, {1., 1.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{1., 1.}, {2., 2.}}, 0.33]}, 
     {RGBColor[1, 0, 0], ArrowBox[{{5., 5.}, {1., 0.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{2., 4.}, {3., 5.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{3., 4.}, {4., 5.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{4., 4.}, {5., 5.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{2., 3.}, {3., 4.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{3., 3.}, {4., 4.}}, 0.33]}, 
     {RGBColor[0, 0, 1], ArrowBox[{{2., 2.}, {3., 3.}}, 0.33]}}, {
     {Hue[0.98], EdgeForm[None], RectangleBox[{0.6699999999999999, 4.74}, {1.33, 5.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"1/1\"\>",
         StripOnInput->False,
         FontSize->20], {1., 5.}]}}, 
     {Hue[1.07], EdgeForm[None], RectangleBox[{0.6699999999999999, 3.74}, {1.33, 4.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"1/2\"\>",
         StripOnInput->False,
         FontSize->20], {1., 4.}]}}, 
     {Hue[1.07], EdgeForm[None], RectangleBox[{1.67, 4.74}, {2.33, 5.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"2/1\"\>",
         StripOnInput->False,
         FontSize->20], {2., 5.}]}}, 
     {Hue[1.1600000000000001`], EdgeForm[None], 
      RectangleBox[{0.6699999999999999, 2.74}, {1.33, 3.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"1/3\"\>",
         StripOnInput->False,
         FontSize->20], {1., 3.}]}}, 
     {Hue[1.1600000000000001`], EdgeForm[None], RectangleBox[{2.67, 4.74}, {3.33, 5.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"3/1\"\>",
         StripOnInput->False,
         FontSize->20], {3., 5.}]}}, 
     {Hue[1.25], EdgeForm[None], RectangleBox[{0.6699999999999999, 1.74}, {1.33, 2.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"1/4\"\>",
         StripOnInput->False,
         FontSize->20], {1., 2.}]}}, 
     {Hue[1.25], EdgeForm[None], RectangleBox[{3.67, 4.74}, {4.33, 5.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"4/1\"\>",
         StripOnInput->False,
         FontSize->20], {4., 5.}]}}, 
     {Hue[1.34], EdgeForm[None], RectangleBox[{0.6699999999999999, 0.74}, {1.33, 1.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"1/5\"\>",
         StripOnInput->False,
         FontSize->20], {1., 1.}]}}, 
     {Hue[1.34], EdgeForm[None], RectangleBox[{4.67, 4.74}, {5.33, 5.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"5/1\"\>",
         StripOnInput->False,
         FontSize->20], {5., 5.}]}}, InsetBox[
      StyleBox["\<\"\[VerticalEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {1., 0.}], InsetBox[
      StyleBox["\<\"\[CenterEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {6., 5.}], 
     {Hue[1.1600000000000001`], EdgeForm[None], RectangleBox[{1.67, 3.74}, {2.33, 4.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"2/2\"\>",
         StripOnInput->False,
         FontSize->20], {2., 4.}]}}, 
     {Hue[1.25], EdgeForm[None], RectangleBox[{2.67, 3.74}, {3.33, 4.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"3/2\"\>",
         StripOnInput->False,
         FontSize->20], {3., 4.}]}}, 
     {Hue[1.34], EdgeForm[None], RectangleBox[{3.67, 3.74}, {4.33, 4.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"4/2\"\>",
         StripOnInput->False,
         FontSize->20], {4., 4.}]}}, 
     {Hue[1.4300000000000002`], EdgeForm[None], RectangleBox[{4.67, 3.74}, {5.33, 4.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"5/2\"\>",
         StripOnInput->False,
         FontSize->20], {5., 4.}]}}, InsetBox[
      StyleBox["\<\"\[CenterEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {6., 4.}], 
     {Hue[1.25], EdgeForm[None], RectangleBox[{1.67, 2.74}, {2.33, 3.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"2/3\"\>",
         StripOnInput->False,
         FontSize->20], {2., 3.}]}}, 
     {Hue[1.34], EdgeForm[None], RectangleBox[{2.67, 2.74}, {3.33, 3.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"3/3\"\>",
         StripOnInput->False,
         FontSize->20], {3., 3.}]}}, 
     {Hue[1.4300000000000002`], EdgeForm[None], RectangleBox[{3.67, 2.74}, {4.33, 3.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"4/3\"\>",
         StripOnInput->False,
         FontSize->20], {4., 3.}]}}, 
     {Hue[1.52], EdgeForm[None], RectangleBox[{4.67, 2.74}, {5.33, 3.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"5/3\"\>",
         StripOnInput->False,
         FontSize->20], {5., 3.}]}}, InsetBox[
      StyleBox["\<\"\[CenterEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {6., 3.}], 
     {Hue[1.34], EdgeForm[None], RectangleBox[{1.67, 1.74}, {2.33, 2.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"2/4\"\>",
         StripOnInput->False,
         FontSize->20], {2., 2.}]}}, 
     {Hue[1.4300000000000002`], EdgeForm[None], RectangleBox[{2.67, 1.74}, {3.33, 2.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"3/4\"\>",
         StripOnInput->False,
         FontSize->20], {3., 2.}]}}, 
     {Hue[1.52], EdgeForm[None], RectangleBox[{3.67, 1.74}, {4.33, 2.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"4/4\"\>",
         StripOnInput->False,
         FontSize->20], {4., 2.}]}}, 
     {Hue[1.6099999999999999`], EdgeForm[None], RectangleBox[{4.67, 1.74}, {5.33, 2.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"5/4\"\>",
         StripOnInput->False,
         FontSize->20], {5., 2.}]}}, InsetBox[
      StyleBox["\<\"\[CenterEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {6., 2.}], 
     {Hue[1.4300000000000002`], EdgeForm[None], RectangleBox[{1.67, 0.74}, {2.33, 1.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"2/5\"\>",
         StripOnInput->False,
         FontSize->20], {2., 1.}]}}, 
     {Hue[1.52], EdgeForm[None], RectangleBox[{2.67, 0.74}, {3.33, 1.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"3/5\"\>",
         StripOnInput->False,
         FontSize->20], {3., 1.}]}}, 
     {Hue[1.6099999999999999`], EdgeForm[None], RectangleBox[{3.67, 0.74}, {4.33, 1.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"4/5\"\>",
         StripOnInput->False,
         FontSize->20], {4., 1.}]}}, 
     {Hue[1.7], EdgeForm[None], RectangleBox[{4.67, 0.74}, {5.33, 1.31},
       RoundingRadius->0.11], 
      {GrayLevel[0], InsetBox[
        StyleBox["\<\"5/5\"\>",
         StripOnInput->False,
         FontSize->20], {5., 1.}]}}, InsetBox[
      StyleBox["\<\"\[CenterEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {6., 1.}], InsetBox[
      StyleBox["\<\"\[VerticalEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {2., 0.}], InsetBox[
      StyleBox["\<\"\[VerticalEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {3., 0.}], InsetBox[
      StyleBox["\<\"\[VerticalEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {4., 0.}], InsetBox[
      StyleBox["\<\"\[VerticalEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {5., 0.}], InsetBox[
      StyleBox["\<\"\[DescendingEllipsis]\"\>",
       StripOnInput->False,
       FontSize->20], {6., 0.}]}},
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJx1kTEKgDAMRT9OHTt0yCp4D3sGjyA4e3WPUKWN0KcNlM9ryG/SzPu5HZOk
5T6P1rjWqin3HBsr/+dD7pV5r4uDPN/91Lcw5OkbwNQENrD7cR76ck5nAwvK
+9G/OhvYlf/OPY32aODXV+hP6E/oT+hPBYZrICY=
     "]]& ],
  AspectRatio->0.7,
  FrameTicks->None,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{
  3.4761916468125*^9, 3.476465009265625*^9, 3.476632067484375*^9, 
   3.47665638128125*^9, 3.479043020104844*^9, {3.479066430625*^9, 
   3.4790664674375*^9}, 3.479066501796875*^9, 3.4790666645625*^9, 
   3.4790667585625*^9, 3.479066934637438*^9, {3.479067593356759*^9, 
   3.4790676511781397`*^9}, {3.479067688557847*^9, 3.479067729934965*^9}, {
   3.479067773718457*^9, 3.479067856244497*^9}, {3.47906791351965*^9, 
   3.4790679799213233`*^9}, 3.479068115286372*^9, {3.479068177618885*^9, 
   3.479068233825966*^9}, {3.479068321660274*^9, 3.479068346083869*^9}, 
   3.479327069046875*^9},
 CellID->817400576,ExpressionUUID->"6630db1e-5b01-5346-9ec6-6d1500e82705"]
}, {2}]],

Cell["\<\
Both the numerator and the denominator of the fraction are taken from an \
infinite (but countable) set, and rather than trying to treat one infinity \
first, as in {1/1, 2/1, 3/1, \[Ellipsis] 1/2, 2/2, 3/2, \[Ellipsis], 1/3, \
2/3, 3/3, \[Ellipsis] }, this method allows growth in both directions to \
continue indefinitely, following a defined pattern while clearly including \
all possible combinations. One drawback of this method as applied to \
fractions is that equivalent fractions get counted multiple times. For \
example 1/1 = 2/2 = 3/3 = \[Ellipsis], 1/2 = 2/4 = 3/6 = \[Ellipsis], etc. \
Another (possible?) drawback is that for a given pair of integers {a,b}, a/b \
occurs in the list far earlier than b/a.\
\>", "Text",
 CellChangeTimes->{{3.474456341544903*^9, 3.4744563425920057`*^9}, {
   3.474456398463535*^9, 3.474456487121825*^9}, 3.474468701173494*^9, 
   3.474476769370862*^9, {3.4746472175696144`*^9, 3.474647225960615*^9}, {
   3.476217902363003*^9, 3.476217928333581*^9}, {3.476217994322601*^9, 
   3.476217998526022*^9}, {3.47645586321875*^9, 3.47645588934375*^9}, {
   3.476456062984375*^9, 3.47645607159375*^9}, {3.476456292765625*^9, 
   3.47645633409375*^9}, {3.476456795890625*^9, 3.47645679653125*^9}, {
   3.4766368954375*^9, 3.47663692571875*^9}, {3.4766370745625*^9, 
   3.47663708025*^9}, {3.47665650090625*^9, 3.476656527828125*^9}, {
   3.479049229457242*^9, 3.4790492296447415`*^9}, 3.4791596029761176`*^9, {
   3.47915999901424*^9, 3.4791600129992437`*^9}, {3.9410387740722294`*^9, 
   3.941038783568136*^9}, {3.9410391831419106`*^9, 3.941039194349226*^9}, {
   3.9410394148535767`*^9, 
   3.9410395190266075`*^9}},ExpressionUUID->"6caa9b1f-13a6-e94b-b145-\
1237fb772543"],

Cell["\<\
See also:
https://demonstrations.wolfram.com/EnumeratingTheRationalNumbers/
https://demonstrations.wolfram.com/APathThroughTheLatticePointsInAQuadrant/\
\>", "Text",
 CellChangeTimes->{{3.9410429310623913`*^9, 3.9410429343459444`*^9}, {
  3.9410435136925735`*^9, 
  3.941043525551731*^9}},ExpressionUUID->"5a01bd67-3f1a-7c44-a114-\
e24bd249aa08"],

Cell["\<\
The mathematics literature contains many examples of non-repetitive ways of \
ordering the rationals, but none of the non-repetitive sequences has the \
simple clarity of the diagonal arrangement. Is it so bad to have duplicates \
and then be forced to ignore or drop them later? This is an important \
question that will return in various situations.  Although a little \
inelegant, the existence of duplicates hurts nothing essential, so we'll \
consider non-repetition a desirable but not necessary feature.\
\>", "Text",
 CellChangeTimes->{{3.474456341544903*^9, 3.4744563425920057`*^9}, {
  3.474456398463535*^9, 3.474456520347165*^9}, {3.4764408626875*^9, 
  3.47644088859375*^9}, {3.476632277953125*^9, 3.47663227953125*^9}, {
  3.47904922969162*^9, 3.47904922972287*^9}, {3.4790497052462263`*^9, 
  3.479049726247704*^9}, {3.479049861788496*^9, 3.4790498934626*^9}, {
  3.941039196851385*^9, 
  3.941039204388719*^9}},ExpressionUUID->"62c65762-4c25-2b48-9cc2-\
1c46b04b3f5c"],

Cell["What is essential then?", "Text",
 CellChangeTimes->{{3.474456341544903*^9, 3.4744563425920057`*^9}, {
   3.474456398463535*^9, 3.474456523660323*^9}, {3.4746472492116575`*^9, 
   3.4746472497585564`*^9}, 
   3.941038726891651*^9},ExpressionUUID->"ce2905a8-d70b-fe44-b9b4-\
0e118b863595"],

Cell[TextData[{
 "The non-ambiguity of the list: it can be generated out to any desired \
number of elements, and the order can be unambiguously described. Here the \
fractions are listed in increasing order first by ",
 StyleBox["sum",
  FontSlant->"Italic"],
 " of numerator and denominator (as colored in the figure above), next by ",
 StyleBox["numerator",
  FontSlant->"Italic"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.474456341544903*^9, 3.4744563425920057`*^9}, {
  3.474456398463535*^9, 3.474456523660323*^9}, {3.4746472492116575`*^9, 
  3.4746472497585564`*^9}, {3.9410387327332077`*^9, 3.941038734483473*^9}, {
  3.941039314439745*^9, 
  3.941039317573799*^9}},ExpressionUUID->"c0a8a535-1105-4541-b946-\
16a3fd27b0cd"],

Cell[TextData[{
 "The existence of a ",
 StyleBox["successor",
  FontSlant->"Italic"],
 " algorithm: from a given fraction ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "/", "d"}], TraditionalForm]],ExpressionUUID->
  "b8c89222-debd-f34a-beed-7380ab41b7d2"],
 ", can the next fraction in the list be found? Yes, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "22c44e0c-3ef3-6f46-9ec4-e442265704c8"],
 ", the next fraction is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"d", "-", "1"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "6395fb0c-e4bf-8942-bd95-34bd016e70bf"],
 ", else if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "aa243ccd-85a3-1346-839c-f810a30e3ebb"],
 ", it is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "375faa80-7cf3-554a-9ad6-11e1778ff366"],
 ". This means that we do not need to generate the whole list at once, we can \
proceed one step at a time, perhaps testing or making some use of the \
fractions as they are generated. A small modification to the successor \
algorithm lets us easily bypass duplicates: if the successor found is not a \
fraction reduced to lowest terms, advance to ",
 StyleBox["its",
  FontSlant->"Italic"],
 " successor."
}], "ItemNumbered",
 CellChangeTimes->{{3.474456341544903*^9, 3.4744563425920057`*^9}, {
   3.474456398463535*^9, 3.474456523660323*^9}, {3.4746472492116575`*^9, 
   3.4746472497585564`*^9}, {3.9410387327332077`*^9, 3.941038741390938*^9}, {
   3.94103935186915*^9, 3.941039381877508*^9}, 3.941039599530512*^9, {
   3.9410396406361485`*^9, 
   3.9410396415198784`*^9}},ExpressionUUID->"a5bf9784-479a-bc48-8958-\
7f17a0dcfe02"],

Cell[TextData[{
 "The existence of ",
 StyleBox["rank",
  FontSlant->"Italic"],
 " and ",
 StyleBox["unrank",
  FontSlant->"Italic"],
 " functions, to convert back and forth between the list and an ordered list \
of integers.  (Given such functions the definition for ",
 StyleBox["successor",
  FontSlant->"Italic"],
 "[",
 StyleBox["element",
  FontSlant->"Italic"],
 "] might be as simple as ",
 StyleBox["unrank",
  FontSlant->"Italic"],
 "[",
 StyleBox["rank",
  FontSlant->"Italic"],
 "[",
 StyleBox["element",
  FontSlant->"Italic"],
 "]+1], if no direct method of advancing through the enumeration has been \
found.) For the diagonal ordering, we must determine which diagonal we want \
and then which element. The fraction ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "/", "d"}], TraditionalForm]],ExpressionUUID->
  "59bc77a1-5e57-314e-845c-732cf16f041c"],
 " appears on the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", "+", "d", "-", "1"}], ")"}], "th"], TraditionalForm]],
  ExpressionUUID->"46c8bb4d-686d-8d40-b4fc-c242c0c39824"],
 " diagonal and is element ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "8a689436-90f4-d54f-8920-bcdb1a149618"],
 " on that diagonal. An easy way to do this is create a function to generate \
the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "91ebae02-d683-d748-bdab-8ca284e80d4e"],
 " triangular number (the total number of entries in the previous diagonals), \
then add ",
 StyleBox["n",
  FontSlant->"Italic"],
 ". For an implementation of successor, rank and unrank for the Cantor \
enumeration of the rationals, see the paper referenced above."
}], "ItemNumbered",
 CellChangeTimes->{{3.474456341544903*^9, 3.4744563425920057`*^9}, {
   3.474456398463535*^9, 3.474456523660323*^9}, {3.4746472492116575`*^9, 
   3.4746472497585564`*^9}, {3.9410387327332077`*^9, 3.941038741390938*^9}, {
   3.94103935186915*^9, 3.941039381877508*^9}, 3.94103960117791*^9, {
   3.9410396455998764`*^9, 3.9410396638260803`*^9}, {3.941039947068579*^9, 
   3.941039956602347*^9}, {3.941119937917647*^9, 
   3.941119964787161*^9}},ExpressionUUID->"c879b71a-3bbc-174f-b779-\
3eefa7a3ee19"]
}, Open  ]],

Cell[TextData[StyleBox["Nonrepetitive Indexing of the Rationals",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
   3.941032778553177*^9, 3.941032787528918*^9}, 
   3.9410462860321274`*^9},ExpressionUUID->"25c005ef-f198-4041-8af4-\
bb794df09fe6"],

Cell[CellGroupData[{

Cell["... based on Prime Factorization", "Subsubsection",
 CellChangeTimes->{{3.941033204890632*^9, 3.941033269166301*^9}, {
  3.941040095615791*^9, 
  3.941040099713228*^9}},ExpressionUUID->"91d43454-dfdc-4a46-8c74-\
dff82a8138af"],

Cell[TextData[{
 "As already mentioned, there are 1-1 and onto (bijective) mappings between \
the set of rationals (either all rationals or the positive rationals) and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalZ]", "+"], TraditionalForm]],
  ExpressionUUID->"ab7fb9fa-27a3-604c-85eb-8d27ffdf8b74"],
 ", the set of positive integers. One elegant algorithm relies on the \
Fundamental Theorem of Arithmetic (also known as the \
Unique-Prime-Factorization Theorem): any integer greater than 1 can be \
written as a unique product of prime numbers (up to ordering of the factors). \
For example,"
}], "Text",
 CellChangeTimes->{{3.4762015390090523`*^9, 3.476201718509097*^9}, {
   3.476201790267821*^9, 3.476201835788981*^9}, {3.4762019558660808`*^9, 
   3.476201959163357*^9}, {3.476209368921875*^9, 3.476209371625*^9}, {
   3.476394859181329*^9, 3.476394880687659*^9}, {3.47644154671875*^9, 
   3.476441579515625*^9}, {3.476456390515625*^9, 3.476456449953125*^9}, 
   3.476456810125*^9, {3.476632797640625*^9, 3.47663280103125*^9}, {
   3.479049215019557*^9, 3.479049215910193*^9}, 3.479160284733034*^9, {
   3.941041425331018*^9, 3.941041425641468*^9}, {3.941119978788958*^9, 
   3.94111998893301*^9}},ExpressionUUID->"134c5aa5-045c-f94b-af47-\
cf147ffd0cfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"showFactorization", "=", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"#", ",", "\"\< \[Equal] \>\"", ",", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"Superscript", " ", "@@@", " ", 
          RowBox[{"FactorInteger", "[", "#", "]"}]}], ",", 
         "\"\<\[Times]\>\""}], "]"}]}], "}"}], "]"}], "&"}]}], " ", 
  ";"}], "\n", 
 RowBox[{"showFactorization", "[", "3083080", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.476201980447194*^9, 3.47620198304126*^9}, {
  3.476202315513002*^9, 3.476202339119962*^9}, {3.476202810318458*^9, 
  3.4762028387745*^9}, {3.476202920782897*^9, 3.47620297531973*^9}, {
  3.476203006526051*^9, 3.476203140009791*^9}, {3.476203245686211*^9, 
  3.476203313568581*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"393543dd-762e-c645-81a8-cd096efbfd86"],

Cell[BoxData[
 TemplateBox[{"3083080", "\" \[Equal] \"", 
   TemplateBox[{"\[Times]", "\"\[Times]\"", 
     TemplateBox[{"2", "3"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"5", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"7", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"11", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"13", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]}, 
    "RowWithSeparators"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.9410454420825005`*^9, 3.941046389182413*^9, 
  3.941046642064493*^9, 3.941121536449408*^9, 3.941201047710004*^9, 
  3.94120232718575*^9, 3.948377513900135*^9, 3.9483776646336136`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"638dcca2-861f-c74a-b031-d21243ecbc0f"]
}, Open  ]],

Cell["\<\
If the prime numbers are listed in order, the sequence of exponents provides \
a unique way to characterize each positive integer. For the above example the \
sequence is {3, 1, 2, 2, 1, 0, 0, 0, \[Ellipsis]}. But the same can be said \
of all possible numerators and denominators of rational numbers, and \
furthermore, when a fraction is reduced to lowest terms no prime factor will \
appear in both the numerator and denominator, a fact which motivates the \
following algorithm, in which odd exponents define factors of the numerator, \
even exponents the denominator:\
\>", "Text",
 CellChangeTimes->{{3.476203489178364*^9, 3.476203582743261*^9}, {
   3.476203616415998*^9, 3.4762036486511984`*^9}, {3.476203692417944*^9, 
   3.476203882164072*^9}, {3.4762047766907988`*^9, 3.4762047803161936`*^9}, 
   3.476205037828583*^9, 3.476217939037459*^9, 3.4766328466875*^9, {
   3.479049216878956*^9, 3.479049218503977*^9}, 3.4791602888582983`*^9, {
   3.47931080033425*^9, 3.479310802568625*^9}, 
   3.941120065256794*^9},ExpressionUUID->"ad59e40f-dfaa-d742-b995-\
ad74956ff43c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerToRationalByFactorization", "[", "n_Integer", "]"}], ":=", 
  " ", 
  RowBox[{"Times", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["#1", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "#2", "]"}], ",", 
         RowBox[{
          RowBox[{"-", "#2"}], "/", "2"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}]], "&"}], "@@@", 
     RowBox[{"FactorInteger", "[", "n", "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.476203344814781*^9, 3.476203400745479*^9}, {
  3.476203447333563*^9, 3.476203449927361*^9}, {3.476203917323022*^9, 
  3.476203924823598*^9}, {3.476204794974038*^9, 3.47620482432098*^9}, {
  3.476205262165488*^9, 3.476205270666413*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"944f28d0-9807-b94d-a5d9-d5cb8730b9e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerToRationalByFactorization", "[", 
  RowBox[{
   SuperscriptBox["2", "5"], 
   SuperscriptBox["3", "4"], 
   SuperscriptBox["5", "3"], 
   SuperscriptBox["7", "2"], 
   SuperscriptBox["11", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.476204415183166*^9, 3.476204433075623*^9}, {
   3.47620511483696*^9, 3.476205168467795*^9}, 
   3.476205274291807*^9},ExpressionUUID->"e3034b0b-be20-494d-82b7-\
d1ad58666c8f"],

Cell[BoxData[
 FractionBox["2200", "63"]], "Output",
 CellChangeTimes->{{3.476204419027309*^9, 3.476204433606927*^9}, 
   3.476204828508936*^9, {3.476205155950808*^9, 3.47620516938977*^9}, 
   3.476205275510689*^9, 3.47646503096875*^9, 3.47665673528125*^9, 
   3.47932717009375*^9},
 CellID->259922360,ExpressionUUID->"67e23a94-b4a4-ac43-875f-bbf3afa72f69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showFactorization", "[", 
  RowBox[{"2200", "/", "63"}], "]"}]], "Input",
 CellChangeTimes->{{3.941041603618034*^9, 3.941041606603796*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7a38b2f0-0229-4248-b06b-b1cb5a400d41"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["2200", "63"], "\" \[Equal] \"", 
   TemplateBox[{"\[Times]", "\"\[Times]\"", 
     TemplateBox[{"2", "3"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"3", 
       RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"5", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"7", 
       RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
     TemplateBox[{"11", "1"}, "Superscript", SyntaxForm -> SuperscriptBox]}, 
    "RowWithSeparators"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.9410416072499905`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3603a768-0356-c546-843a-d7bfce563a33"]
}, Open  ]],

Cell["\<\
Note that even exponents in the factored integer are halved and then used as \
the exponents of the same prime factors in the denominator, odd exponents are \
halved, rounded up and similarly used to specify the numerator. Of course \
this procedure is not unique, the treatment of odd and even exponents could \
just as well be reversed. A disadvantage of this method of ordering the \
rationals is the order itself: it preferentially treats integers (and in \
general, small denominator fractions) before others.\
\>", "Text",
 CellChangeTimes->{{3.476205236443939*^9, 3.476205239272372*^9}, {
   3.476205289012158*^9, 3.476205404227816*^9}, {3.476205494909557*^9, 
   3.4762055351951876`*^9}, {3.476207532671875*^9, 3.476207533546875*^9}, {
   3.4762075689375*^9, 3.476207692296875*^9}, {3.47620774871875*^9, 
   3.47620778771875*^9}, {3.476207846*^9, 3.476207850046875*^9}, {
   3.476207888015625*^9, 3.47620788996875*^9}, {3.476208813265625*^9, 
   3.47620894234375*^9}, {3.47620898384375*^9, 3.47620921546875*^9}, {
   3.476456470921875*^9, 3.476456472*^9}, {3.47645688659375*^9, 
   3.47645689359375*^9}, {3.47663714734375*^9, 3.476637148484375*^9}, {
   3.47663720103125*^9, 3.47663720290625*^9}, {3.479049218566478*^9, 
   3.4790492186446037`*^9}, 3.4791600627358475`*^9, {3.941042279651149*^9, 
   3.941042340488346*^9}},ExpressionUUID->"0c2f3d84-ad90-f04e-8b4d-\
50a3161ada70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerToRationalByFactorization", " ", "/@", " ", 
  RowBox[{"Range", "[", "50", "]"}]}]], "Input",
 CellChangeTimes->{{3.4762089555625*^9, 
  3.476208978046875*^9}},ExpressionUUID->"3a9d8b64-b285-0344-b0ac-\
fb0d627148da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", 
   FractionBox["1", "2"], ",", "5", ",", "6", ",", "7", ",", "4", ",", 
   FractionBox["1", "3"], ",", "10", ",", "11", ",", 
   FractionBox["3", "2"], ",", "13", ",", "14", ",", "15", ",", 
   FractionBox["1", "4"], ",", "17", ",", 
   FractionBox["2", "3"], ",", "19", ",", 
   FractionBox["5", "2"], ",", "21", ",", "22", ",", "23", ",", "12", ",", 
   FractionBox["1", "5"], ",", "26", ",", "9", ",", 
   FractionBox["7", "2"], ",", "29", ",", "30", ",", "31", ",", "8", ",", 
   "33", ",", "34", ",", "35", ",", 
   FractionBox["1", "6"], ",", "37", ",", "38", ",", "39", ",", "20", ",", 
   "41", ",", "42", ",", "43", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["5", "3"], ",", "46", ",", "47", ",", 
   FractionBox["3", "4"], ",", 
   FractionBox["1", "7"], ",", 
   FractionBox["2", "5"]}], "}"}]], "Output",
 CellChangeTimes->{{3.476208956578125*^9, 3.476208978515625*^9}, 
   3.4764650328125*^9, 3.47665675425*^9, 3.479068832896822*^9, 
   3.479327174515625*^9},
 CellID->572674672,ExpressionUUID->"ac68ea9a-2fd9-4544-b883-745e4f50bf80"]
}, Open  ]],

Cell["\<\
The ordering function is well-defined, 1-1 and onto, but for example, 2/5 is \
far later in the list than 5/2, appearing after the integers 47 and 17, \
respectively. This may not necessarily be appropriate for some applications.\
\>", "Text",
 CellChangeTimes->{{3.476205236443939*^9, 3.476205239272372*^9}, {
   3.476205289012158*^9, 3.476205404227816*^9}, {3.476205494909557*^9, 
   3.4762055351951885`*^9}, {3.476207532671875*^9, 3.476207533546875*^9}, {
   3.4762075689375*^9, 3.476207692296875*^9}, {3.47620774871875*^9, 
   3.47620778771875*^9}, {3.476207846*^9, 3.476207850046875*^9}, {
   3.476207888015625*^9, 3.47620788996875*^9}, {3.476208813265625*^9, 
   3.47620894234375*^9}, {3.47620898384375*^9, 3.476209259046875*^9}, {
   3.476441692015625*^9, 3.476441749203125*^9}, 3.479049218691479*^9, 
   3.479160087924476*^9},ExpressionUUID->"3acb980a-89b8-7c48-b628-\
9486e8635df3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calkin-Wilf Tree", "Subsubsection",
 CellChangeTimes->{{3.941033204890632*^9, 3.9410332986328835`*^9}, {
   3.9410402446434917`*^9, 3.941040254197288*^9}, 
   3.941040336884804*^9},ExpressionUUID->"45bf0bf7-6b2e-4c34-8478-\
9375e22904b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
            BoxBaselineShift->-0.25,
            BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
           
           FontColor->RGBColor[
            0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
          ShowStringCharacters->False,
          FontFamily->"Source Sans Pro Black",
          FontSize->0.65 Inherited,
          FontWeight->"Heavy",
          PrivateFontOptions->{"OperatorSubstitution"->False}], 
         StyleBox[
          RowBox[{
           StyleBox["\<\"CalkinWilfTree\"\>", "ResourceFunctionLabel"], " "}],
          ShowAutoStyles->False,
          ShowStringCharacters->False,
          FontSize->0.9 Inherited,
          FontColor->GrayLevel[0.1]]}
       },
       GridBoxSpacings->{"Columns" -> {{0.25}}}],
      Alignment->Left,
      BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
      BaselinePosition->Baseline,
      FrameMargins->{{3, 0}, {0, 0}}],
     Background->RGBColor[0.968627, 0.976471, 0.984314],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
     RoundingRadius->4],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "CalkinWilfTree"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["CalkinWilfTree"],
   BoxID -> "CalkinWilfTree",
   Selectable->False], "[", "4", "]"}]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->298664010,ExpressionUUID->"e72a88cf-808f-9342-83ea-cfe96a74984f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[1, {
       Tree[
        Rational[1, 2], {
         Tree[
          Rational[1, 3], {
           Tree[
            Rational[1, 4], {
             Tree[
              Rational[1, 5], None], 
             Tree[
              Rational[5, 4], None]}], 
           Tree[
            Rational[4, 3], {
             Tree[
              Rational[4, 7], None], 
             Tree[
              Rational[7, 3], None]}]}], 
         Tree[
          Rational[3, 2], {
           Tree[
            Rational[3, 5], {
             Tree[
              Rational[3, 8], None], 
             Tree[
              Rational[8, 5], None]}], 
           Tree[
            Rational[5, 2], {
             Tree[
              Rational[5, 7], None], 
             Tree[
              Rational[7, 2], None]}]}]}], 
       Tree[2, {
         Tree[
          Rational[2, 3], {
           Tree[
            Rational[2, 5], {
             Tree[
              Rational[2, 7], None], 
             Tree[
              Rational[7, 5], None]}], 
           Tree[
            Rational[5, 3], {
             Tree[
              Rational[5, 8], None], 
             Tree[
              Rational[8, 3], None]}]}], 
         Tree[3, {
           Tree[
            Rational[3, 4], {
             Tree[
              Rational[3, 7], None], 
             Tree[
              Rational[7, 4], None]}], 
           Tree[4, {
             Tree[
              Rational[4, 5], None], 
             Tree[5, None]}]}]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.017480889606225448`], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.330127018922194, 2.6336651193609364`}, {
         2.0207259421636903`, 1.9752488395207024`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.330127018922194, 2.6336651193609364`}, {6.639528095680697,
          1.9752488395207024`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.0207259421636903`, 1.9752488395207024`}, {
         0.8660254037844387, 1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.0207259421636903`, 1.9752488395207024`}, {
         3.1754264805429417`, 1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.8660254037844387, 1.3168325596804682`}, {
         0.2886751345948129, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.8660254037844387, 1.3168325596804682`}, {
         1.4433756729740645`, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.2886751345948129, 0.6584162798402342}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.2886751345948129, 0.6584162798402342}, {
         0.5773502691896258, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4433756729740645`, 0.6584162798402342}, {
         1.1547005383792517`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4433756729740645`, 0.6584162798402342}, {
         1.7320508075688774`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1754264805429417`, 1.3168325596804682`}, {
         2.598076211353316, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1754264805429417`, 1.3168325596804682`}, {
         3.7527767497325675`, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.598076211353316, 0.6584162798402342}, {
         2.3094010767585034`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.598076211353316, 0.6584162798402342}, {2.886751345948129, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.7527767497325675`, 0.6584162798402342}, {
         3.464101615137755, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.7527767497325675`, 0.6584162798402342}, {
         4.041451884327381, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.639528095680697, 1.9752488395207024`}, {5.484827557301445,
          1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.639528095680697, 1.9752488395207024`}, {7.794228634059948,
          1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.484827557301445, 1.3168325596804682`}, {4.907477288111819,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.484827557301445, 1.3168325596804682`}, {6.062177826491071,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.907477288111819, 0.6584162798402342}, {4.618802153517007, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.907477288111819, 0.6584162798402342}, {5.196152422706632, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.062177826491071, 0.6584162798402342}, {5.773502691896258, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.062177826491071, 0.6584162798402342}, {
         6.3508529610858835`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.794228634059948, 1.3168325596804682`}, {7.216878364870323,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.794228634059948, 1.3168325596804682`}, {8.371578903249574,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.216878364870323, 0.6584162798402342}, {6.92820323027551, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.216878364870323, 0.6584162798402342}, {7.505553499465135, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{8.371578903249574, 0.6584162798402342}, {8.082903768654761, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{8.371578903249574, 0.6584162798402342}, {8.660254037844387, 
         0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["1",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.330127018922194, 2.6336651193609364}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.0207259421636903, 1.9752488395207024}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.8660254037844387, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.2886751345948129, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.5773502691896258, 0.}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["4", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.4433756729740645, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["4", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.1547005383792517, 0.}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.7320508075688774, 0.}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.1754264805429417, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.598076211353316, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "8"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.3094010767585034, 0.}],
        "DynamicName",
        BoxID -> "VertexID$12"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["8", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.886751345948129, 0.}],
        "DynamicName",
        BoxID -> "VertexID$13"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.7527767497325675, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$14"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.464101615137755, 0.}],
        "DynamicName",
        BoxID -> "VertexID$15"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.041451884327381, 0.}],
        "DynamicName",
        BoxID -> "VertexID$16"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.639528095680697, 1.9752488395207024}],
        "DynamicName",
        BoxID -> "VertexID$17"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["2", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {5.484827557301445, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$18"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["2", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.907477288111819, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$19"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["2", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.618802153517007, 0.}],
        "DynamicName",
        BoxID -> "VertexID$20"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.196152422706632, 0.}],
        "DynamicName",
        BoxID -> "VertexID$21"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.062177826491071, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$22"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "8"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.773502691896258, 0.}],
        "DynamicName",
        BoxID -> "VertexID$23"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["8", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {6.3508529610858835, 0.}],
        "DynamicName",
        BoxID -> "VertexID$24"], 
       TagBox[InsetBox[
         FrameBox["3",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.794228634059948, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$25"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.216878364870323, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$26"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {6.92820323027551, 0.}],
        "DynamicName",
        BoxID -> "VertexID$27"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {7.505553499465135, 0.}],
        "DynamicName",
        BoxID -> "VertexID$28"], 
       TagBox[InsetBox[
         FrameBox["4",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {8.371578903249574, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$29"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["4", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {8.082903768654761, 0.}],
        "DynamicName",
        BoxID -> "VertexID$30"], 
       TagBox[InsetBox[
         FrameBox["5",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {8.660254037844387, 0.}],
        "DynamicName",
        BoxID -> "VertexID$31"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.9410402607175674`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",ExpressionUUID->"f610ec1d-f9b1-e145-87ba-d73627abe043"]
}, Open  ]],

Cell["\<\
https://demonstrations.wolfram.com/CalkinWilfTreeOfFractions/\
\>", "Text",
 CellChangeTimes->{
  3.9410412694999866`*^9},ExpressionUUID->"591d049d-7110-c042-bc01-\
4d5700cd3a0d"],

Cell["https://demonstrations.wolfram.com/TheTreeOfAllFractions/", "Text",
 CellChangeTimes->{
  3.9410425962829514`*^9},ExpressionUUID->"5ee0dc5a-779b-d44f-8bf6-\
e67d83093c22"],

Cell[TextData[{
 "The Calkin\[Dash]Wilf binary tree includes all positive fractions, already \
reduced to simplest terms. It has nodes of type ",
 Cell[BoxData[
  FormBox[
   FractionBox["a", "b"], TraditionalForm]],ExpressionUUID->
  "4282d446-23a9-cb4a-a164-5786fa8b59b3"],
 " (starting with ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "1"], TraditionalForm]],ExpressionUUID->
  "1af474a6-3ea7-104c-9e88-cf9d9f40bcde"],
 ") with subnodes ",
 Cell[BoxData[
  FormBox[
   FractionBox["a", 
    RowBox[{"a", "+", "b"}]], TraditionalForm]],ExpressionUUID->
  "cc2e5b0f-0f20-514a-8b1a-3a9d44ba87da"],
 " and ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"a", "+", "b"}], "b"], TraditionalForm]],ExpressionUUID->
  "eb45a89e-f5f9-9849-ae5f-adf1b598c86a"],
 "."
}], "Text",
 CellChangeTimes->{{3.941040497378736*^9, 3.941040506041885*^9}, {
   3.9410406502775745`*^9, 3.941040676349083*^9}, 3.941040720605873*^9, {
   3.941040863299768*^9, 3.941040911866268*^9}, {3.9410410065890617`*^9, 
   3.941041014076242*^9}, {3.9411201743610916`*^9, 
   3.94112020242355*^9}},ExpressionUUID->"28cacb00-e6c7-a243-a597-\
01fd70c49e02"],

Cell["\<\
Note: this enumeration can be expressed in terms of the hyperbinary function.\
\>", "Text",
 CellChangeTimes->{{3.941040497378736*^9, 3.941040506041885*^9}, {
   3.9410406502775745`*^9, 3.941040676349083*^9}, 
   3.941040720605873*^9},ExpressionUUID->"9a805b54-18af-d848-8b6c-\
e1093c99593a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hb", "[", "0", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hb", "[", 
    RowBox[{"n_", "?", "OddQ"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"hb", "[", "n", "]"}], " ", "=", " ", 
    RowBox[{"hb", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "/", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "[", 
   RowBox[{"n_", "?", "EvenQ"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"hb", "[", "n", "]"}], " ", "=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", "=", 
       RowBox[{"n", "/", "2"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"hb", "[", 
       RowBox[{"k", "-", "1"}], "]"}], "+", 
      RowBox[{"hb", "[", "k", "]"}]}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.476209574765625*^9, 3.476209575359375*^9}, {
   3.476209629*^9, 3.47620972828125*^9}, {3.476209768171875*^9, 
   3.476209826890625*^9}, 3.476209876734375*^9, {3.47621002021875*^9, 
   3.476210048515625*^9}, 3.476246819586032*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"54a2abdf-0c8e-fa44-8e68-77aee393c2a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hb", "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "25"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.47620979953125*^9, 
  3.47620980565625*^9}},ExpressionUUID->"0bba6102-7087-ca4e-8240-\
d938c4f8feff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "1", ",", "3", ",", "2", ",", "3", ",", "1", 
   ",", "4", ",", "3", ",", "5", ",", "2", ",", "5", ",", "3", ",", "4", ",", 
   "1", ",", "5", ",", "4", ",", "7", ",", "3", ",", "8", ",", "5", ",", "7", 
   ",", "2", ",", "7", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.476209806109375*^9, 3.476209829140625*^9}, 
   3.476209879890625*^9, 3.4762100540625*^9, 3.476465034453125*^9, 
   3.476656762359375*^9, {3.479068880841842*^9, 3.479068897454408*^9}, 
   3.47932718509375*^9},
 CellID->401893439,ExpressionUUID->"80413c14-28af-c543-b097-02c09b64aeea"]
}, Open  ]],

Cell[TextData[{
 "(The additional \"",
 StyleBox["hb[n]=", "MR"],
 "\" in the recursion calls is ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s standard method of saving the results of all function calls so they will \
not need to be recalculated. Its effect can be seen by executing \"",
 StyleBox["?hb", "MR"],
 "\".)"
}], "Text",
 CellChangeTimes->{{3.476210112921875*^9, 3.476210194921875*^9}, {
   3.476637628234375*^9, 3.4766376699375*^9}, 3.479049218769605*^9, {
   3.479310986006125*^9, 
   3.47931099414675*^9}},ExpressionUUID->"0dbe738e-1924-7348-8fd6-\
94c9d7601c31"],

Cell[BoxData[
 RowBox[{"?", "hb"}]], "Input",
 CellChangeTimes->{{3.476210090390625*^9, 
  3.476210091125*^9}},ExpressionUUID->"2437085a-5702-1e4b-bf60-13a12c1ef170"],

Cell["\<\
Now the ordered list of rationals is obtained by forming ratios of adjacent \
elements of the hyperbinary list. Specifically,\
\>", "Text",
 CellChangeTimes->{{3.476210256390625*^9, 3.47621028921875*^9}, {
   3.47621033390625*^9, 3.476210517609375*^9}, {3.47644183553125*^9, 
   3.47644184603125*^9}, 
   3.479049218832106*^9},ExpressionUUID->"e70fa728-f328-5e43-b252-\
eff23700f693"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hbQ", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"hb", "[", 
    RowBox[{"n", "-", "1"}], "]"}], "/", 
   RowBox[{"hb", "[", "n", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.476210256390625*^9, 3.47621028921875*^9}, {
  3.47621033390625*^9, 3.476210538484375*^9}, {3.47621060503125*^9, 
  3.4762106129375*^9}, {3.476217039971609*^9, 3.476217042863289*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f6d3debc-6a42-344e-b011-a3c92576ff60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hbQ", "/@", 
  RowBox[{"Range", "[", "25", "]"}]}]], "Input",
 CellChangeTimes->{{3.476210540875*^9, 3.476210565484375*^9}, {
  3.476217056915288*^9, 
  3.476217057806238*^9}},ExpressionUUID->"f286e00a-4c8b-6d43-b181-\
a541a52c5377"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox["1", "2"], ",", "2", ",", 
   FractionBox["1", "3"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["2", "3"], ",", "3", ",", 
   FractionBox["1", "4"], ",", 
   FractionBox["4", "3"], ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["5", "2"], ",", 
   FractionBox["2", "5"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["3", "4"], ",", "4", ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["5", "4"], ",", 
   FractionBox["4", "7"], ",", 
   FractionBox["7", "3"], ",", 
   FractionBox["3", "8"], ",", 
   FractionBox["8", "5"], ",", 
   FractionBox["5", "7"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["2", "7"], ",", 
   FractionBox["7", "5"]}], "}"}]], "Output",
 CellChangeTimes->{{3.476210553375*^9, 3.476210566875*^9}, 3.4762106151875*^9,
    3.4762170585252504`*^9, 3.476465057203125*^9, 3.476656847375*^9, 
   3.479068917583272*^9, 3.479327201890625*^9},
 CellID->247142538,ExpressionUUID->"f521170a-5521-1e4c-aeec-bbd66ea7ef9e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stern-Brocot Tree", "Subsubsection",
 CellChangeTimes->{{3.941033204890632*^9, 3.9410332986328835`*^9}, {
  3.9410402446434917`*^9, 3.941040254197288*^9}, {3.941040322353901*^9, 
  3.9410403319001637`*^9}},ExpressionUUID->"1af59ff6-a3e2-7b4d-aa12-\
394e480bb6b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
            BoxBaselineShift->-0.25,
            BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
           
           FontColor->RGBColor[
            0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
          ShowStringCharacters->False,
          FontFamily->"Source Sans Pro Black",
          FontSize->0.65 Inherited,
          FontWeight->"Heavy",
          PrivateFontOptions->{"OperatorSubstitution"->False}], 
         StyleBox[
          RowBox[{
           StyleBox["\<\"SternBrocotTree\"\>", "ResourceFunctionLabel"], " "}],
          ShowAutoStyles->False,
          ShowStringCharacters->False,
          FontSize->0.9 Inherited,
          FontColor->GrayLevel[0.1]]}
       },
       GridBoxSpacings->{"Columns" -> {{0.25}}}],
      Alignment->Left,
      BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
      BaselinePosition->Baseline,
      FrameMargins->{{3, 0}, {0, 0}}],
     Background->RGBColor[0.968627, 0.976471, 0.984314],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
     RoundingRadius->4],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "SternBrocotTree"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["SternBrocotTree"],
   BoxID -> "SternBrocotTree",
   Selectable->False], "[", "4", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.880727872594249*^9, 3.880727875257419*^9}, {
   3.880728088975924*^9, 3.880728095297911*^9}, {3.880728280132151*^9, 
   3.880728292125955*^9}, {3.880728406048326*^9, 3.880728406790352*^9}, {
   3.880729068883185*^9, 3.880729078653316*^9}, 3.880729581546561*^9, {
   3.8807296249285994`*^9, 3.880729659227239*^9}, 3.880729889399907*^9, 
   3.880729983000958*^9, 3.880731451340322*^9, 3.880731482477633*^9, 
   3.880731582662484*^9},
 CellTags->"DefaultContent",
 CellLabel->"In[4]:=",
 CellID->80188292,ExpressionUUID->"73dd0810-f6e1-594d-8466-547b5e54b8cf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[1, {
       Tree[
        Rational[1, 2], {
         Tree[
          Rational[1, 3], {
           Tree[
            Rational[1, 4], {
             Tree[
              Rational[1, 5], None], 
             Tree[
              Rational[2, 7], None]}], 
           Tree[
            Rational[2, 5], {
             Tree[
              Rational[3, 8], None], 
             Tree[
              Rational[3, 7], None]}]}], 
         Tree[
          Rational[2, 3], {
           Tree[
            Rational[3, 5], {
             Tree[
              Rational[4, 7], None], 
             Tree[
              Rational[5, 8], None]}], 
           Tree[
            Rational[3, 4], {
             Tree[
              Rational[5, 7], None], 
             Tree[
              Rational[4, 5], None]}]}]}], 
       Tree[2, {
         Tree[
          Rational[3, 2], {
           Tree[
            Rational[4, 3], {
             Tree[
              Rational[5, 4], None], 
             Tree[
              Rational[7, 5], None]}], 
           Tree[
            Rational[5, 3], {
             Tree[
              Rational[8, 5], None], 
             Tree[
              Rational[7, 4], None]}]}], 
         Tree[3, {
           Tree[
            Rational[5, 2], {
             Tree[
              Rational[7, 3], None], 
             Tree[
              Rational[8, 3], None]}], 
           Tree[4, {
             Tree[
              Rational[7, 2], None], 
             Tree[5, None]}]}]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.017480889606225448`], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.330127018922194, 2.6336651193609364`}, {
         2.0207259421636903`, 1.9752488395207024`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.330127018922194, 2.6336651193609364`}, {6.639528095680697,
          1.9752488395207024`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.0207259421636903`, 1.9752488395207024`}, {
         0.8660254037844387, 1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.0207259421636903`, 1.9752488395207024`}, {
         3.1754264805429417`, 1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.8660254037844387, 1.3168325596804682`}, {
         0.2886751345948129, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.8660254037844387, 1.3168325596804682`}, {
         1.4433756729740645`, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.2886751345948129, 0.6584162798402342}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.2886751345948129, 0.6584162798402342}, {
         0.5773502691896258, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4433756729740645`, 0.6584162798402342}, {
         1.1547005383792517`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4433756729740645`, 0.6584162798402342}, {
         1.7320508075688774`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1754264805429417`, 1.3168325596804682`}, {
         2.598076211353316, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1754264805429417`, 1.3168325596804682`}, {
         3.7527767497325675`, 0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.598076211353316, 0.6584162798402342}, {
         2.3094010767585034`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.598076211353316, 0.6584162798402342}, {2.886751345948129, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.7527767497325675`, 0.6584162798402342}, {
         3.464101615137755, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.7527767497325675`, 0.6584162798402342}, {
         4.041451884327381, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.639528095680697, 1.9752488395207024`}, {5.484827557301445,
          1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.639528095680697, 1.9752488395207024`}, {7.794228634059948,
          1.3168325596804682`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.484827557301445, 1.3168325596804682`}, {4.907477288111819,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.484827557301445, 1.3168325596804682`}, {6.062177826491071,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.907477288111819, 0.6584162798402342}, {4.618802153517007, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.907477288111819, 0.6584162798402342}, {5.196152422706632, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.062177826491071, 0.6584162798402342}, {5.773502691896258, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.062177826491071, 0.6584162798402342}, {
         6.3508529610858835`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.794228634059948, 1.3168325596804682`}, {7.216878364870323,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.794228634059948, 1.3168325596804682`}, {8.371578903249574,
          0.6584162798402342}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.216878364870323, 0.6584162798402342}, {6.92820323027551, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.216878364870323, 0.6584162798402342}, {7.505553499465135, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{8.371578903249574, 0.6584162798402342}, {8.082903768654761, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{8.371578903249574, 0.6584162798402342}, {8.660254037844387, 
         0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["1",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.330127018922194, 2.6336651193609364}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.0207259421636903, 1.9752488395207024}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.8660254037844387, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.2886751345948129, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["1", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["2", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.5773502691896258, 0.}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["2", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.4433756729740645, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "8"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.1547005383792517, 0.}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.7320508075688774, 0.}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["2", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.1754264805429417, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.598076211353316, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["4", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.3094010767585034, 0.}],
        "DynamicName",
        BoxID -> "VertexID$12"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "8"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.886751345948129, 0.}],
        "DynamicName",
        BoxID -> "VertexID$13"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.7527767497325675, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$14"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "7"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.464101615137755, 0.}],
        "DynamicName",
        BoxID -> "VertexID$15"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["4", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.041451884327381, 0.}],
        "DynamicName",
        BoxID -> "VertexID$16"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.639528095680697, 1.9752488395207024}],
        "DynamicName",
        BoxID -> "VertexID$17"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["3", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {5.484827557301445, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$18"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["4", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.907477288111819, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$19"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.618802153517007, 0.}],
        "DynamicName",
        BoxID -> "VertexID$20"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.196152422706632, 0.}],
        "DynamicName",
        BoxID -> "VertexID$21"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.062177826491071, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$22"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["8", "5"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.773502691896258, 0.}],
        "DynamicName",
        BoxID -> "VertexID$23"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "4"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {6.3508529610858835, 0.}],
        "DynamicName",
        BoxID -> "VertexID$24"], 
       TagBox[InsetBox[
         FrameBox["3",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.794228634059948, 1.3168325596804682}],
        "DynamicName",
        BoxID -> "VertexID$25"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["5", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.216878364870323, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$26"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {6.92820323027551, 0.}],
        "DynamicName",
        BoxID -> "VertexID$27"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["8", "3"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {7.505553499465135, 0.}],
        "DynamicName",
        BoxID -> "VertexID$28"], 
       TagBox[InsetBox[
         FrameBox["4",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {8.371578903249574, 0.6584162798402342}],
        "DynamicName",
        BoxID -> "VertexID$29"], 
       TagBox[InsetBox[
         FrameBox[
          FractionBox["7", "2"],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {8.082903768654761, 0.}],
        "DynamicName",
        BoxID -> "VertexID$30"], 
       TagBox[InsetBox[
         FrameBox["5",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {8.660254037844387, 0.}],
        "DynamicName",
        BoxID -> "VertexID$31"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.941040392132344*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[4]=",ExpressionUUID->"cb678549-d43a-1448-bd1e-1a81c4648487"]
}, Open  ]],

Cell["\<\
Note: A bit-reversal permutation of the Calkin\[Dash]Wilf tree gives the \
Stern\[Dash]Brocot tree.\
\>", "Text",
 CellChangeTimes->{{3.941041076429924*^9, 3.941041078731951*^9}, 
   3.941041181810137*^9},ExpressionUUID->"62be7116-2bb1-b844-ac1b-\
c1ad5f507829"],

Cell["https://demonstrations.wolfram.com/SternBrocotTree/", "Text",
 CellChangeTimes->{{3.941041076429924*^9, 3.941041078731951*^9}, 
   3.941041182824972*^9},ExpressionUUID->"3a37ccd6-2ae4-bc4d-8af7-\
3f9edbddfb1b"],

Cell["\<\
https://demonstrations.wolfram.com/FractionTreeAndContinuedFractions/\
\>", "Text",
 CellChangeTimes->{
  3.941041229015276*^9},ExpressionUUID->"afd5a660-b9fc-9847-bcb5-\
29dd72a02e12"],

Cell["\<\
https://demonstrations.wolfram.com/TwoEnumerationsOfTheRationals/\
\>", "Text",
 CellChangeTimes->{
  3.94104267123205*^9},ExpressionUUID->"74d07014-3360-c940-94ae-75ae132b6fab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Side-trip: Enumerations of all PPTs, NPTS, PTS \
(primitive / nearly-primitive Pythagorean Triples):",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
   3.9410327970441236`*^9, 3.941032800918605*^9}, {3.941042722160066*^9, 
   3.941042788783539*^9}, 
   3.941043029543216*^9},ExpressionUUID->"1050f35f-2445-2a4d-af18-\
9c42fe01d80a"],

Cell["\<\
Several enumerations of Pythagorean Triples (PTS) and Primitive Pythagorean \
Triples (PPTs) exist. All of them can be represented by trees and by \
functions associating a PT with an integer:\
\>", "Text",
 CellChangeTimes->{{3.9411202439456406`*^9, 
  3.94112035831909*^9}},ExpressionUUID->"bad40eb2-da6c-4340-9556-\
9426d9caba39"],

Cell["\<\
https://demonstrations.wolfram.com/\
PrimitivePythagoreanTriples3OrderedTreeGraph/\
\>", "Text",
 CellChangeTimes->{
  3.9410428516940117`*^9},ExpressionUUID->"31047142-3c29-c04f-b8ea-\
34f87bd8fa1f"],

Cell["\<\
https://demonstrations.wolfram.com/\
ABinaryBasedEnumerationOfThePrimitivePythagoreanTriples/\
\>", "Text",
 CellChangeTimes->{{3.941042802349846*^9, 3.941042804566501*^9}, 
   3.941042836265869*^9},ExpressionUUID->"63ea8fbd-991e-c244-8fdb-\
f9732fd1e6bd"],

Cell["\<\
https://demonstrations.wolfram.com/EnumeratingPrimitivePythagoreanTriples/\
\>", "Text",
 CellChangeTimes->{{3.941042802349846*^9, 
  3.941042822777202*^9}},ExpressionUUID->"c34bf7e1-3473-1b4a-a61d-\
76640e5e7e1d"],

Cell["\<\
https://demonstrations.wolfram.com/EnumerationOfAllPythagoreanTriples/\
\>", "Text",
 CellChangeTimes->{{3.941042802349846*^9, 
  3.9410428092967596`*^9}},ExpressionUUID->"cda3cc39-5489-5e4c-966e-\
b77da8e6d6fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Enumeration of all Strings",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
  3.9410327970441236`*^9, 
  3.941032800918605*^9}},ExpressionUUID->"8bc3b62f-debb-a64b-bea5-\
4acc4d0ba661"],

Cell["\<\
The enumeration of all possible strings, unbounded in both length and size of \
alphabet used, was published in 2011. The enumeration was clarified as a \
binary tree in 2012.\
\>", "Text",
 CellChangeTimes->{{3.941043963491194*^9, 3.9410439864446683`*^9}, {
  3.9410440729511604`*^9, 3.941044095676859*^9}, {3.941120383265211*^9, 
  3.9411203948048935`*^9}},ExpressionUUID->"4b19bce1-48a5-634e-83ae-\
9faa8e4fe8cf"],

Cell["\<\
https://demonstrations.wolfram.com/UniversalStringEnumeration/ : \
\>", "Text",
 CellChangeTimes->{
  3.941043639697279*^9, 3.941043742121847*^9, {3.941043934076769*^9, 
   3.94104393537393*^9}},ExpressionUUID->"6b18be3d-89cd-7440-a8ac-\
87c39abd6071"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ctrl$$ = 1, $CellContext`initial$$ = "E", 
    SSSiCv100`n$$ = 0, SSSiCv100`string$$ = "ENUMERATION", Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ctrl$$], 1, ""}, {
      1 -> "      sample      ", 2 -> " sample with details ", 3 -> 
       "  index \[Rule] string  ", 4 -> "  string \[Rule] index  "}, 
      ControlType -> SetterBar}, {{
       Hold[SSSiCv100`n$$], 43, "index"}, 0, 492, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`initial$$], "E"}, {
      "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
       "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"}, 
      ControlType -> SetterBar}, {{
       Hold[SSSiCv100`string$$], "ENUMERATION"}, 
      Dynamic[
       Map[$CellContext`removeAccents, 
        DictionaryLookup[
         StringExpression[$CellContext`initial$$, 
          BlankSequence[]], IgnoreCase -> True]]], ControlType -> Automatic}},
     Typeset`size$$ = {550., {197.13403309800196`, 202.86596690199804`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ctrl$$ = 1, $CellContext`initial$$ = "E", 
        SSSiCv100`n$$ = 43, SSSiCv100`string$$ = "ENUMERATION"}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Pane[
        Switch[$CellContext`ctrl$$, 1, 
         Grid[{{
            Grid[
             Prepend[
              Map[Map[Text, {#, "\[LeftRightArrow]", 
                 $CellContext`UnrankString[#], ":", 
                 $CellContext`weight[#]}]& , 
               Range[SSSiCv100`n$$, SSSiCv100`n$$ + 20]], 
              Map[Text[
                Style[#, Underlined]]& , {
               "index", "", "string", "", "weight"}]], 
             Alignment -> {Center, Center}, 
             ItemSize -> {{{3, 2, 8, 1, 4}}, 1}, 
             Spacings -> {Automatic, 0.045}], $CellContext`note1}}, Spacings -> 
          4], 2, 
         Column[{
           Grid[
            Prepend[
             Map[$CellContext`steps[
               $CellContext`UnrankString[#]]& , 
              Range[SSSiCv100`n$$, SSSiCv100`n$$ + 20]], 
             Flatten[{
               Text[
                Style["offset", Underlined]], SpanFromLeft, SpanFromLeft, 
               Map[Text[
                 Style[#, Underlined]]& , 
                Part[$CellContext`detailHeaders, 
                 Span[4, All]]]}]], Alignment -> {{Center, {Left}}, Center}, 
            ItemSize -> {{{2, 1, 2, 5, 11, 10, 9}}, {1 -> 2}}, 
            Spacings -> {Automatic, 0.03}], $CellContext`note2}, Spacings -> 
          1], 3, 
         (With[{$CellContext`stps$ = $CellContext`steps[#]}, 
          Column[
           If[SSSiCv100`n$$ == 0, {
             Grid[{
               Map[
               Text, {0, "\[LeftRightArrow]", ""}]}], $CellContext`note0}, {
             Grid[{
               Map[Text, {SSSiCv100`n$$, "\[LeftRightArrow]", #}]}], 
             Grid[
              Transpose[{
                Map[Text, $CellContext`detailHeaders], 
                Table[
                 Text[":"], {
                  Length[$CellContext`detailHeaders]}], $CellContext`stps$}], 
              Spacings -> {Automatic, 0.8}, Alignment -> 
              Left], $CellContext`note3}], Left, 2, 
           Dividers -> {False, Center}]]& )[
          $CellContext`UnrankString[SSSiCv100`n$$]], 4, 
         (With[{$CellContext`stps$ = $CellContext`steps[SSSiCv100`string$$]}, 
          Column[{
            Grid[{
              Map[Text, {SSSiCv100`string$$, "\[LeftRightArrow]", #}]}], 
            Grid[
             Transpose[{
               Map[Text, 
                Reverse[$CellContext`detailHeaders]], 
               Table[
                Text[":"], {
                 Length[$CellContext`detailHeaders]}], 
               Reverse[
                $CellContext`steps[SSSiCv100`string$$]]}], 
             Spacings -> {Automatic, 0.8}, Alignment -> 
             Left], $CellContext`note4}, Left, 2, 
           Dividers -> {False, Center}]]& )[
          $CellContext`RankString[SSSiCv100`string$$]]], {550, 400}, 
        ImageSizeAction -> "Scrollable"], 
      "Specifications" :> {{{$CellContext`ctrl$$, 1, ""}, {
         1 -> "      sample      ", 2 -> " sample with details ", 3 -> 
          "  index \[Rule] string  ", 4 -> "  string \[Rule] index  "}}, {{
         SSSiCv100`n$$, 43, "index"}, 0, 492, 1, Appearance -> "Labeled", 
         Enabled :> Dynamic[$CellContext`ctrl$$ != 
           4]}, {{$CellContext`initial$$, "E"}, {
         "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N",
           "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"}, 
         ControlType -> SetterBar, Enabled :> 
         Dynamic[$CellContext`ctrl$$ == 4]}, {{
         SSSiCv100`string$$, "ENUMERATION"}, 
         Dynamic[
          Map[$CellContext`removeAccents, 
           DictionaryLookup[
            StringExpression[$CellContext`initial$$, 
             BlankSequence[]], IgnoreCase -> True]]], ControlType -> 
         PopupMenu, Enabled :> Dynamic[$CellContext`ctrl$$ == 4]}}, 
      "Options" :> {AutorunSequencing -> {2, 1, 5}}, "DefaultOptions" :> {}],
     ImageSizeCache->{598., {277.63403309800196`, 283.36596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`UnrankString[0] = 
       "", $CellContext`UnrankString[
         Pattern[SSSiCv100`i, 
          Blank[Integer]]] := With[{SSSiCv100`n = BitLength[SSSiCv100`i]}, 
         $CellContext`StringN[
         SSSiCv100`n, SSSiCv100`i - 2^(SSSiCv100`n - 1)]], 
       TagSet[SSSiCv100`i, 
        MessageName[SSSiCv100`i, "shdw"], 
        "Symbol `1` appears in multiple contexts `2`; definitions in context \
`3` may shadow or be shadowed by other definitions."], 
       TagSet[SSSiCv100`n$$, 
        MessageName[SSSiCv100`n$$, "shdw"], 
        "Symbol `1` appears in multiple contexts `2`; definitions in context \
`3` may shadow or be shadowed by other definitions."], $CellContext`StringN[
         Pattern[$CellContext`weight, 
          Blank[Integer]], 
         Pattern[SSSiCv100`n, 
          Blank[Integer]]] := Module[{$CellContext`t = 1}, 
         StringJoin[
          ReplaceAll[
           Part[
            Reap[Scan[If[# == 0, Sow[$CellContext`t]; $CellContext`t = 1, 
                Increment[$CellContext`t]]& , 
               IntegerDigits[SSSiCv100`n, 2, $CellContext`weight - 1]]; 
             Sow[$CellContext`t]], 2, 1], 
           Map[Reverse, $CellContext`characterWeights]]]], $CellContext`weight[
         Pattern[SSSiCv100`n, 
          Blank[Integer]]] := If[SSSiCv100`n == 0, 0, 
         BitLength[SSSiCv100`n]], $CellContext`weight[
         Pattern[SSSiCv100`s, 
          Blank[String]]] := Total[
         ReplaceAll[
          Characters[SSSiCv100`s], $CellContext`characterWeights]], 
       Attributes[SSSiCv100`s] = {Flat}, 
       TagSet[SSSiCv100`s, 
        MessageName[SSSiCv100`s, "shdw"], 
        "Symbol `1` appears in multiple contexts `2`; definitions in context \
`3` may shadow or be shadowed by other definitions."], \
$CellContext`characterWeights = {
        "" -> 0, "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5, "F" -> 6, 
         "G" -> 7, "H" -> 8, "I" -> 9, "J" -> 10, "K" -> 11, "L" -> 12, "M" -> 
         13, "N" -> 14, "O" -> 15, "P" -> 16, "Q" -> 17, "R" -> 18, "S" -> 19,
          "T" -> 20, "U" -> 21, "V" -> 22, "W" -> 23, "X" -> 24, "Y" -> 25, 
         "Z" -> 26}, $CellContext`note1 = Text[
         Style[
          
          Column[{"Each index corresponds to exactly one string, and all \
possible strings of any length with all possible characters will appear in \
this enumeration, if continued far enough.", 
            "Strings appear in order of weight: the weight of the string is \
the total of the weights of its characters ('A'\[Rule]1, 'B'\[Rule]2, \
\[Ellipsis])", 
            
            Row[{"Note that there is 1 = \!\(\*SuperscriptBox[\(2\), \(0\)]\) \
string of weight 1, there are 2 = \!\(\*SuperscriptBox[\(2\), \(1\)]\) \
strings of weight 2, 4 = \!\(\*SuperscriptBox[\(2\), \(2\)]\) strings of \
weight 3, and in general ", 
              TraditionalForm[2^(-1 + SSSiCv100`w)], " strings of weight ", 
              TraditionalForm[SSSiCv100`w], "."}], 
            "Within each weight group, strings are ordered according to an \
algorithm shown by the examples."}, Left, 2], LineIndent -> 
          0]], $CellContext`steps[
         Pattern[SSSiCv100`s, 
          Blank[String]]] := 
       Module[{SSSiCv100`chars, $CellContext`weights, \
$CellContext`origweights, $CellContext`totalWeight, \
$CellContext`numberPreviousWeights, SSSiCv100`code = ""}, 
         SSSiCv100`chars = 
          Characters[
           SSSiCv100`s]; $CellContext`origweights = ($CellContext`weights = 
           ReplaceAll[
            SSSiCv100`chars, $CellContext`characterWeights]); \
$CellContext`totalWeight = Total[$CellContext`weights]; If[SSSiCv100`s == "", 
           Map[Text, 
            Flatten[{0, 
              Table["", {6}]}]], $CellContext`numberPreviousWeights = 
            2^($CellContext`totalWeight - 1); 
           While[$CellContext`weights != {1}, 
             If[
             Part[$CellContext`weights, -1] == 1, 
              SSSiCv100`code = "0" <> SSSiCv100`code; $CellContext`weights = 
               Most[$CellContext`weights], 
              SSSiCv100`code = "1" <> SSSiCv100`code; Decrement[
                Part[$CellContext`weights, -1]]]]; {
             Text[
              FromDigits["1" <> SSSiCv100`code, 2]], 
             Text[
              Superscript[2, $CellContext`totalWeight - 1]], 
             Text[
              FromDigits[SSSiCv100`code, 2]], 
             If[SSSiCv100`code == "", "", 
              Row[
               (Map[Text, 
                Flatten[{
                  Most[#], 
                  Subscript[
                   Last[#], 2]}]]& )[
                Characters[SSSiCv100`code]], FrameMargins -> 0, 
               ImageSize -> {Automatic, Automatic}]], 
             Text[
              StringJoin[
               Map[ToString, 
                Flatten[{"{", 
                  Riffle[
                   Table["1", {$CellContext`totalWeight}], 
                   ReplaceAll[
                    Characters[SSSiCv100`code], {"0" -> ", ", "1" -> "+"}]], 
                  "}"}]]]], 
             Text[(ToString[$CellContext`totalWeight] <> ":") <> StringReplace[
                ToString[$CellContext`origweights], " " :> 
                If[SSSiCv100`code === "000000000", "", " "]]], 
             Text[SSSiCv100`s]}]], 
       TagSet[SSSiCv100`chars, 
        MessageName[SSSiCv100`chars, "shdw"], 
        "Symbol `1` appears in multiple contexts `2`; definitions in context \
`3` may shadow or be shadowed by other definitions."], \
$CellContext`detailHeaders = {
        "index", "offset", "reduced", "binary", "meaning", "weights", 
         "string"}, $CellContext`note2 = Text[
         Grid[{{
           "index - offset = reduced = binary, binary \[LeftRightArrow] \
meaning: {0|1} \[LeftRightArrow] {','|'+'},"}, {
           "meaning = weights,  weights \[LeftRightArrow] string: {1|2|3|...} \
\[LeftRightArrow] {A|B|C|...}"}}, Alignment -> Left]], $CellContext`note0 = 
       Text["By definition the index 0 represents the empty string."], \
$CellContext`note3 = Text[
         Style[
          
          Row[{"index - offset = reduced = binary \[LeftRightArrow] meaning = \
weights \[LeftRightArrow] string, where offset ", 
            TraditionalForm[2^(-1 + SSSiCv100`w)], 
            " = number of strings of weight less than ", 
            TraditionalForm[SSSiCv100`w], ". ", 
            "weights \[LeftRightArrow] string: {1|2|3|...} \[LeftRightArrow] \
{A|B|C|...}", 
            "There is a one\[Hyphen]to\[Hyphen]one function between the \
binary reduced index and the meaning: {0|1} \[LeftRightArrow] {','|'+'}"}], 
          LineIndent -> 0]], $CellContext`note4 = Text[
         Style[
          
          Row[{"string \[LeftRightArrow] weights = meaning \[LeftRightArrow] \
binary = reduced, reduced + offset = index, where offset ", 
            TraditionalForm[2^(-1 + SSSiCv100`w)], 
            " = number of strings of weight less than ", 
            TraditionalForm[SSSiCv100`w], ". ", 
            "weights \[LeftRightArrow] string: {1|2|3|...} \[LeftRightArrow] \
{A|B|C|...}", 
            "There is a one\[Hyphen]to\[Hyphen]one function between the \
binary reduced index and the meaning: {0|1} \[LeftRightArrow] {','|'+'}"}], 
          LineIndent -> 0]], $CellContext`RankString[""] = 
       0, $CellContext`RankString[
         Pattern[SSSiCv100`s, 
          Blank[String]]] := With[{$CellContext`weight = ReplaceAll[
            Characters[SSSiCv100`s], $CellContext`characterWeights]}, 
         FromDigits[
          Flatten[{1, 
            Riffle[
             Map[Table[1, {#}]& , $CellContext`weight - 1], 0]}], 
          2]], $CellContext`removeAccents[
         Pattern[SSSiCv100`s, 
          Blank[String]]] := StringReplace[
         ToUpperCase[SSSiCv100`s], {
         "\[CapitalADoubleDot]" -> "A", "\[CapitalARing]" -> "A", 
          "\[CapitalAAcute]" -> "A", "\[CapitalAGrave]" -> "A", 
          "\[CapitalAHat]" -> "A", "\[CapitalCCedilla]" -> "C", 
          "\[CapitalEDoubleDot]" -> "E", "\[CapitalEAcute]" -> "E", 
          "\[CapitalEGrave]" -> "E", "\[CapitalEHat]" -> "E", 
          "\[CapitalIDoubleDot]" -> "I", "\[CapitalIAcute]" -> "I", 
          "\[CapitalNTilde]" -> "N", "\[CapitalODoubleDot]" -> "O", 
          "\[CapitalOAcute]" -> "O", "\[CapitalOHat]" -> "O", 
          "\[CapitalUDoubleDot]" -> "U", "\[CapitalUHat]" -> "U", "'" -> "", 
          "-" -> ""}]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.941044407167806*^9, 3.941044407354114*^9}},
 CellID->270262828,ExpressionUUID->"8a9a74aa-fabf-af4d-8d26-864c3421af3f"],

Cell["\<\
In the enumeration, all strings appear in order of \
\[OpenCurlyDoubleQuote]weight\[CloseCurlyDoubleQuote], with the weight \
originally maximally spread out.  See \[OpenCurlyDoubleQuote]sample with \
details\[CloseCurlyDoubleQuote] to understand the algorithm.\
\>", "Text",
 CellChangeTimes->{{3.94104444648072*^9, 
  3.941044540446448*^9}},ExpressionUUID->"a1f33734-4a75-0c46-91b6-\
67a2f94bdbbf"],

Cell["https://demonstrations.wolfram.com/TreeOfStrings/ :", "Text",
 CellChangeTimes->{
  3.941043639697279*^9, 3.941043742955*^9, {3.941043871613102*^9, 
   3.9410438810450974`*^9}, 
   3.941043939731132*^9},ExpressionUUID->"91d0d255-0ddc-7f4f-b32c-\
66ceaa54b123"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toCharacterWeights", "[", "string_String", "]"}], " ", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ToCharacterCode", "[", "string", "]"}], "-", "64"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fromCharacterWeights", "[", 
    RowBox[{"l", ":", 
     RowBox[{"{", "___Integer", "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"FromCharacterCode", "[", 
    RowBox[{"l", "+", "64"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnrankComposition", "[", "i_Integer", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "=", 
        RowBox[{"BitLength", "[", "i", "]"}]}], ",", 
       RowBox[{"t", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{
        RowBox[{"Scan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "==", "0"}], ",", 
             RowBox[{
              RowBox[{"Sow", "[", "t", "]"}], ";", 
              RowBox[{"t", "=", "1"}]}], ",", 
             RowBox[{"t", "++"}]}], "]"}], "&"}], ",", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"i", "-", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"w", "-", "1"}], ")"}]}]}], ",", "2", ",", 
            RowBox[{"w", "-", "1"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"Sow", "[", "t", "]"}]}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RankComposition", "[", 
    RowBox[{"w", ":", 
     RowBox[{"{", "__Integer", "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", 
              RowBox[{"{", "#", "}"}]}], "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"(", 
            RowBox[{"w", "-", "1"}], ")"}]}], ",", "0"}], "]"}]}], "}"}], 
      "]"}], ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnrankString", "[", "i_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"fromCharacterWeights", "[", 
    RowBox[{"UnrankComposition", "[", "i", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RankString", "[", "s_String", "]"}], ":=", " ", 
   RowBox[{"RankComposition", "[", 
    RowBox[{"toCharacterWeights", "[", "s", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnrankStringList", "[", "i_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "=", 
        RowBox[{
         RowBox[{"IntegerLength", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "i"}], "-", "1"}], ",", "3"}], "]"}], "-", "1"}]}], 
       ",", "j", ",", 
       RowBox[{"ans", "=", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"j", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["3", "w"], "-", "1"}], ")"}], "/", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{"#", ",", "\[IndentingNewLine]", "0", ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ans", ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           "1", ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{
             RowBox[{"ans", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
            "]"}], ",", "\[IndentingNewLine]", "2", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ans", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "++"}]}], 
          "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"j", ",", "3", ",", "w"}], "]"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fromCharacterWeights", " ", "/@", " ", "ans"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RankStringList", "[", "sl_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"wl", "=", 
        RowBox[{"toCharacterWeights", " ", "/@", " ", "sl"}]}], ",", "w", ",", 
       RowBox[{"code", "=", "\"\<\>\""}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"w", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Flatten", "[", "wl", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"wl", "\[NotEqual]", 
         RowBox[{"{", 
          RowBox[{"{", "1", "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"wl", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ">", "1"}], ",", 
          RowBox[{
           RowBox[{"code", "=", 
            RowBox[{"\"\<2\>\"", "<>", "code"}]}], ";", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"wl", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "--"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"wl", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
              "1"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"wl", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], ">", 
              "1"}]}], ",", 
            RowBox[{
             RowBox[{"code", "=", 
              RowBox[{"\"\<1\>\"", "<>", "code"}]}], ";", " ", 
             RowBox[{
              RowBox[{"wl", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Most", "[", 
               RowBox[{"wl", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"wl", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
               RowBox[{"{", "1", "}"}]}], ",", 
              RowBox[{
               RowBox[{"code", "=", 
                RowBox[{"\"\<0\>\"", "<>", "code"}]}], ";", 
               RowBox[{"wl", "=", 
                RowBox[{"Drop", "[", 
                 RowBox[{"wl", ",", 
                  RowBox[{"-", "1"}]}], "]"}]}]}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{"code", ",", "3"}], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["3", 
           RowBox[{"w", "-", "1"}]], "-", "1"}], ")"}], "/", "2"}], "+", 
       "1"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExplainStringListRank", "[", "i_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "=", 
        RowBox[{
         RowBox[{"IntegerLength", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "i"}], "-", "1"}], ",", "3"}], "]"}], "-", "1"}]}], 
       ",", "j", ",", "d", ",", 
       RowBox[{"ans", "=", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"j", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["3", "w"], "-", "1"}], ")"}], "/", "2"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{"#", ",", "0", ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ans", ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", "1", ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{
             RowBox[{"ans", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
            "]"}], ",", "2", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ans", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "++"}]}], "]"}], 
         "&"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{"d", "=", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"j", ",", "3", ",", "w"}], "]"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<index: \>\"", ",", "i", ",", "\"\< = (\>\"", ",", 
         RowBox[{"Superscript", "[", 
          RowBox[{"3", ",", "w"}], "]"}], ",", "\"\<+1)/2 + \>\"", ",", 
         RowBox[{"Subscript", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "\"\<\>\""}], ",", 
               RowBox[{"{", "}"}], ",", "#"}], "]"}], "&"}], " ", "@", " ", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"ToString", "/@", "d"}], "]"}]}], ",", "3"}], "]"}]}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"children", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Rule", "[", 
       RowBox[{"x_", ",", "n_"}], "]"}], ",", "e_", ",", 
      RowBox[{"base_", ":", "2"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"Switch", "[", 
    RowBox[{"base", ",", "\[IndentingNewLine]", "2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "\[Rule]", 
          RowBox[{"2", "n"}]}], ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "\[Rule]", 
          RowBox[{
           RowBox[{"2", "n"}], "+", "1"}]}], ",", "1", ",", "2"}], "}"}]}], 
      "}"}], ",", "\[IndentingNewLine]", "3", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "\[Rule]", 
          RowBox[{
           RowBox[{"3", "n"}], "-", "1"}]}], ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "\[Rule]", 
          RowBox[{"3", "n"}]}], ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n", "\[Rule]", 
          RowBox[{
           RowBox[{"3", "n"}], "+", "1"}]}], ",", "2", ",", "3"}], "}"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"children", "[", "l_List", "]"}], " ", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"children", " ", "/@", " ", "l"}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tree", "[", 
    RowBox[{"n_", ",", "mode_", ",", "level_", ",", "num_"}], "]"}], ":=", 
   RowBox[{"Most", " ", "/@", " ", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Rest", "[", 
          RowBox[{"NestList", "[", 
           RowBox[{"children", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "n"}], ",", "0", ",", "num"}], "}"}], 
            ",", "level"}], "]"}], "]"}], ",", "1"}], "]"}], " ", "/.", " ", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"a_Integer", ",", "b_Integer"}], "]"}], " ", 
        "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"mode", " ", "/@", " ", 
          RowBox[{"Rule", "[", 
           RowBox[{"a", ",", "b"}], "]"}]}], ")"}]}]}], ")"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"base", "=", 
     RowBox[{"Switch", "[", 
      RowBox[{"mode", ",", "UnrankStringList", ",", "3", ",", "_", ",", "2"}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Text", "@", 
     RowBox[{"Pane", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Switch", "[", 
           RowBox[{"base", ",", "\[IndentingNewLine]", "2", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<index: \>\"", ",", "start", ",", "\"\< = \>\"", ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"StringJoin", "[", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{"start", ",", "2"}], "]"}]}], "]"}], ",", "2"}], 
                  "]"}]}], "}"}], "]"}], ",", "\"\<Menu\>\""}], "]"}], ",", 
            "\[IndentingNewLine]", "3", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ExplainStringListRank", "[", "start", "]"}], ",", 
              "\"\<Menu\>\""}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Switch", "[", 
           RowBox[{"base", ",", "\[IndentingNewLine]", "2", ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<traverse tree: \>\"", ",", "\"\<Menu\>\""}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<left (0)\>\"", ",", 
                 RowBox[{"start", "*=", "2"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<right (1)\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{
                   RowBox[{"2", " ", "start"}], "+", "1"}]}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<up\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"Quotient", "[", 
                    RowBox[{"start", ",", "2"}], "]"}]}], "]"}]}]}], "]"}], 
               " ", ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<random\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"10", "^", "10"}]}], "}"}], "]"}]}]}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<reset\>\"", ",", 
                 RowBox[{"start", "=", "1"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<  (weight: \>\"", ",", 
                    RowBox[{"BitLength", "[", "start", "]"}], ",", 
                    "\"\<)\>\""}], "}"}], "]"}], ",", "\"\<Menu\>\""}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
            "\[IndentingNewLine]", "3", ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<traverse tree: \>\"", ",", "\"\<Menu\>\""}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<left (0)\>\"", ",", 
                 RowBox[{"start", "=", " ", 
                  RowBox[{
                   RowBox[{"3", "start"}], "-", "1"}]}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<mid (1)\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{"3", " ", "start"}]}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<right (2)\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{
                   RowBox[{"3", " ", "start"}], "+", "1"}]}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<up\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"Quotient", "[", 
                    RowBox[{
                    RowBox[{"start", "+", "1"}], ",", "base"}], "]"}]}], 
                   "]"}]}]}], "]"}], " ", ",", "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<random\>\"", ",", 
                 RowBox[{"start", "=", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"10", "^", "10"}]}], "}"}], "]"}]}]}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<reset\>\"", ",", 
                 RowBox[{"start", "=", "1"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<  (weight: \>\"", ",", 
                    RowBox[{"IntegerLength", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", "start"}], "-", "1"}], ",", "3"}], "]"}], 
                    ",", "\"\<)\>\""}], "}"}], "]"}], ",", "\"\<Menu\>\""}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TreePlot", "[", 
           RowBox[{
            RowBox[{"tree", "[", 
             RowBox[{"start", ",", "mode", ",", "levels", ",", "base"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
            RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Bold", ",", "Larger"}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"600", ",", "400"}], "}"}]}]}], "]"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"levels", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mode", ",", "UnrankString"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Identity", "\[Rule]", "\"\<index\>\""}], ",", 
       RowBox[{"UnrankComposition", "\[Rule]", "\"\<composition\>\""}], ",", 
       RowBox[{"UnrankString", "\[Rule]", "\"\<string\>\""}], ",", 
       RowBox[{"UnrankStringList", "\[Rule]", "\"\<string list\>\""}]}], 
      "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"start", ",", "1", ",", "\[Infinity]", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"base", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}]}], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.544776288464456*^9, 3.5447762993415413`*^9}, {
   3.5447767242230253`*^9, 3.544776724749078*^9}, {3.5456677942279916`*^9, 
   3.5456678146171913`*^9}, 3.9410456424363956`*^9, {3.9412010352024345`*^9, 
   3.941201043356533*^9}},
 CellLabel->"In[36]:=",
 CellID->13156003,ExpressionUUID->"f34365a8-c098-ad40-bfb2-7101b1d37f42"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`base$$ = 2, $CellContext`levels$$ = 
    3, $CellContext`mode$$ = $CellContext`UnrankString, SSSiCv100`start$$ = 1,
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`levels$$], 3}, {1, 2, 3, 4}, ControlType -> 
      SetterBar}, {{
       Hold[$CellContext`mode$$], $CellContext`UnrankString}, {
      Identity -> "index", $CellContext`UnrankComposition -> 
       "composition", $CellContext`UnrankString -> 
       "string", $CellContext`UnrankStringList -> "string list"}, ControlType -> 
      SetterBar}, {
      Hold[SSSiCv100`start$$], 1, 
      DirectedInfinity[1], 1, ControlType -> None}, {
      Hold[$CellContext`base$$], {2, 3}, ControlType -> None}}, 
    Typeset`size$$ = {600., {197.6420897205826, 204.3579102794174}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`base$$ = 2, $CellContext`levels$$ = 
        3, $CellContext`mode$$ = $CellContext`UnrankString, SSSiCv100`start$$ = 
        1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`base$$ = 
        Switch[$CellContext`mode$$, $CellContext`UnrankStringList, 3, 
          Blank[], 2]; Text[
         Pane[
          Column[{
            Switch[$CellContext`base$$, 2, 
             Style[
              Row[{"index: ", SSSiCv100`start$$, " = ", 
                Subscript[
                 StringJoin[
                  Map[ToString, 
                   IntegerDigits[SSSiCv100`start$$, 2]]], 2]}], "Menu"], 3, 
             Style[
              $CellContext`ExplainStringListRank[SSSiCv100`start$$], "Menu"]], 
            Switch[$CellContext`base$$, 2, 
             Row[{
               Style["traverse tree: ", "Menu"], 
               Button["left (0)", 
                TimesBy[SSSiCv100`start$$, 2]], 
               Button[
               "right (1)", SSSiCv100`start$$ = 2 SSSiCv100`start$$ + 1], 
               Button["up", SSSiCv100`start$$ = Max[1, 
                  Quotient[SSSiCv100`start$$, 2]]], 
               Button[
               "random", SSSiCv100`start$$ = RandomInteger[{1, 10^10}]], 
               Button["reset", SSSiCv100`start$$ = 1], 
               Style[
                Row[{"  (weight: ", 
                  BitLength[SSSiCv100`start$$], ")"}], "Menu"]}], 3, 
             Row[{
               Style["traverse tree: ", "Menu"], 
               Button[
               "left (0)", SSSiCv100`start$$ = 3 SSSiCv100`start$$ - 1], 
               Button["mid (1)", SSSiCv100`start$$ = 3 SSSiCv100`start$$], 
               Button[
               "right (2)", SSSiCv100`start$$ = 3 SSSiCv100`start$$ + 1], 
               Button["up", SSSiCv100`start$$ = Max[1, 
                  Quotient[SSSiCv100`start$$ + 1, $CellContext`base$$]]], 
               Button[
               "random", SSSiCv100`start$$ = RandomInteger[{1, 10^10}]], 
               Button["reset", SSSiCv100`start$$ = 1], 
               Style[
                Row[{"  (weight: ", 
                  IntegerLength[2 SSSiCv100`start$$ - 1, 3], ")"}], 
                "Menu"]}]], 
            TreePlot[
             $CellContext`tree[
             SSSiCv100`start$$, $CellContext`mode$$, $CellContext`levels$$, \
$CellContext`base$$], VertexLabeling -> True, DirectedEdges -> True, 
             AspectRatio -> 0.5, BaseStyle -> {Bold, Larger}, ImageSize -> 
             600]}], ImageSize -> {600, 400}]]), 
      "Specifications" :> {{{$CellContext`levels$$, 3}, {1, 2, 3, 
         4}}, {{$CellContext`mode$$, $CellContext`UnrankString}, {
         Identity -> "index", $CellContext`UnrankComposition -> 
          "composition", $CellContext`UnrankString -> 
          "string", $CellContext`UnrankStringList -> "string list"}}, {
        SSSiCv100`start$$, 1, 
         DirectedInfinity[1], 1, ControlType -> None}, {$CellContext`base$$, {
         2, 3}, ControlType -> None}}, "Options" :> {ControlPlacement -> Top},
       "DefaultOptions" :> {}],
     ImageSizeCache->{648., {254.13403309800196`, 259.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`UnrankStringList[
         Pattern[SSSiCv100`i, 
          Blank[Integer]]] := 
       Module[{SSSiCv100`w = IntegerLength[2 SSSiCv100`i - 1, 3] - 1, 
          SSSiCv100`j, SSSiCv100`ans = {{1}}}, 
         SSSiCv100`j = (SSSiCv100`i - 1) - (3^SSSiCv100`w - 1)/2; 
         Scan[Switch[#, 0, 
            AppendTo[SSSiCv100`ans, {1}], 1, 
            AppendTo[
             Part[SSSiCv100`ans, -1], 1], 2, 
            Increment[
             Part[
              Part[SSSiCv100`ans, -1], -1]]]& , 
           IntegerDigits[SSSiCv100`j, 3, SSSiCv100`w]]; 
         Map[$CellContext`fromCharacterWeights, SSSiCv100`ans]], 
       TagSet[SSSiCv100`i, 
        MessageName[SSSiCv100`i, "shdw"], 
        "Symbol `1` appears in multiple contexts `2`; definitions in context \
`3` may shadow or be shadowed by other definitions."], \
$CellContext`fromCharacterWeights[
         Pattern[SSSiCv100`l, {
           BlankNullSequence[Integer]}]] := 
       FromCharacterCode[SSSiCv100`l + 64], $CellContext`ExplainStringListRank[
         Pattern[SSSiCv100`i, 
          Blank[Integer]]] := 
       Module[{SSSiCv100`w = IntegerLength[2 SSSiCv100`i - 1, 3] - 1, 
          SSSiCv100`j, SSSiCv100`d, SSSiCv100`ans = {{1}}}, 
         SSSiCv100`j = (SSSiCv100`i - 1) - (3^SSSiCv100`w - 1)/2; 
         Scan[Switch[#, 0, 
            AppendTo[SSSiCv100`ans, {1}], 1, 
            AppendTo[
             Part[SSSiCv100`ans, -1], 1], 2, 
            Increment[
             Part[
              Part[SSSiCv100`ans, -1], -1]]]& , SSSiCv100`d = 
           IntegerDigits[SSSiCv100`j, 3, SSSiCv100`w]]; 
         Row[{"index: ", SSSiCv100`i, " = (", 
            Superscript[3, SSSiCv100`w], "+1)/2 + ", 
            Subscript[
             (If[# == "", {}, #]& )[
              StringJoin[
               Map[ToString, SSSiCv100`d]]], 3]}]], $CellContext`tree[
         Pattern[SSSiCv100`n, 
          Blank[]], 
         Pattern[$CellContext`mode, 
          Blank[]], 
         Pattern[$CellContext`level, 
          Blank[]], 
         Pattern[$CellContext`num, 
          Blank[]]] := Map[Most, 
         ReplaceAll[
          Flatten[
           Rest[
            
            NestList[$CellContext`children, {
             1 -> SSSiCv100`n, 0, $CellContext`num}, $CellContext`level]], 
           1], (Pattern[SSSiCv100`a, 
             Blank[Integer]] -> Pattern[$CellContext`b, 
             Blank[Integer]]) :> 
          Map[$CellContext`mode, 
            SSSiCv100`a -> $CellContext`b]]], $CellContext`children[{
         Pattern[SSSiCv100`x, 
            Blank[]] -> Pattern[SSSiCv100`n, 
            Blank[]], 
          Pattern[$CellContext`e, 
           Blank[]], 
          Optional[
           Pattern[$CellContext`base, 
            Blank[]], 2]}] := 
       Switch[$CellContext`base, 
         2, {{SSSiCv100`n -> 2 SSSiCv100`n, 0, 2}, {
          SSSiCv100`n -> 2 SSSiCv100`n + 1, 1, 2}}, 
         3, {{SSSiCv100`n -> 3 SSSiCv100`n - 1, 0, 3}, {
          SSSiCv100`n -> 3 SSSiCv100`n, 1, 3}, {
          SSSiCv100`n -> 3 SSSiCv100`n + 1, 2, 3}}], $CellContext`children[
         Pattern[SSSiCv100`l, 
          Blank[List]]] := Flatten[
         Map[$CellContext`children, SSSiCv100`l], 
         1], $CellContext`UnrankString[0] = "", $CellContext`UnrankString[
         Pattern[SSSiCv100`i, 
          Blank[Integer]]] := $CellContext`fromCharacterWeights[
         $CellContext`UnrankComposition[
         SSSiCv100`i]], $CellContext`UnrankComposition[
         Pattern[SSSiCv100`i, 
          Blank[Integer]]] := 
       Module[{SSSiCv100`w = BitLength[SSSiCv100`i], $CellContext`t = 1}, 
         Part[
          Reap[Scan[If[# == 0, Sow[$CellContext`t]; $CellContext`t = 1, 
              Increment[$CellContext`t]]& , 
             IntegerDigits[
             SSSiCv100`i - 2^(SSSiCv100`w - 1), 2, SSSiCv100`w - 1]]; 
           Sow[$CellContext`t]], 2, 1]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.941045646622652*^9, 3.941046389288818*^9, 3.9410466421904182`*^9, 
   3.941121536575399*^9, {3.941201047843935*^9, 3.941201048110358*^9}, 
   3.941202327461738*^9, 3.948377513960696*^9, 3.9483776646889896`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"40d2267a-98a7-854b-b2ef-c88859c813a0"]
}, Open  ]],

Cell[TextData[{
 "This is the universal string enumeration shown in tree form. In the tree, \
descend to the Left in order to append an \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote] to the string, to the Right to increment the final \
character of the string. The root of the tree is a single \
\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]. The digits shown on the \
branches leading to a particular node are the successive bits of the index \
corresponding to the string at the node. (First bit -- not shown -- is always \
a \[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote].) So ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["11000", "2"], TraditionalForm]],ExpressionUUID->
  "4df3a574-9779-de42-bc63-97e348fdd0f4"],
 " corresponds to \[OpenCurlyDoubleQuote]BAAA\[CloseCurlyDoubleQuote].  Every \
binary number uniquely identifies a string, and all strings are (somewhere!) \
in the tree."
}], "Text",
 CellChangeTimes->{{3.941033329799702*^9, 3.941033372083117*^9}, {
  3.9410441084286118`*^9, 3.941044192415945*^9}, {3.9410445507270756`*^9, 
  3.9410446511842175`*^9}, {3.941044683790876*^9, 3.94104473422946*^9}, {
  3.9410448061210003`*^9, 3.941044827067578*^9}, {3.941120418120627*^9, 
  3.941120458118719*^9}},ExpressionUUID->"668199dd-da18-49b7-9370-\
974d9d8de5d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Original Sessie Enumeration",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 
  3.9386078234522743`*^9}},ExpressionUUID->"7de7bb53-7b63-9c4c-a567-\
c9c502fd73fa"],

Cell["The first attempt to enumerate sessies was published here:", "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
   3.938609219772644*^9, 3.9386092204075623`*^9}, 3.940536561873854*^9, 
   3.9405366453288536`*^9},ExpressionUUID->"c65f00c2-5dcc-f447-b593-\
cb3cc37b746d"],

Cell[TextData[{
 "\t",
 ButtonBox["http://www.mathematica-journal.com/2011/05/indexing-strings-and-\
rulesets/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mathematica-journal.com/2011/05/indexing-strings-and-\
rulesets/"], None},
  ButtonNote->
   "http://www.mathematica-journal.com/2011/05/indexing-strings-and-rulesets/"]
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.9386092204075623`*^9}, {3.940536565177908*^9, 
  3.940536578680151*^9}, {3.9405366410499*^9, 
  3.9405366410499*^9}},ExpressionUUID->"ce50beaa-1a02-2141-ab42-1fa47836a33b"],

Cell["\<\
The article delineates the step-by-step process involved in creating a \
limited enumeration of strings, then a universal enumeration of all strings \
(think \[OpenCurlyDoubleQuote]all words in all languages\
\[CloseCurlyDoubleQuote]), an enumeration of all lists of strings (think \
\[OpenCurlyDoubleQuote]all books in all languages\[CloseCurlyDoubleQuote]), \
and finally a first attempt at enumerating all sessie rule sets. The latter \
did include all sessie rulesets, but unfortunately produced 25% of them \
twice. It has now been replaced by enumerations that avoid that duplication \
and that allow \[OpenCurlyDoubleQuote]long-jump\[CloseCurlyDoubleQuote] \
predictions based on simpler mathematical relationships.\
\>", "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.9386092204075623`*^9}, {3.940536655703905*^9, 
  3.9405367459196677`*^9}, {3.940536778423521*^9, 3.940536904845017*^9}, {
  3.940589590289728*^9, 
  3.940589743186299*^9}},ExpressionUUID->"0512e0fc-4263-c64f-8872-\
666cdd0bfb0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Updated Sessie Enumerations", "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
   3.938609219772644*^9, 3.938609223054897*^9}, 3.940426668506416*^9, {
   3.940426717661736*^9, 3.940426728898861*^9}},
 FontWeight->"Bold",ExpressionUUID->"201a5103-bafb-6747-8d6b-4b5bdcab6842"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Generalized Sessie Enumeration",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.938609223054897*^9}, {3.940426668506416*^9, 
  3.940426689870445*^9}},ExpressionUUID->"c4b0e155-fcfc-496e-b257-\
147c2d44aac8"],

Cell[TextData[{
 "We simplified and generalized the enumeration algorithm (the subject of a \
paper by ",
 ButtonBox["Caviness, Case, Morrow & Kratzke, published in 2020",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.complex-systems.com/abstracts/v29_i04_a04"], None},
  ButtonNote->"https://www.complex-systems.com/abstracts/v29_i04_a04"],
 "). The new fully general algorithm based works equally well for rulesets of \
sequential substitution systems (sessies) and multi-way substitution system (\
\[OpenCurlyDoubleQuote]messies\[CloseCurlyDoubleQuote]). The code specifying \
rule set construction starts with one base-2 digit followed by zero or more \
base-5 digits.  The first bit specifies whether (0) to use an empty string or \
(1) start with an \[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] (a \
non-empty string) in the first rule set.  Further base-5 codes progressively \
modify the rules, until the desired rule set has been constructed, as will be \
explained below. This construction effectively defines a one-to-one and onto \
relation between the positive integers and the set of all conceivable \
rulesets."
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.9386092226449227`*^9}, {3.940426433184812*^9, 
  3.9404264532984877`*^9}, {3.940426860670981*^9, 3.940426920230582*^9}, {
  3.940537005553505*^9, 3.9405370069111*^9}, {3.940537446499576*^9, 
  3.9405376903778095`*^9}, {3.940589757381447*^9, 3.940590113142134*^9}, {
  3.94059015580324*^9, 3.940590162463871*^9}, {3.940590836826128*^9, 
  3.940590836826128*^9}, {3.941120521043125*^9, 
  3.9411205249825788`*^9}},ExpressionUUID->"5a4753e1-a863-3742-b5ba-\
7c9f7a9ae2f7"],

Cell["\<\
Here are the first 62 rule sets in the Generalized Sequential Substitution \
System Enumeration, suitable for sessies and messies:\
\>", "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.9386092226449227`*^9}, {3.940426433184812*^9, 
  3.9404264532984877`*^9}, {3.940426860670981*^9, 3.940426920230582*^9}, {
  3.940537005553505*^9, 3.9405370069111*^9}, {3.940537446499576*^9, 
  3.940537754489546*^9}, {3.9405901463798695`*^9, 3.94059014655691*^9}, {
  3.941120566402048*^9, 
  3.941120576645281*^9}},ExpressionUUID->"e70d71b1-d122-024c-8d8d-\
ec950e7ca058"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
p61FAg6nsrC0qLCAWEZmCnnCn/uSgxo8jhrougM1iBMVvjWYX2vwkLJnWlaH
VA7VCBJkv3H8DPQMTze//TGvEO96fwk0EBojO/vOC66g4vuWeflvdU6jff1r
09gL/lhRUZT58mN90b/3HXscn15vJUdBNaeyDI8rKWNwJEtqgkcVAPAn+Kya
BFifePOV8ycPHSwn01/qGzJSUnM3XXT2oiHV7eHJJRYgBbZPLy6X/dJEaZnh
Exebxb9o0nu0Otkh8LzM9BFfezpAfqvG8wBOqw7SOz/Vqa7BGKnxy5V33Px5
9V5UNXndmjZoXPc5f58P+UAR8NIfP9+HvkqWzdrjFv6javr45PRB9NJcaLjX
o0QAMzNvzzw5rif0t6pBJB7f9r1qASqF/Fd35w+f2mUSdOZNeKlAkO/58jA0
DFo4ZfOzkJ9EjggWF3kcvL5liJzc0JnqnjYffx4YVMJC3weLRkkMnvIPLhYI
Cnx8jkIjofkT1j8JamXVlPX6Evqi/2ua+uonOAEiwD1ZrT69CwSdveybjf1p
axY+Muba0LXjBw+as3OPc0kKuQHVhBo8C0FdpqiiBnkiQYHD+lqDpy6+zMjp
qKopxHHbtPnoGT7g5YoVCErDgxT/mtptygj5e6+4Atr3LfPxEfpKENRt/Nn5
Ntk1IgHRbYfefPTSP3bGPjGz3h1U6B5ttldaas0+q6hIGKgmAODP8Fk18VMe
v708ttvAeaOWHcJoal7R/Iy2puYtW++PKTUI948/ubhEbqr7zeObt2zatkJJ
UxVt3eUjqofmTZ6za4empztWwOL9t43PiPg17I+Pntw8u2LnLiXVCxJLF9VU
1s9Yv3Ln2ituL3LopD/e2Q6ISMivSXONea5nYKipaub15G0Ro/77jiXgRDlt
Hrlg7Pxu6u8SyxEky/7lUWgotGTWbtew76oJ/VFJltelS8OhbhtND7ysQGBe
3r1ZZyf1gLqooKoJ1/Z9awHYsOC9+65xK1CZoxoeTUIQnLfvSWgUNH/qJoef
RA4XRvICTqzCDOq1YP5YaJPlrkf4mp8MiuA4z30TUYN/YcLCS9BXqp//aegf
aO7EdU9+dl61KGR8mIneKKjPCs21juiOEaLjmitz/oKgM5dfZ+fU37iSGG1v
Nb7XzrGyI5Zu63XyrWcG4yeDFNSg/mio33INiUExUuKyodbgyYsvMrI7pDpA
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
n4TGQPMnrXsa1L6uiVEefefWAmjguour7cqRz1j7NRfndIMg5YuvcvMalRBx
sSHn5+2aORZSffOqGIbLgl6joEn/zBq/8tHrruqamFVJj+4sgmRWqS+xFZsc
/PPd6IVik6PmlNbU5MDYwsgHuhJz9Les2H9eDVr95HZkGa/pNczEp9ndXSIW
XHC3iNsgeHUJInhU2S65aecVn8mpxeNwyW7nTayUb4VxuaT2rzAAAGhCg2uq
yXM6pT8PgtY/PP+6cScyqdJ89o41K6FdXlGVtX/2vYb2wSXmvvzJ3Rrnre2f
vH2Mlus/UWbdAL3YHCL7d6V4rJIcq2WqG5YN3mLnheF+bqyJlS8vm6+WlpqB
PnY3s7zhoQ/4dQQcNt5eJ8DJ9g4ObiYQIYbPY2e+PDxk6dQJkHJodBUsKnSL
ODuw3+Cd00+8yIDh+sbbsjH8HPOtc07v3Xcp4sOdzXPWbNp8zaMMpnzTDShA
BP2PSS+fMhYRfFsJw8Ve7zUHDhyyDRFMbSLYNUBcE7M05MbNGRC0/NyKJxWw
iF/9fPvFVXLQ4EvXw4qJX7cUCAWYIJVR66bIQkcDAkthGBcce2GQtNTGUXs9
EpHj146FZJdHWd2aA/0rf3r+vRLkc433HoN1MtBgXYM3BfhGJYThwtCzk7dM
Hgwd8ffEIIYgIkF38CjZNXI7XBNg+PffdjoDHHzigzvzIMlFx6ZZFfKEcF2g
ksnmodAgrfOe2bgmIWl6cLzTlalDVS0fmTp5XpkzYLmGZXgUDeZ/Y5s4hNSn
dxeIBSea59c3CFpsGwIN1DztmlnZ/LgmbqXL4xDjW3ZV3II//i4LAPz3aHBN
RIy7prHCgG6bbyjZZ2DpvIZblSMg5WRarzm4a4+Mok84rrZlLkLEYbCpZaXF
RaVVFGo93OJAHy7k5qsLE9DBxCjkQUF3NBs3YMTQNQP1YnN/1zWJWExC6IM1
g/ZuVTzwioVjfHmE8dgZ9sGaMwZDaxcpuYUL4Lr2GTYgEgoFdSQKrriouARH
59T9LeZMyOXiHN0SA4MiftiNwOdzMBF6q47v3jHZKCEVeU8mvCt4dmDFYbND
dxKJ375WC3ARVOedE7ebbrgbXgW/fSQ/SHHGmv0v2Dn0xheQABGMRK89sWsb
IphEQGx+TLH9gdWHTRBBfHuPpOWzRXUEbAWlnMJuu+lgyDXHwsU9sdszfu5J
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
YRkvLUKL4DKkjk9wuCHVW2roxqFX4wsapyYei1YaavEuNjJGOACQ9t5wxw5I
DNp8V6PdqQnmMBjJrr62FzFaVx9EEzJobazDZ9eWhlm9fxcRRUW/wiZa7t8D
iUCb7E51VGpiJhEiTq2ftHKLwh2/UqS6M/ua+IS00hBzw8sY3dteATiExunE
12o/mMMpd3KPexEUjiDU72wC80gFIY99nrjbvCmtQC/YtUVVSZ4O3tFesWWM
xlPHmdne6abjZynZHn6GBqW810ckDi2fK2NXlFjR6CjAXB7Ra4fxhc2SZ6Pe
Uior3xhYzoSmn3x0Pry6wVZoYQ6tMPbDU6vb/rHPM9EXhgVFEQnh/lY+6ZnE
Tp7XD8NIadA7fydF0+h48ncntLehrkBAKXrjEuDubBVWVITuLquSluLl4vvW
PVo4NvrllQTCGzzKEhM9rO75Rvlg639SFpUU4WflnZpSUfPdfU/yxL3xtsxB
cv/OTAkAANBJmq08UE4ttr82rPcIyU3NU1MDdQjyIVRvx05hX1MHpCY+g0R2
3qokgzan+xLzdJ8OGDVBL6+Jkab79wr7mtqemgQwn19dhi/K+nQHXYqXkZva
nJFyNiru2cym94h1MC7WI+6ydH/0kMw8pBqGlHTt6xeamiqcnWMDA18jSFW7
KqEHlV0WZu28vfsOAy+zZPTk4JU9WnJafha0zzcwg9IgqPJ5HHKMxlStI6u3
PyVno2ko68lbjX5DNmuut0xnNp1V9YfAfCTzttfNM0M3mJp5RSRl5mMrmayu
fwNmnEdOqJdNPpIH+poAAAAaaJaaKv5Uaqpy23liNtocsRUWWL+SdtZDOio1
wXV0mp+K7o4Rn26hExMZ0Lf/BrWA4rjOn9HEzfBM0B07BIJE5ymcjkBKu3xq
qnRxiXvxot2pCY0UmR/s9c6JzNOw//iCJRyG4yfq3VaUg/pcMo4uaPBGUjjs
YNs5a9SWXbiZB5eiIYkcXeMhP1XqyMz9T951kZnMAgHCZbCq08veG5+ZM3zI
4IV9NGLiKjs1bneEuGc5od52OJCaAAAAGmmWmippJfbXh/80NaHf/xh2rcNS
k4DLqssJevPM2sruvl9yVUHNz3/lZ9BYkxRl9oPUVMUnBDtrXzinqKh4/ORx
vZdusS3MYhbw2HWZ/mFu5l9uort47ZyS4mHVc2ZujsksmvC2LphbV5z21OCe
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
e7Lsg85awRLmCuqqKWQivgUkAoFey+H9YBlXUqztvTW9pKcdXKnlH48nVFaz
ajldbFSVlASHqVs8e2MSVUVh8jhdf9AXAACgi2mWmphI9RNTqd7Sw7ZKGmU2
68LnI4LsdD+9q7vmj5x1cN2V5z4FHdMMmMNgJLv62l7EaF19EE3IaOu9eI3l
JdsePoimpm32mLAfXWYFXGbl7dm6GgcX3i3JJguv+Xw2o/K9wytncytLMxOD
Gzf0P9M8unb3LEh0+sa5e9VvGJnavs5LIrG49Di3HRPlZabM2aO4/6ii4rEz
qucfvCxiktrXej4hrTTE3PAyRve2VwAOad/U8t8B5+IY4+8b275I83mEbt/M
HhcTUshfv82oem/jvGrEhPnau26llLQvmHUsTumbCEOF84qqKmqaBib6V+xe
uMeRu2gnTmUyHKB15w3OHixsDwAA0CafUpOARamtyMKmpSQnh0QF6ar07zGw
38K+x10C38Ynp+VhCyn0+klLMIdITTEx2zq6j/BZbPoqDtGF2enCO8eEUpOT
Cwor6Iw2rS7IZ5DIzlvqn/LWbbFZuk9bH/ImXC2TWlyen56c/CE5+Yn92bWr
0ZILNXdbvhLe15ZZXkxicJusZsOpri2MdTs1Xkf3gnnKT25Vq4u96asEiR26
czLw6xgRv642LVR3o+qCcWOlpUZISUkNlRotuWq/7TuvQlrbjsYnXKxH3OUR
/dD2zzh0IgwpYbS10G8hXHnAWbheU1D77qGrf6LKVKUto6E99x0C39WfWonJ
yR7uBgf2Dp68Xfflwy7yOBAeU1BdnINNfuV41WC91NThM5cduf+U2oXiXAvA
ygMAAADt8yk1cbFPoq7OHDO0d8+eIiI9oC/+6yEi2lNi3Uj5p2HlwrESFjHS
68jINX2+/Ly7qFjPr/r37LlbXi84rk0zdfkMcpWb3Ik5aFHxVRYZbX5qHMyi
Un2OXdo6rGdP0Z49/+v+dVe6ifTsNbDnNK3j94RrSDdKMnm+qRarRiw8tdUo
vJCLcH84akEIue4sD3XbZXb06dcmCtCoxqml0SlVVeR6WX65dw+MGXps5Wmf
OGHnXRtxM70SdMcNhaCe8xXPRCClXT41VdSnpnau14SmpjSzmaozhadX9x6i
9aeW8K0cs2zvCe+qFDyb1eYbNTsWJYn7QnXZ2AUjl2tapZAzCRQqnVUHd/LS
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
0N771uf7i0+RlpW4Go+jtOKol9212LNEDJqv7F3wjvnLx6hjwWwS/ZWK+oaF
0FAl47ia4s/ffh9lvH1znx5Se5x0gsjMVo3FC4TF8r3yLFZLDFo9W/lJyOee
tCqk0F5ndq8p49fPupaeRGCjb5uATal5fVJ360JoiKJBDK3wc4W4dzd3be3b
XUrO/nJgK1/0L8ZnMwmOB57cuX7xI0JqeVCSx2OlBx4ftXbeDOh0eCweEWQ5
PT8uIiG6btbBZ9H1nwDrob9cWxB03XQ+JLpZf9cTAgLXFd5bpDprINT7omFk
Ycnv26cOxIe52a/UJm6bOx5SDY5A/1AL/F6piowQWzFlp+ubb4nx07YVfJrL
5QVHlafvcve5Mm3t6aXHnOIYaE5qtJEAzg0+O0VYUOVVMHqiF78IVhMdJb5s
wlan8CYFOxir7J2tzVKo3zrM8gfCv7AK182Xl/SGRM9cDsxu0BOIJghcuMac
PXOkIeWXvnkCpDQ47IzohD4Lx250CKvvjvkLsfEfH91ZDg1ddWKeLY4LI2Qf
+esrxCAR1TPuKXnf/sbRfS+J1FlyaPZQSMHXNRNNV1FRmF7T+88dseL+Szav
DVMpWo1DSHF6sBoatkppllUemr+r/I+YrhOFRI6rOiXmNOn+5SRlhZjvEtlm
rKZkdO9S38nnNRwTitlNZjJwSOluj9ZA0iuPTLuVU8tDqIFK9QWPKT/60LTg
3wFtcmX8zS0nZ/eBDrhaJqBhCJugM3iZ5JT+Myw9qxgNMi2XivN33Nh93PK9
owzSqByEHnzGbgu674cPW7/H1l+POwd6HhE/WMqdm90T2u9kFouGofyPV4eu
HD6p90Szp4Qa0rctedVFL5xle0xZuk1KP4XMRhhvLt3bLtJdZP9u48j0Tsx1
nQfd96rUh0c15/wnDDnhDIRVmmIgvXX06J6jDB0KKI26PWD0p6+cz1+Q67XZ
xV5918nzQxfd8MymUHlNClLQgpfndId231MPqUXqKtKMR+8YO7LHCH20YMtd
GuzcgH1nHlo8eclBappdzj6lpuLAS89O9j12N/lpIYlY+Oj68F7Skptal5rQ
t+Xjy8uy8t3677fL9m3effZbwXW0j/4Kw+S371xmlZ9F4n35i4Y5WJfIy3OG
9j609lxgQqtmoqKHujbbS91qVc95Z9z0w+jsz4dOALMoJI+9Z5YuFR1y9TaW
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
ph1RwD5GAyPSKb9wbm8fg9fhmU6l4dEYHIlAhdeA+gL8VsdmUMj81obFEWnQ
vOk/0+D+E3A4LOqH2sESKHDt9E+gt4zFoBAIHYE6iVRmn93lB/MD+NE7qVQi
FnojcRTWt+Kq/5WqCQYGBgYGBgbmXwOrJhgYGBgYGBiYnwFWTTAwMDAwMDAw
PwOsmmBgYGBgYGBgfgZYNcHAwMDAwMDA/AywaoKBgYGBgYGB+Rlg1QQDAwMD
AwMD8zPAqgkGBgYGBgYG5meAVRMMDAwMDAwMzM8AqyaYPwWZzcyLtTC4f9FI
+1FCLq61oTIi/IHmNc1HFi+yyjoOc+qAC4JNtemvPTQ1L93wdowpbeM2IHzu
O+pcvaTj974Cje7VMvQUKpdTkGhz10zz9iXr2Mz21qb6+EgzzRuaD02epZd0
HMnwrxPkIpMeG/ETtIpJa21pbkyKttDU07R64Jha3JMEf57WlsKgV5qaOldd
rYORLWALMtja9aqOpuaroMKW1s+XQVkoSnV8YKl5S9MyJqmxuaU5JcZS00DT
/J59ShFUAAHmUHC0t5eF+GhpXtF9ahaQ38xrLYm097imranp9SarvvnzwYt0
ECzNdDF/+D/2zgIsiq2N42OAgYqFLQZ2oSio2KjYgViUdImICQa2hGASIg0S
KiDdjXQu3d3sLtu9szvfLOoFAe/1cl2Fz/09j8+9u8y+c86cmP953xNwCZtG
xtW1tCMzE57p39Ezufs8KZ8BcvNQGxSqMtzX4MJVg9cmvogmVkdZ7GtPwwt6
eu7v0utbBnI0JBpdE+l3Wf/aRZtH7/MaWcjy+DddBt08U+oGZPC3Q4egKsS7
F1Z6V/QehISUNSLxhck2l+F+6cbj6GwSjTAQg9UFPq9s9C7DBgOL65HEItig
yfl7Rg+jYIN4LuSBx2+kt2qiY8ktxYUFiLzi2uJWEp35TZtggwwmpr65qgCR
m5Od1ZPcnLyqRhydNEiaEIsM4etKCnK/JjI7r7yhFgexBnbCBx2JbijJ6c4r
An4ynX1OZmSRUfi67ILcr5dlF5fXo3F/2KkiIBmNq8tCFNeWtxDovfPeQSN5
m4iMnQnMBLbb+TU2lH96aLoSGAasXXzIJRKCvnZWTAhCpNspHIer5gTVXU8/
NYBlwefn7IU/Aho3Yiorf32ufgJoJt3HcvXE+cAkYJOVR3V9dd4ry7UAH7BK
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
gcx2gH/vrcBQN1+re2dO7jl67LjmLbOnPumlXjaXdm0cPuLwk7z3dX2SwWyD
Cp3uHJmxZKnY7LNefsXYLrvwP0p7fnDoY+3Laorn5OW+YGCu6VVe13f7px+G
DdJp1bFpga+tbd8E5CGrft8s20oL00gn+5AhrZq+QIXIOYkuLy3v3XlkYqSu
clZO4945r9pGbo9zWSCE/Bj2/PLimfrmgWW1n79BvQu+eXQWsFTxVUrUYHmZ
DRXa8KWhnpyOytjohh6nzRl/sEzh5kz5oQKtFap5eeGIlrikRRiSwYnqM5qh
YpML4uvmzTj+EMEs4+Y2qf8SFsQqzQ9wsLp718Tspq6WopzSRTm7/PR/tRp6
YGDjq4Jvic7R0n+aWMTq0kiE6Ao3taWAyD49d+82zmLXgYNrhMKveIUnPiz9
s/b0+z/gX6mm/ml0t9dYJjQKENTwe5ryW+fqIhM63qksm7xu9a7j154Y7F20
UFhCZYNVDYpTKRvJ6XfPTBknuf3CrWyog84go9LKvS4qi69cKiw8V1hkysJT
px/7Z3YyyZ+j0AwCVPTkqcLuUSPXqd7RV1M6tGHmornqvuZZXe2EFvhBf/uG
YVNOWRUEtH6bBjqqE+Eef3fTeMHJo3dcuhRNQZM/twn4h5hC7+s3FwBzhKZN
miP8ha1Kq02yiv/Z+TVogXNHJrTXVCan+N0ye+/+Pm2wLY9is2G5iqovyeqf
stJqFO67k1oboE9GiruXL1glvfSSh2twYlZ+WVkHjcTgSj/HBlm0FCNbw9PA
AQ9XxNeVN6zszDcKRwUASb13Znl/cIwOpEC4usoSRH+FmJeVVdvYSaZ8L2jS
GZpndXKRiMhC6UvHLULS0zNyKtsacCCb/Ye+r1idpSQfmV2nr8zSi/3q1ydC
2I+2J0W2z1q4z6E9polrU21onaTW8l67JH+luKC4Dc1kfceHQ4b75PsKGxaI
iIto2Jl6xWTl5Be1kLBcW4HGKLD6ZHEY2Gt7Paj2a/9Q3hJvrDQV2CRzVy+e
SqT9h1uT2qAsU58Prjd9c7PqCSjyH1oVhyI/QTWB1Hr/Ky9PjRyj8PpSIDdn
8Pwj9ILOpJun500ZO2L0hGkHdLwRkW34TjKTM/mSVYLNeHxq0rqDh8zsWiAS
G1Xs7vh8l7ZLZn4WCtVRWxp9VVhf9+QJD1RNZ1f7AMnwGP/dtT1LgJH8/PPF
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
c5Mb9NKidNerOkJCiz6+TXTB7NOvTGP/M8tZUMtnIuNtHXcLLdp4+ahtehO8
BtT3QKNvRek70ytCQgtFVm864+SPA2HF1J+orUuzuSU6Z4nIytVKVq9R4E92
QsIMdMgtYLrZLeXlQvNlttgWRw70nRn/JP+kaoKGEgaDSiJiuMfZuAfauOAw
WDKVyeKN8P8YDZJE5MZo44Zqw6AJ1F6fOux/cA4JsjiHBNEYHIlAYbDgGXPf
w6l1TDqZxKluWByBQmPBhdKvYDIZFBKnE8L281N+MH+GL9E7ofZIYfAmrjoM
b/knVRMMDAwMDAwMzG8DqyYYGBgYGBgYmF8BVk0wMDAwMDAwML8CrJpgYGBg
YGBgYH4FWDXBwMDAwMDAwPwKsGqCgYGBgYGBgfkVYNUEAwMDAwMDA/MrwKoJ
BgYGBgYGBuZXgFUTDAwMDAwMDMyvAKsmmL8FgUHLfm9y1VD9ppZFdGZHS315
aOgdhC7CwsQprQQEKZ8eY4EgsibppQsCoXnJ/XFkUQurPtPT0FZbV0P7dXAZ
CtWneegtRBYzN+bBDSPENQ3z9ymoZmTdh3AjxEXE/bv2SUUgSO6FQVZerNVN
jkGzyKTmpsaG2AgThB7C7I5tQmFvDP46zU15vi8QCJ3zjub+eU1gU56/ueN5
HQTihW9eU3PnY1ASChJs75giLiNMI2MbGpsa4yNNEVcRxrcfxReAIImHKeQd
qNaSQC9NxHmdJ0ZvcxrZLUXhj1wuaCEQbl6pdY2dFy9Cdbk4xcH4PlTC98Le
VyObUSlR9zWvI+7eeBCTQ2fy8lIbFKos+LW2hq627d3X2fWslqLIx+6XNBEI
l5dJNcjeXA3Z1lYZ9uaspq6WjaFnZh2rtSTKjmvwuXt8da8M9jk0ECzLfmlh
jTiHuBUYUFTXis2Ne3QO6pcu34lII1BxnU92YJFRPrralzSt9F3TahitZXGO
XlcQGgjH51EVdfCNUf8q36omGobUWJifl5NdWF3YRKQxurYJGoOKQubl5Kd3
IzMrMyc/pwhZ306i94d7NFgkEFdTlJeV8Sl9GdmlddVYkNW7lNFQ7XVFmV8y
m5UDfZkO6g+ex1FbS4qgb5hfmd9I+A/dmfJzmKR2bE16TmF1aSOe9m1NaKUS
vUxER04DpgHrn/rU15XG3zNdBAwCls/d5RIBgvhPjzFAMCflqep+qGqOPbXJ
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
gQl7bu5xr+HFewcGuFIwQueAzKyeynE6H5/GNZ+8ku/VPRaNSSMTyFRKiUuI
wZoRfHyCitZX3hEHcrv7v/jOGToGveRZ5PWDg4eqn7JPLuLR+bha70yrHePH
jOipHKXnrbJ+gyF/J34NG2RQIIjtVdSYy6fXT+YbP3eFcVZwWT87jslmEuoz
oy+MPql79pAXBkvpH4MjzJ+jd6qJQcG0BO7T3rZqwrxb7oUd/eVqMHY1puLh
2cn8whMlF2sFRiHZnTsHW6NqPJXnixzZfs43nQLSQVJbQWGmd0INjcVtcmS0
81ptjQPjr2bkfjzaDkkjenTwze2bAWDq+uvnvCq+RBhgM+lgtoHJyf3jRa44
5BGr8l0/aIzmByYOnigtf/TwwUOctTeFA3u3LBw5c4bgkLkbt+46cEz/sWl0
ezsDVeJlabFuu20Gtqhb2gcsUJ/QhswODTF78PBJYEBK8ff9Nn0EmwW2ZRV+
eGHRA5YWFm88gwtrvwlY9xWUBr97zy6onlDT07h+2+TZm9c52BYiL3pCChMs
CFVbtGs6AEyXXb1l36dVXCWFnWsXLhoJAFOUZHXfl0GTdR68ewBA7QCrI/1e
2PdUjnYWFhGxpaj2Hyh2TFamldoVhPpRjasXze8/9E+Pqaaz/llfE2c3+NDF
n1RTl/aK8c2zOQYASkqW0Vk8ig6BLW1Of/vI2rKncnR38kgvodB/sDrYkfDs
7bUjaqd01fRu3H3k6JLcXNnRz2RJS2prspO1jfmDN5EBxRQq4x+tY/9huqkm
FLHR5S5HNW2ffDuzDtdjhaSSm7ODTo3YvFp6hsb7xJ5uyfpd2CwGA13bUJ6T
k1dQiaJge7kQ0U5sD7SXnrx1yV5Zi6KCdvbn7gDf8cHC89TcKTssj7sUdgmr
8gkWGdPhvvO87vHJN9Lzmj42WU60mTQ7tYuTRi066nL7PfrzEhoDxFXmm6w9
smf3hBOhMW1ga5Fn0MUF29YsWLRATOTzstusmTOmCgwZOYJ/0JgpU6fPXLBH
9+Tb5iY6quKNqYnksrMPX9vFfbz3qaCklrM89P80ezaLycTUNVXm5uTmVbSS
MH23hpPr8TzWz2fAXsz6DXRCQ1FFZkpKUuBzLVnFNbJzVH1D63g5q2U2szpc
766SXME3VXi+yJw5sz/XJqE5IrPnik4dP2i51FYLTwLY9vuqlM1mk1EVyJLs
nJycgrqOZsK/0pOzqR2okvS89KQIT1PzXUJL12vvvp/dD/fdUdqrm8o4pZNf
g0Li2bxeOvzka1I8s+h+SZfVZjI26f5bje0jJl/Wccuu6EfTHxYFVVmXk5Ke
HuVlcACxfsHMPY6Pk/rrtqH85/U+V3Q+gO9b+zolMLyhm2pCU1vdjKaNmjll
x+Q7OT2HFGSVdiTfVZ0CrN6odT6a1kT6Ay2cRepA+6pdkR8vMEXkoENpOPLn
f9KjGSaxpcllj5rEbEBASf8D6pNLhxbqf3nd6iH8282yX1RwQph8k2AGCZ1r
ON1EX/VMOKP2UywnNud0Wo5r7CXxifzLlqg6vcV9nOPX0vLun5oxSGr1cfV3
tDoC9EoqjYjBYTEcPi+7oZCVsddm7d+zcoRmWHxRIwZPJFAZLDam6O01g7nA
JP7BgzgnV4bzDVu4/vSzN1gQ9398QRaVgA3SubtvkoDg9L02ub08fvh/w6LR
GtxckwIDIwfqxazfUPnh6molQaiUNh21jwttxWIIVNr/cUr052BzmBE662Yc
EFtn6Y3B1H2pTGg0pj2vI+2umvh4iQV7db8Nd/lLQNK61PmAwfoxAgLjhBFu
JvH/iL+KjS50f7qJX4xvwgxpXdP0tnw0EU9m9DPfBIdKzxNm8qPHjxWYdczu
6nsynac17YtqUlJfbFnRJcZUqs9xyf0jZi68kfqmiNKflto7sp8on5vDN4xv
ubz+61cNmBYshdJvb3orCG8JdXhUSE6G4zX9R/momhi1cYWeuogThxUVd+7d
vliYE/tnJDB7/bY9BxSP3z5jGZ/bTuJOsznR22o/GDsemjZ6lMxm3ddxGPCP
HFNlElpRz7eoinJevMI4701NL+2wmUxWQ0yCreb59XMWbty59qCiouJ+xT1L
t2zbufOsk28evr57uI/27Oagq/u3bj1y0yGyFcR3dSfgazsyXz49vmqHzLL5
OxT3cNbeNh/cMm/NAf1rzvEZHSDlu74HUtGtcXt3LQJ0Uks6NQQNXZ2W8eaJ
s42VtYWFhZmJhc5OlV1qkqfe+FV39FppcOI1vdyrtYTz6RbfTHXto9ttOZEH
uPGawgb0GToWA6wPinE0VDiofeGGoTFUTFZv35UTeHlx2CcIRd6peuPHLzu1
4FJStw/IBGnRz3YKSM8SnqCf/b7qt515kGrqCNN5uGcsp5bMO3fQJh/VH27Z
5h2kBjD7mbHuJYUj5+9YPjC+//ipV2IOuf84T74F8+Gam/IETunMOb3ZJLOe
zuRp6eArYiPUgAWikwAxuf0HFbgrwfsUFaX37FdX13/hU4Bv6CeXZ6ISyvxM
jxzSQeheN7G2MLvv7pve2NDXifoJ3MgDdiVkODb4f5WPqole4ptivklqsbCQ
0OzZc8TElyxdsnTh0nnCnFWCRYoSGn7xzXjuuQaoKWNKvA3Mdy5YqmB7K7Dq
T52zYJEx2Ihr5icklklv1Paqimv5+Z/8iKbY6uf7t0qKCX9c4ZgtukXH2q4S
JHdPK666Nuz+M501Ygcfa7uXEHvMTvIdOy1psdlC3CWTOWKLpbX9WlN+ON+n
k9ElT7df0Tu66kF2aev3z8e1ODw7rjISOG2SXNNrscOikfAfDB8jpJZJyCDc
St419tbQ/wc3NjhHNUUMaF8Tiw6WOXpfVxaafVjPv6bgL74ZWxAUeWP+Fn0b
rYDuZ6rZbBCZbqF0QWXP/FsxMRW9cTaBjT7vTeUnciKiKcheDuPxrSt9Db4c
jNE/tmnXku3GHq1gvw/xA4LNwZl2B2YMAYBhOxee8culMnhaOqTG3LT7q05v
mb9YXFioE5EDZmGv+tW6UkNA1hM18dl7VK3iE/o6Lb9Kwacol7Cv6b/KR9XE
ZtIYZM4q08cFgU44P+GxRNrnfZOc02hMGomMw2DwFBJ3xeKPqCY2mwWN/mQC
FoPFEanM/9f5yqIzKfgv+YHygCOSKUzw26VEOokaeOzy0d0jNj32yGlEU3vM
DptNJ1GI2C+mMBjoe7B+nEIoO0wKjkjknI/7/v0JkA5NizQyPjVYyzG1prS3
eeXsgYBSyPl0WAKVSesjDwJXNbknBwW/G9Cq6WOUSxIBjcYTacy/qStYDBqd
hMFBda2HIuQki0HGE/F4DInem+UbNid+ZoHfpZMAMHS0gvS1d99efvcfg82N
conDY3BkKmtAeNUqq2LvavMBI4bvnKcRkM9j1cTZR0rGEnBdtxVw+3oyjdqv
PhaLxqAQoMGGQKYPmNjuBZGocGdYNf2H6bav6Z+hJbPhndE5dU3l6y62Cei+
iZdUYPTwCmKO7LPQIhQvr0H/GzCplEane+9eeXhQf+VyZJi/DvJ1yE0JEQCY
LGd2LgD5f55BgPnDtAQmWq1fAAATZG+ceFXbxmDBpTNQyfKpcjN4kEdIhFfo
/qP8k6qJc3sjOsby9dHpgPDR1bovk4tzMzlh1/Iys+tbSDTe7JRlcaNBVlem
p2dxz8+lJsZEWRxSv3pxmU1eccuAFxosOqU95OH7FxYPItLDMqtLG/G0frSb
9J8FKgEyCV1flZaaYKV8UX7a+PnLle2SQ/ttXOV/DgoF31ibkZ78+NTt3TME
xZfus4z0aeC6BmEGFlQ0qbk0KyM96rmN/xNz9zJiwX/iLDFMd/5J1UQHwex4
q2NKADCUs/9y8FD+jzHW5gtOu/6koKmeVy/NTbTTUOXjm/DxbSPHDZU3Vfcq
+eEq3oCBzWayaKgS/+uGknzjFqrvNEtq6Ecnl/9ZoHpVUhCoj+DjGw8IzFqj
a5SFKSHS+2oZF6YblVUJJrqjhk8aNHry4pM3k1D5BBq1+14CmP5PfWC+zY4J
o/iGr9M9/qoZRWTCgZr+q/yTqgkazFsast6H2tg9t3v8xOZLwDUnmydxWW0E
3jhWoZe2NmRFBFtY2Hx8m7WNRUBhQt1/5o4MTh+Br0vLfGHx2DncOwWJh9eA
+h6oUNrbKmIjoFpn7egamFPOhKVsvwKDaUiOsrK0tXZwfJtaTP2/bvOE6Utw
FajMtzZWFlZvE95Vs9kDfyIM8z3+SdUEAwMDAwMDA/PbwKoJBgYGBgYGBuZX
gFUTDAwMDAwMDMyvAKsmGBgYGBgYGJhfAVZNMDAwMDAwMDC/AqyaYGBgYGBg
YGB+BVg1wcDAwMDAwMD8CrBqgoGBgYGBgYH5FWDVBAMDAwMDAwPzK8CqCeZv
QWcx0S1FuQXp+ZklLR00Cgnf1FiYkZ1RUlTVjuu8foVzdRqxrbY6IyMjp6a8
GUdhkzpqC8ozszMy6xrxVN7cEshrGGwWprUkrygjN6O4pZ1CIRNbmooycjJK
CivasL25eobBZmNaS/O5BpvbKGQyqbWZY7C4oBzVK4O/DoWMaajJyMjMqixG
YsggGYMsrszKzMioacCQKV1SCIJYVHlBMZTCouZWEplMRjVzkltUUMZJIYOH
KeQdFAoOWZuRkZVZXlSPJrMp2Kay6mwo79W17SRyby5epFDxjXWZHIOFdWjS
J4MZHINtxF4Z/EWgCoJrryoqgdpfYWMTnkShdbSUZOanF+QWtaCZrC4hyqlU
QlNdVkZ2ZllBbQeUQlxLRU0OlMKqGhRPU8g7oLzj0bUlpRlZGflIJJZIoWNa
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
dXaI5EixqUst336lmsitee5P1w2Ztf7kMusyIhNE+R29txYYxFVNeQNSNUFJ
rk8226W+dDxw5OWjDAaIzou/PGrN2NmC4mYeX6kmSkeFr9NmftG1yqImBRg6
iA5BWMoBQyDVZBGfyUPVBBV7Y+qD/TpLRwPK7haQyMGVJV4du37crLFC91y/
VU0cEeh3QVt72DJTfcUlKvpTj/ikokmsbw02pVsrcgwedjFJooKEquTr4zcL
Th89w9B5oKomKg4Z8WK3wLLV26feyqwjgcQ4g2d7gJGQaroWntypmqC8t2Y/
PXZ52TBA0eHKeyJIRqYbTt0zdeLwCTfsv1FNbBbIIJMJzfWlsfY7Lz596J3E
9dN9w0fVhEp/GvVgxVGVm9eev/WMeXp94kiRadsm3Uyt7Oi695ZBbEnxVRy0
fIXMKN2c+i7tmZX+MFh9FiCpr2iXg+XhWvzPoRMrckylTspvmKLoGVLF+Cxu
2ppDDW12zpg0/7qKZWb1L69Ht2e7xlsvP3Xkqt7T114pLrdmj5s3acPoKwm5
TV99SDq5KtdMRnO77OQDL/zLaZ/357S3RBg92T19yryrSubpVTxsYv0CJpXc
9Px6iIfDk+bvbVlh0Mk5fiqCq+eLAmrv4htBdrln9HnB0ZMOLFLzz+tchoZG
FXxFoP6dBQCw8cZ2N+g5SpvrZu11c4Bpty0S6tp7Nt7PYTLpRUEnpsuJTwWO
h0bUQN12cOKlCROm7BZReZvZ2cC5kMrBQtODa3R27L8eV/pEWXaT/LqLTmVg
01f74JksZknImVkcg0eDgqHqhYxIvjxxyrQdQkqv0r8x+Ich1cVaPFgGDJLR
kngMvRjEeyvc2jYdmHjtVlh5lxEH6iDKI3TEd8wdD6gGvC6BBEFU2rWJQjO2
ztjvmcbt6wcglMbUJ9YrgJFSxxZYlNFZICnklOnuKcCES7pvCpq+6fraQ5Jc
rolO0b7vbOnpc116tKSWScT7NpDxlWyiNGU+e7SSY1DMvITCNWixdzIgeFH7
ZV4jD/tSqHTqYq6tPCzGByh42XCUQ1be7enLRNaM3ugUTaJ1mRZSW3Nc7KSB
cSsVZ5sU4RkgOVL74YFJgOBZhFsOckDua+JokiSjTSfEAGDfc1NIQuCLS0yE
V4uv4l9tH9pBInQ+Seso9362Bpi8YrfgzZx2KkiNueysPBEQ1Dxmn17LQ8UI
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
w9QFRwGb12n5xfXhmWJWGTrHRF1opMBggTHzzlpmkztDMRDTWyIvb5kqv+vI
M38sNKx3lHr7PD9+P7qDzL17glpvKXL+zLaF96uKWnpU599XTaxyXL65pvBo
wUGjR4lp3c8gdG7HJmW2fbgiP0N+xyF7Xwz0WTBFLx48WLftUTIqh1ef4O8D
tcrSDA+9y8LiZ8xjX1b0P48riwGWufrd3SfcA6LCwqpK5/0SO+9z6QlMXWu2
f57DqS1SwnPWqqq8QBaieNEXMZms9rSbS4+unwTsf2Tx8j13BTcxKTnW3/bs
hUUAv5TmBvNsfD/Zq/D3wVeBsTfV963qqRwlhYX1zcJKKn+0QZfKaCypirJy
ubRlhrDwYk0nkzgSgyeqidaR7/16PyCyYZfYWa/4uIRP5ZgS+PTEEnmxycA2
5ycJTbw8H9e/QYbmOR5fPH9uT+W4Z+Nep2Ac5UdL/MQWTHF0idf5E/ILhBav
3/44P6q6v++R4Q2c4JZlLicMNwHAtpsnrYM/7/pIjPSzuivDN2vx1klaH0ow
FJ58HWoHmGVhoSXXUyEuFhbW1H2SmPfD6TOrtaIhySXKXHHRvNlz9umfDUS3
kfrT0AHNYMltFQE3Hc8uUHwU45LzlQD8HdXUhK5zuj19hOzyo7tfdTTiuuSx
KbTWUXkK3+GNZ30T+1A1sRtxjc7Xp46QnndQ3hlZiensE9mlbzIfrJsocWGX
cWw9Cxp3WEwqlUIg01lszmZ7Ugfm5QFNnWPDdeOyG3o8HPl91cRuIrS63pwx
erXwji2ODWUdneeK2eW+uZZrp6zU3XYnto4FdZLofI/7D9bKPfhQk8zLz/B3
4R6VohJxra2RLh6RIWG1/c3XxGZDEwcaibNQ0w0MGk3AE2n0Hw1hldF6KxXE
hYatt7aJKWnGEvBUFm9GWyyTGeGyc8nawVCjHDRo8NDPi7hDh3BOYgLA4M2r
lT2jO8OB/mOwmSCdRMBjeypH6JckMo3J/H45ovNdneSGzRHfs0zLJxnV3k6k
kOlsNk8OD9VWxZteHgVM45YZ35di5PtYjIIAn+aVt3llfRrXri9hcQ46YTCY
nsoRj8NTaNw++Tugs20Uzi4W4Je4efFlei0GC4kCOvPflJ+Q7k6PuLH/4BBu
5zBoCN+3/cWSaUssvVqxvd0180M+RoMk4r7TqRKJFDrj+42RgUnwPjRplZj0
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
E6+IMtygm8aBgyt8n6oxbdoa+eU3k/okIFR2PtqLT9m4iGvG3ayoyh925kGq
qSNU/cWRyXApEbgiZZ7XxsZzp38DCPVglr3utZvSsle1jQ11DSxs3yRmE3/F
3HHze9lnx5cAa17oRrf0cZm3NUQ9vDoHmLPjxm7nOvKPyyZKU2aN6drtC6Fc
nDP+qKtdUivpz57pa0so9dWXPaGufO2enqnRM4PXPumN9ex/Lbk5u0h30YZN
B0cdCyjsx5uUE3hljfgMYLJapE36YK98hE8esIlMSkVOHhh2fFJN1GK/VMM9
m9bwcXHxcPMsWyEkvE5IUGglHy8PN5fgyQ1q/gnNWDhjCeiuoGtPz6z94q0U
WrNZwyKf8t/3gDJInV0R9w0VNgpv3nPlXVV832unf4jm+GoX6QOblvFxs3zj
3AL7r5rZVvZ33U9neVXwc2u1rfwyVlfcSnrtwaGVh+aYHdi5XuBzsqwTWie0
RmglPx+cLNKCCl4f6uDTcUEytjvslomCEMsPz8e/fPVqYWFhweWrBHi4eJdz
bX96zTm7rd/VPm32Ly+c5gQU9ZKrBy12GBQC7uMTazVR4Y1b1VyLo37Bhtz+
g0FpcIZVU/iw9jUxqGDpK+8HZ7h5ZDUDagp+4Zu78oOiHq46oGV1JbC5zx+Z
TLARZXpK49yxVdqxsYM4XYLJABt9op/vnw1V+IlSm2+FDts7TQYGthyM1ZLb
c3TdIX23NrbeytebGk81M83dws8TQ4r7vpbeURoYoLZ+r9JTGedSyiCcTcR6
MEf/2p6Fk4DpwLLHT0LK2Hnrym9AQ0CWzcXlPJLnzRKTfuFriU356c/Wn71z
94hLJZ7Yq6LAVz4Vv9EwObdt9Z0Ap7TBjqi6W8FI+JTLl3UgDlFNw4pPqolJ
p9LIeBy2Xwg4IpX2ad0kk8GkEkmEHn/EEcl05n+vtkwIKokMWcbhiBTGf/Wh
M2h0Cr5nfPBEMpkO9lr7yaTiiH5nb545NG6XlXtuUxel9+QdlCx0KFn6Txc8
lvBPskCBJ5IJ30k/HIlIgW/E6yPZqCCYFqmjK8+h5pBWXTrYuMJJRyORiThW
0tEH0RL/FFiqCT7lcnjP0MGnXFKocBEnEKm/9AxnuA6SsHgoJ/vJQihYDBqZ
QCTgsSQabRALYuA6WpLve1MeAEZPkt54J6Lsz1ZNn065xOOhBKUwfqk3hkEh
wpWRRKP2k01MBp1KJWBxBBKeMrhzDyDBHOV+av0WYAqwSkc7rLz35Xd/GAyo
BSZCjS2BTPvOxSRsAV4sSsIRiMT+sgnuJegUVoNPpFIG3VdBqinKGlFNw5E+
65r+Gloy6iN0riipnrrnZJmAGZrzkvJ1XmgqL91sH1LY1vn/n/6toZNJjQ5P
I966upIHc8wpAttpeBf8QIgbAGbvfnbFv6Hrz+5t/1gw9Kzb14TGTx05b5Vm
ildRN/XPnqH7g6FjqR6aPqEh1vXIPXTDjL9SNcE3V3Z8NHpzeh6wRFbkskt8
XkYqfOpaZmpaTROBwp6VsvCVkd1N5aVJSamsA90SYqLCDU5cvKMhbJlX3DLs
hQaDSm4PMY9yMzIITgpMLS+sh/f3IO35UAOfQUroqC5LTIgxOHFt7/wZK9fL
2qWG9Z0DRPitgfeStJXl5QQ4eV1aK7Z2KdchRZ1kZtmvnHpE+CnQKWB3TWVB
WmxocLDhPffQmAA0fOYIwjDir1RN0PgsM87k3HEAGA2vjh3BMerTGWsC0+be
tcxvqmPXS3MSrJRlOTimf3rb+Mkj9z1XfluKJdOH8ymXn2Ey6QwqutjvnrYw
x5RlFw/qJ9b/bgc3/Y1A5ao4P+COEgfHVGDKIrEb+jnYUgJtqKZxEQYLPDH3
5rzYjpEjRgKr9z/2eddCwFGZg5iqRRhiCE1g4t2re+ZycC5ecS/mbR4Jqozs
OaIegV38laoJ6sxb6jOjQsytHa0trMz/OXDNwdwqLhONY8+FINBLW+szw4OM
jMw/vc3U3Mi/IKH2j7kjA6752Nq0DDcji1dh71Ma/vAVF8MDKFPa0eWx4VCp
M33pHJBdRkek7HAEaiVqioI93hqbGJt5hxe0tw51gBAGCRUHNsRFe1oZmdk7
p7VXDnYHHsIQ8leqJgQEBAQEBASEHwZRTQgICAgICAgIAwFRTQgICAgICAgI
AwFRTQgICAgICAgIAwFRTQgICAgICAgIAwFRTQgICAgICAgIAwFRTQgICAgI
CAgIAwFRTQgICAgICAgIAwFRTQgICAgICAgIAwFRTQi/CiqDjmkpzMlPz8so
bumgkAjYpsYCVBaquLCyvfvr9StMECTi0TVVKBQqu7qsuZvEJHTU5JdlZKEy
ahuxZPbcEshuaExGZ2txbiEqB1XU0k4iEfEtTYWobFRxQTm6azBXz9CYzM7W
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
3iL+0MI6sbJwAGZWAb2mOiz93fV9UpISyrfv2UYkNdCbBn23AQAMPv5I1URD
0Yw4m9uXlq3cLCSwYhk/Hw8PLzNW3tblIk9tc2vZc5IbdtGseLub6jw8Kz5F
5lu8nFfN6WlE/x0qymYQ7F9lpLHlXp4V228cN06oBqpp4MFUU0Fu4JObPDzL
F23495SVJx4FimmwUuYRa3BoES+PwCkLbRzSxTFXAACAvfyRqulTYEYqhUj8
MWQe9olKQxjscZZ9u+g3WKH22HK1AeDbJkEiiUKmAR/QrwCz1SH0T62ORCLT
mGdKDnSeAD0EocM08td+AwS3BAAGhD9SNQEAAAAAAAD8NEA1AQAAAAAAAHQH
oJoAAAAAAAAAugNQTQAAAAAAAADdAagmAAAAAAAAgO4AVBMAAAAAAABAdwCq
CQAAAAAAAKA7ANUEAAAAAAAA0B2AagIAAAAAAADoDkA1AfqLNjolzlfz3DX5
y8e0AmIaqkpy3N2uy5+Q17r9KioTRcmfkyEoWl4YbmkiL6+gZvbUO70aKY21
vqareEJB0dY1u7Z2QMvQUwgIPTHwwUUN+fMK93wjaqrKi/09b8mflL9340V4
GoqSemAQSQrSvowZPHLHJ6yqsqIsyEtT/pT8nWu6oak9Mdh9qiqS3lnIyyuq
GN5zTKpEK5Mc7xmqKMrLW7xLqujRaURMg1ZH5I8r62MGKxhVKS4PWAbNHOLL
KwdlhHns9qdH6N+6h9XwTXefgrKqmgi/+wrq8jcuPghMoMH4bylrarNdbY4d
UT7+7IZtfBmjKs1T5/XJo/Lyry3DC8tZDwN7wJ62zKhXt7Ww5++6m3tOSVVD
TIDWscvy185p+sZR6G3fUtbV5bnbKymcOPbkmnVsMVKT4ffcTE1BXt7ILKSA
nTlkHxQUzY6z1Hokryx/xdkpvbimOTFYR+ma3KXT172i2ig/f8YVZjAnweaR
jrwSZvBdSlFNazJm8IbcRbUrHpjBFjaUATCAfFVNDAZMKY/LSwwL/UQYLio2
r5zIoHyXmAFTabVZ+SmRod8TFpGYW15JRpFfp3dDCGhTXmJM5JfChOPSCnKa
eviAUysTC767LRHR2aVtMLljOoSINuclxX67aFRqfnYj+vscmdINYHxNY24o
LiEntaSF0n68q6UQHLQWcE6HZkAbTFzKyvIiHjxajDVAQe7dln6YqPqcjI6i
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
4u3+qkSEzqx9K6YzrePjMy+Kqhlf07p0oz3T+qTGaobJDBwHDPx8W9HdaCh3
6Fl20A1gqp4K7/HZKw2c69prvquMjegq20dizBxzNp3z6U74wWriv9PXCkY8
/5CY4lAHn6GbYNBUU3cNwthOauE8qsuf6cA6ITFJqaOHv05JXjil5BHe1Etd
eRloL/dWNb0k8Y1D4hI8Ukfl71/zjM9ow416GzBpoK3d5YDCRmoIuJ7kv60Z
pR0KiURuTk5z0L4hspaFT5hbDAriQQkRFqGDhw9f8w4uQjUNFz4dGU0BOuL7
xU/dcY7p+OpwjOqnri7e/JXMkmXUQE0BVguKiEkek/6aLKrHT7kE1XS10zbx
UlpSslyu6ouuY+Xbt5P60kMSoqxCBySkrnoFFvQ3Ul9KoXr/qMvJC3rl7Wzv
QL3qz9L2+pEzUuc45Lz8KjtHfTqK6q/J64jGNmootxqmvRo7f03NNM8D4RP6
DB2ZCNYGIGxuioupad158vSlra19cFwV6i/owP5C32Td2fN2KLPrpQ7bdUME
8XHOUvN2r1k3Vy8rovKXJ/Mg1dQdoWN9dD61lGzSOmaZ10rP/YeNXtK3j64D
eOytkzuGTc62Vofe0FwCLBTRP+zZQNeu76do+pjuekdSQvXCjQemdrY2L99F
lnQPv791nIBvyWl4ziO8BsrFpdMlX9kmtWLH2zbCP0tbLPLtvaOSaso6hiZ2
ts9tfMNyW5ro/1psc07Rg+U794hPlglBjrB3KT/k8napRcDMCx9s0kc75UXz
PBCZnAr7Bp9w0FRTe2mQqYUUpxDf7t27uHZxsrGyfF0dgDjEI2j5prYL6gpJ
fc2FL0SuSAz642aOTWxX9BxzfvN2MDK2txdhaH6Bj1dITPdtTWLbv//kn2hN
rPU4JSWwlW0zbV1g8xaJKy8cqsERBtjdpRXBRtaX9rKestX1Lhu0KYt2r8cH
ixdHOUT5oWTZuZuTne27ZBHdzmPqUdb27WbG9vQGL7kje7d9famYtoV91eeL
j0emw8npnPxsQOVJSvWoxQ4Zjx6IfWynLcjLL6zlVRrV/O8/oQc03+BU1fRx
Qs81kQlguUvAXaXNLGf0Q+r+5png3qKwqHvbJe/a6oa2DPsjhQI2ZVsp3jgn
s/1hfELVr2+moJDB5vfRpmLUIcCM43uuhZfS89aV6jdqz/SleC0y40a4LYDU
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
t6dbftThmDln4UwuNQmriuae78thkUumPtOc7Tp79ZNom63bsmyfPd+x1zAR
mz0q+R0XUINSpjteu87Iev5ppGMxVTKPp56DurwWLrX3eXSMcQiYGRnPnrjs
k0ALIzgclOaS2gTnJCMF0e2bNwmfPf0BU9A8FlWcGtwy8fqW4/zzAIknDyx8
aB7c0LDwIKfnyqqbgSnsyjsfp3VMjNg7+KYUGxsxYBn/gc1qNgP+6NCwj44v
pNcLrFsKiNlYJDURqDWlI+UujwL/X4DYw1um3uH9KYOd32hoMAPTt53edjOx
hQKNSZa7K+C4+1qyQkNVDH5GxpvPg4tK/23mHE+ozCgINLC4LL6GkZFDzVw/
GkccV6oJxMPddWkWp59r75K1LPpYMREqDgrKuOezaqL0wp1uzpr8THTTgL1v
tLwrCeRBmzOIXQ3hNhKzD0vKHXBsr+v8ojlpDK21kl0+besWOSPrRrjjd72d
lPrOeqtby2bwMR7da91Q0f55jArmOyU/5pvHpbNfPxZDQfod6s4VMpHcv20F
19rucFhFXX66VnRGbffXNolwt4/31V3b6CYBu56ccy3/pliGBRv13PksMEP6
2Un7vomD1ky7p88Edj8JKYn5/zluk1p+EEjq7eqKtLYJ9/Ov+Bx5aXxADfpH
BklE/NAQqbuQ/kXpUYpCtVgl1y2ftOONaUJVO4GI9Ixjs5OvHST7v9/Luh3o
45MTl67/C0CIV9puRIfW/XpKCwNvq9IDiwblpD8rCwF61Ru+JVVUx12onRTn
TmBwnge+2LF17/tACBqToJ0UiBYNkjBUrUC+JCEqdviKAbZkWZsK0q9cK858
wTuzG4cj0Xa9jfFOvh+jtQAOUTVyC78ZQ+gmQCDqpUNBGQ0GVFMjodL17Wk+
rm27Fx55Y5PcMdSaYgq5q7zaWlJRWGA69yPLAvKnPSTt4XqW++cAWy4ceJlQ
gYdJP/52QoSu7oQ31neOy8qf0w+qSx/hemI8sTM36TLbYaYtswWeWheSBxbY
5Ka9lpVfOZVV3f9RHHU74KAbpJB6a18x6unIClk2Frd+KWiwlHofc2XB7WyC
cw8YmEQ31X6/87HN1+ua5Oa5KwUNIm2ozgjkl23ZDldurJ20ZRvP1t0iIiJi
ImLKukZhqTD8MxoKIuFxKWYfHp6UPX7mgV9F4rchBH8V5bZWcd6esWMbmPqX
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
jRygwi12g++qXTHJ64nAaumNYuqhcEHnVwYhsDBQZRPVoGJAQAXVK13wjGMD
nxKLWkDJIIOjTE9NzKsXXIhq0uY3oaokKETVQGE7wGlgEFX1aV61TzWtOaop
8Kboyx8XG++6dHQlcC7AOePT2iscYvAlN/D3LjXEIPLSUsI0qQY5nj0Jr/j+
Mc54Ain+yoirPDIsC4FTHra5INyeXvGah2vnyTVnvHII5C+eTm9DuoURH7Bg
pxLri2I8CFOir5qrcANs+je8izqHzjsFSvGsCLAxLCJmj6U4RkFBGZJh99BR
ClsS9GTmAtt3qSPyoGkYnUHsys+6s20fHx+wzyK4tKtr6FT/DUTo6k54Y33n
uKz8Of2guvRhZiv+y0pVR957rfUbDx26eS+P0vZ5Iigvx1pFft10OmArh7yF
RxfcNXJxV9qT9eT0EoB3+1n1CLj2S+dbc2ql5/ldc1gEjr1+WdkWpbdG4RjP
dK3YzNqxVU0QCY9LMfvw8KTs8TMP/CoSm8f0asPfBpFYZ22f6OcfhnT7wySB
wPa6JN+IkGDntMZmpEbh6juKwn0+ZobnNn3h2EX+JXVjcvNDnFyj82KrkL9A
FExKbkr0h4iyijb82PahEBku+xBk81pEJySifhRH8hAF6sCkBEQH+39IbWhA
qg2+uas43D8iIySrEfe1E6qnyCfrwVJ+5aeyjpheGBOrveHMzk0r9fOjq/Bf
GaR01qcFUg2m1GOQ3pOA7S7+GBCZHpxJNT+Woxcyrrm4KNTJIzIjvJTWbTdl
FqdFOn0sKW7GfSqygbmmK1/MNUEwPs762HIRpg2cRnUR1YSvDIY5eUakIwYp
yK03ZdEMFhc19YBj7aGr9klwfil60c+75DvHUt8DUkl7mrLDEoK8nZJqKzsg
mNSOK40Ii0rxT8V0gpQvcgTi28pLwj94fUwJLuqiDs6wuRUZER/Ci3IxXcPm
PcunLtz+VQEpa8QNLgoKykgZVjV1J9d6nROcPpVD9Oq9LBhLGCoNCdtZYHeH
8y/mHcd4LCvru0hDJfouwO5mrNXeUxupG6U4H2e7VY3ICi4RG3xJcBbvHum3
Du20CSVcLTbLO9zl5r2ze7jWrpwzeSGP9OM35XDriIfiuIyWEHWxv6dvE9S4
kQrX9ze0SNuGb4t+6X5k0dJVl488yyqEu1IerpE7zP0L5ppAfGeb4yF16joQ
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
GwUarQwU+F0h0httv6czsMuCy05/y2iNlv47Eun7Ze9AQ8FvgmLiP1YhqmmM
8U3VhA4ufi+9Dpi5efdD41KopXtSClIgTFlZupuz5QW5NVv52HZKSMrIbFdV
0Xhq4B+WVEdoG+7Tp2DQjRYSR9bQRAbXo0yX8mGl0hKBdj3F+u827kNv7bpX
itQEphhJHhQR3rNX7uj5w5unTNsuo3M/HUL/8KJ1kIjFRBma35Tv3kInto2D
b63AnrdprrVfRtSWqBYPdY5p2zh3G9u00mcfdaHpxpIKosKye+SOaiiwTpsu
IKmtmwbVMibSEAXf0Wq/7zxdn7HeTbAeoXU/sGqqt7WN9/UNgKDm/758tEIF
oeaMgiSX9691Lx6Qlt2nKfOhsOTPLeaHm099gZfRw0WL1Z96W9TRum1cpNYL
NVFgxZNnkRV9KhYLQlmf9m6/uOOgVjSuEB7v0dF1H3auZ1Nbr+qZO8Dlh/Ad
2nIr0jzMP+hfVti9b9dxCZPM1DHcfBlBU22KndGKJWcuvX9eBhGpECn1kduV
HcDSu9qO2Yz0If4MJAxUFxcWZGF4X+uUpJjYSZOzXqN+IVU7Ggp6HxybYFEL
YUfN7nOEH2Fo1YSnOd0M9y+eslhO6pYPqrOv4xWHqYtP97t7kZNbaD0H+2b2
FdP4ZE+8sMzML2wHh+2fBfHtHaiHrzTFhKX2X3OviBtek68JrLc4tODfrawK
BtZllQnhwR7PzmvtXsa5SV7tjqFHxPN9c8bt2H5CKwKqpZlxcSC2LCcyLNTf
3z8gOCC6NLe2a/CkACRgOkJuvzi3o2cPHec27m2HNF+6OSTn56DJtFgLDSFN
1ocXT9u6du9Dy9KqhIgQz+cXtPcu3bJJ7ugNA4+oF3ILmAX5VC6EQ9V4Cr65
tCwxNCI4IND/C+FJIfktHb8QtAEk4jBRBmZXJIXFZC5/Kgqv/++fMIiKd28i
Pjn5j2nV1EMb1OhooijExyXNqfXBxM7dPyQuML+9k9FTQioF6ooIf39dnOWg
nm16MpU+T6m2cL908F9A8oxtStJXMUSupjZbXNqqcHDnY+dGiPa64HKhyCvi
C4VXb71jDWcf6Yd/gi6o87OlurQQ+072c2+eWLr6B0b657SM+IbgUQE+Kdf3
wa5J+y/rB0eR6RGKGt2SnqnMAkTl9QMicF/2EY8KijoTDDW5OdjFT4ndtXP3
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
dpsRggpCbXklib42QxPkH1lSS39y3wBTYqP1VFVWRvGG1lMTM7egwAJMM44R
y0RwFCjNS3Wz9BwAmLl501bBHh+uiBAv27JlzAAwS07gfBA96mNzReCjB0uB
6dPnTVzBI/rF2Ssswss6m2kqy3xg+eNXcVUjtJlyFNBRXJse8I3H7e8dXFAF
gt9e8U2ucrv9Vk1G9rDO+YfGpp+8fXPa6jGMeNxwFvKDLwocngcA0zes5tz+
1WkvsHXtShb4Q7H1h91SQPLw3cKYGijLzNn+jZ6lq3dWa1U7srYJAeE38EU1
4Sgd+Xm+167s3jZnvuCO+zHOxT/yihEhTH42yviO/M7tc7frulcnDD2F+2+o
FBKpIacwFYWKiM6oxjYNU3y1drX4W+5cKMW6a5teSgqa+mX4bm3wf/hRYfnC
va9P2RdgBhlDQHxHs5XEJW3VxffSsv5jpXgnWB1rrrxIaM8utpe5hY2De9+c
RBMVRVg1Sb06413f5/NuW9P9h1s2qN1//8iDdtSff0B0Yi7NPfQr3RkVJJMb
80vTw1HhkemVneiR063ZthaRHm6Z/Q5mHbsQ2grj0oJ9fLwd3p4XV5aR5jzj
G1rLyHGHXAuiP97ayssxaSUr/1aOLRxfnLjsnFzsPFtWzh/Ptk3MwLoNImKT
kz+cFwfms65j3cLNyd4L51bujRuXrZkCSF10SksYVksgdaIbc4MTIsJQ8elp
tYTO0XNMEmMhd5QmZYf6+Pu7mF7afWrXTrbjLm6FjHyXKE1Qu/1TCaEt45Zv
5uXi5Op93Byc7NxbVy+evGkjq45pPaV62JOQplzIW/2NX8rD3N+ZcQSEv5we
1UTOaYq6pTR/IvMimYW340tbvj3z7guY2xx188iCiePmS867HpOPxn0jbsgP
pNTV3OJ8RGvnROapC2T/x95ZB0S1tGH86EXv9drdjS21UqLI0hYiIpjYEiqo
2I0oKgaK2NLd0p3S3d1dS8PC7p74zi4gSHgRQeVzfn9c77Jz3omdc+Y58868
o5PqMsAA0CjcTKoy363IvRAaK3HevSiGXh4K1mBneZaP86+xO7QSrfJ7cSFR
Gioib8zWuCZ32gcp/Lb3vyqg1kJuyQTWZZKaH4qR6u4hd/FRNSHk+YE9uGoS
e3HyU9fD6nDVVJtqe/32amhG+wl+f0EjlvIe1DGqxGp+YO4caW2s+3TipvhY
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
AAAAAAD6A1BNAAAAAAAAAP0BqCYAAAAAAACA/gBUEwAAAAAAAEB/AKoJAAAA
AAAAoD8A1QQAAAAAAADQH4BqAvwsKAhcWRgVEu4b5h9TVNHS3FCblxfhF+gX
E5VcXoNhHQcooxjWWF+anuLn5xeUFl9Q3Yw2VKSHx/sH+vln5taQh+fBaFQU
qSqKCY30DfGLLiwjNzc2FOVH+n32i45ILK3urPuggzdmU2NlVpqfn39gckwu
qRltqsqJTgoI8PNLz65qGsq40XidSCUJ4VG+wX5RBcWNTU1NJQVRfsG+keFx
JSTGCUMDMxjtF9RhsLQg2i/ENzIstrgKRYdnkH0yuSY3w98vMCAhIrOyEW2u
zo9L/Yx3/dT00vqmzpMcafSTBZKjYvAuE5GfX9fYTC4vivEP9Y0IiS6qhJHh
WXcAYFgCVBPgZ1FFabZ/zr1gLdOqMaLv7IpykoMfaa5jmsokyLPf3A+XSu3J
YAxLijJUOszENHquosQL/1wk2eEsi+T4KaPHnrsXmJPzS+swUGpgqtNrAeZ1
TItHE1+Z52Snx71+xss0k4mffZehF4bVD1W++KiblvTp4kkmprHTDgre88pG
Mzzu8O+dMp5p1KmrzqkZQ5UvTh2GuetJsPAyzWPaqP0hKSMzVV97I9NCJq7V
mz+4Y1jtdxvEG8kDN8jHNIeJ7zluMCvD+OWmUYuZ1q0QeecCIzVDUIehJzsn
8J7KmFGTJu7iuOCUiub4Pd1ycvbfTExHlQyjkjvPJGrAMB/z/TwCTNOZuJ48
DU/Nybd+JzpmORPr4g0v7ZsppF9aBwDgj6JNNdFyvOI+HJLeLkz8gpDoFtmj
z0LIaT3f7SmZcNjjk3u2idDTCRIFxXZd19WKGcDL45BBycaitRT3b/9SQqlL
rzUjsdbvPMISzg9INTx2QEq0a7OI7dz/yL86qUezULK9Yp+K7pMQZOQpLCgm
f0HbN+IPO4uNnO0V+YQoLa950SixsvvpveWtTeYPmCfOg1ZAe219Shtqol98
FIPGQdyrJI28GAMDA/y1OjbsrZw03jWXX9iun94AV4SrLZeZNhKCFG/4ZGX9
/FoNAiQaxeYZ67Sl0HxI2tK5oKEuxcBwKzQZYl8i+tGNoTC6giBYhb+a4ZUd
mzfvOKrjZ5feZyciF0Uk6Ekq7pbYfuymmjcpr7ZbF8cvTIq3UNqHN+a8k/wv
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
RpN7yk4pJXk/WnXnQ6qxOvCJwcGlYyDiBkVLTyrW/P3TwXQnV3lyRoyfX0BQ
fFFT1cCegGhdY6Hjk/XTpCRPHPWiVHU+ShrrQnXMjjCPhQQ45YzcqVjTgCes
abm1GU+Vli6W2nL1cRxW0Vc58Ud4s4v9FQHekUwSmrFmuQPNrh+gCI1WmZYT
5+/nHxhX0NBnkYYYhEIpNjALd3Hz7W3JCgMYpmSHaO6/oCgv8jI2iYRhVeF5
1sp7z787ZxBP6hwg8N+muSTM0EyRuPma8R0f+nYrOOyp4ZOrghecPTKrh3Y2
E5ci9dlFGUlu4UWl5EF0a8AInB+udfiG/CGh51HRuIquTSiyVZFTfaX0Iabi
68VvtCL/io/CBJl7Qi9CKrFIy53zDq5eJ2JYG1Xx1YQBiqDkgHNvLu9m2mVp
XZKUHaR+awokqGR0LaxrD6B78Srira1PEXdcenPRtZyeVdwbmxeXiOcc7BMr
hvIFBy9tccwbhTvy+4hPwwMLUawhrfTTOflLL46/iiztVuXS0FpDEb49t3k1
P5djcXb7mQ8tXy2kWxVUSutpUF1+D/FJKN1gY0aZwzmlK1pHXkYUI+jQ6gJq
I1aVFBmbHphSPagzx5TqLHeHs4K7VbXkbYsoeB2SDTxenxdUtjEMK27tnK3F
616WoH/uwUlpomaQazYNI+eRnC+eu/pk/7PQPArce91rirGAV47hiXpFGAVM
NgEAg0RfqglJ0A+8yzuB86rsi7ByFIPxu5caV+5/Z9dkHsk92gYVaC3cdkO3
YHU25ueJK3FDEDOfgq5JRYc773tAmknVVgfObvqbafysbTqpLkUDqgwtoTr0
nsw0nh3Szz6WojXtJaRg9Xb218TW0Eu4hPPQa6NyrG6gT1g0xTzqIc8MblWJ
h0HFSMdyr17qgzeLnZUq/7qR/0o+jbPMH2B2/QFpbaz7dOKm+FimfyaJPY21
Gcq8vlUMumoyDHVy8sCwPnwlKA7ddUCjUWGEvtQXH/hxyUfr5s5DGa5RmO4x
psFt39A/4p9pCH7Z0K7QQKhY/EO9Wycg/lcfossGT1R8VXekz7rTIUWbuMhD
my+9PO+NV5eS9YJHcRfzCCVPl5SvdtqhCJKsxX3nBIFHKzOchCBpVg5HoXmy
V4TeZnZN1eZ+RxiNSetoTKStMZEhbUxGJfH6tVcZpbdBH1WuSbT3VIQkLjxS
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
QV7Gx1dstMtpWXceNvEZi8HRk5vtces8Le2sRSdQ930LoALf+6gTi2bR0p6/
5ZGdO3BZMwR5mxzeyUy7khb15mNGXn72lzco2jW0+7YJfvSGoCYq1pB6FBYE
3leZRjvvH7F9N9G55KLgl0JnlsygpVVUtUrOGssRQoVFoQ/VZkyBDe656pHd
bVBp2TRa2tMXzBIykTOJEBAmHj2qiVjom2wsd0yIC9UPJy+/mPyLiI7sHxzc
jI0sdrhw5rjI0dOPFa1yMS34P1btn4AvgOJfKkkJcXPALeFAcfAduWr4JA7q
/IUvNzIJJKcY2OhICAtLitz3MIkd4dj4uFe290QPikiKaHt8jP7PHS2PK/CN
e4Y6pvjksllazdDTe2u62m2ebFmwBtgGyDoHYdqaEg1MDgJzAeYdxyz8Iai1
9zIiBCXHGMtLwI/mtutHzfLaSLVxOlulltACwIW7gQUFf75Vv4F6It5Rn37J
ZmAtIGmPLm9tyTa3OAwsBBg2CXz27lYYMCCJWOGjbX79sIggDy8XR99Q5OKW
viJkmp/bMPh21pOIzm/2LacYFLd1LWltybO2FAH+B9Cv4zFG9xmkDpkZTmon
4d5Zc479TVor1Jr2mu3cOvjn0xoumdkDlzVCkNs7zrXbgWWAqLV1XktroYO1
KLAS2L4a9c6z+9eTkNxc7xtn4LYuk2N4ntQItuV8FlLbBP8sd9YsMeO746q7
qrOyLUTUJYUOymjc9MRk1Q1jMD9A82y3wV2PE+q7DV6hg3+WOfUxNn2IwUrv
pC/XuVDnb9mlJEHIOhQCwvjQq5oKvJPeSR0+wM7SD/36/XQr6M87PQ0owxAg
4tARClKW392fvxFYuBA2sYJv9pWI3JofCKw/BZkEtRcX+hlaXOLeysS8ZT/c
EiaWvau2MPPvPWflkFhX1vZzG8PRQWrMitAUkqS8HQCA86mSfcngUiGos7Eo
JcnWwtNI5jRq7iz4GranCjbFv6NJkwMySMRXJWS4P9K/xMIh80jtS+p3qqkJ
3+FtzLVqz4r90y6HxsOKMvOLswKwAuBgkLAKGFBN8B8VpFqqXpwP0PI/lnGu
h0j4fCMG5e0zgSmq94MLC/98234DrSRCwBfB9SxLdtKqBoZhIKjQ2UMRVjzM
Ow6Z+vSJHBIRn6m37zwjAMzZuGHHvu5xyMzCsmMrA/NMlJa+W3ZeQ//aQytI
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
q5g5vLcOH3dznubJXaLv8DlVrIBEqYfjde/JynFMOPcssfRLvRLe97stdJRG
OP7BS+VlEDQOEtdXd+o8dg5JnVWJVo+f8G97gEsPGLoaoYHGnJQy7JXyEWjM
3jshFgVDfTjfQgJwqsEHDc5v5o5kzsgMQcJ8Sh98O2aL6kF1fKvLYf5Fo6EF
wluNC+Mr2NJY1tMYOrgmjuauipqnsFTMhM0zWA4YUrIz7gS0WF6Dv2PIHHLR
cvwubJHftAg6gXNMYlsbXY75x1uCIzi6+4NDPOvFXrtSaD9ohKvPgT+e3r12
AjRjPdfT9KDCX65ttC7Lz+/0SAWtG4edGlooIDUBwOD5TmqitdSVv1ymICs0
4qBnTGnDd9reSl0u6ItC0E69k45DOsaeUUjKM9CcOWb5vwJbrgZH4Ds9UZZ5
55rvWbz0sOR51yQyTIVba/PyMwOTyil05hMvvbHWXFjtlPyUC1EJrCYuagMh
y2DDgaWjIGjG/zZyoYTaWtS4Vs9f9g804u9Fs5ZvERSWUDAIc0r/Eidr4HL0
a+lFy/5dAm29reeRnVbZ+WkauX7EBMsnTwUkDaNrUgbvorAbc2aGyqzI8A/W
b42d3EI+/UIdfT9j1jVl5sd523bDztbW3yc8v+J7FTj12Wan7+2TFFW4el7P
2MLV3y+7sbrrWLGB0WNqak6HIzV5/pH+H/dz51+qR1CPCIXBenfnQX9Pnj5y
7kaB9uZoPoHNK2eMnDR6JjTv7mP/fHatN1SfV86cDbJbPriA7BI6veeehpRC
B20DZVExuUvqDwzNnHDe6SRC4y82ZVShZ76fwW1jqzc+SZHFFFDXBACDqefU
VNua7fl813QeaQWet9lFtT19zTDgygDXq5Lb582cd9bhSUQfuwIwaGRyWXxq
hKeHl290QcM3i7z1Um1TzUdLkbmSayQ2XI+IxjPab4VV5W63jPbMmytjfNIu
+9sZYOitdVWmIufPHZx/OzGF1aeK2lSTaaXy9KTI9u3bhHh5eNrb0zatmPff
39CIGfNnLtnAIyi853koOo0CM0cSE4kZjt5P5VDz18zdqq3s/G3XeBqrrkn3
zoYlh64+v2nNXF8M7eQbnFCE7988fsx+TRVJmVFeHjjvqDxS+dB1F0n9YBrs
jElg7xSLg6alOsU/EuvgYG9mcGa7sowMj4Z3YAV7b0+sFjouNfllHOqBH3M7
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
0FTg6aXNrM/zQuohqCo0/PqkHWJX6AzzUBg8daD8KMrsE0wuTmPWV32f04kn
YL9zr+kfBRFZnxOlNPPSDVnR9z3dBKjT9/oryVmTJK21AhvGi1sIqhWKu31D
VmGWkG1YfReKMMol9HGF/m4ozDwmKsKsGmofZoj9ypoI/e1dwRovrvN+ugHG
sH3b/i28Z5zKg9oH1Y6Ah/rq6ouDAt3uSm7ee3AzLRMTO+t+KUnl16bxKbmt
2J6xqmvxvc2ttvzSpNsogP5x9th8t7/Fz7EmbA9UYPTs7OE5UwSVfWrzyH9r
9zj35Mzeg3sOX1aROcpPt2vGGgmr8ujCnB5P2f3zD+479sKhnTxKawNS9JiF
GFj4jp66cucC7fx5rLyKWmlQ/VgVaN8HHtXd4Xzi+n5S0+3TTrIvo0gu/xcw
a2p0dEz08/tp1gQz9OocZ12tZRuvvYlGtJENcZHy+tICYL2+SXJN6/+X8FuA
bifUp4SGWDy9fU6ciYlRzkE7agI6Uv2twHRBjenREbYvtWQlmBgZL5gqB/5O
93N4qud5SAnd3C94M7IrEw1BHVkdToJs9FKrjyKSCdiJaRD5E+itbCsOdf9g
eO+sAD/zMcaHcYGj3Wv6R9HWWubxfOMm+cv6+qVEJBHCF5pH6xyavPKW1Kuk
6nHiq49HQ63ZmUku1i9vXeZgZBDRFHGsppgj/S8CiTVZxkZHmtd+nzV1dIVo
vVIW/HQvjp3j0GFuKcVnzrbR2WkNOPRnN1z4396OivD4D7ev0XPw0nOwMbPu
WnJQSErPJDY1uw3fM1ZNHwHd3RPzzPLeCeFT53R8a1J+wdYIVzU92uA7rAlJ
6ClM8fP0QCAQLq4ugQVplb0DBBHTDaVo655kB9P5Vb0SAnLiQuwtHsnQHWNn
4eS/5xRrZ3CTn2Xy1OMvigIT07rfia+df3CbyEO7srJIHzdHXbmrwtvZGM/J
6770i30pumIKG7O0YiRUh8L3NxUUhrv7urq4IL7AJ9Its6Wjb+yjm4DtRyYY
v9MSEz4prulRHtf8/39CIVS+MY5AOPn/JGsi4qCegIBntw7NkjLwLsmBSIQM
qjF3UhCZA/iuf8hJoQz5HCuySz005dhY2SXuSj+2InVoWEFS3cSM4PgXorAx
7MkNdjb2U8qnH1o5OTkhgrKjqyjvUYVrgtrs7vOdEzqghajDky4oocqhVM2z
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
tyM94IdwCQhPq2z8ufWTiMdhGzLy4328vP3iSzvr/tzbd/mONtEebpk/E2IR
W4WtNrm+hX7v/F1M/FzsnOxfDJnsnFwsPGw7V0/ezSxo8K4dah03JzN8Z2lJ
iLMnwtn86d2Hkuxckoaq7yvGz+HhE4hEYnd5XE6Eh5eXV0BGddG/447cV10e
hvBBOFm+1NaTZuM9++CKZSFl3c76k7JcVPnAuv07GNh5Odk+D2H4P04unoOM
O7fPB+wXX0dGDA13+UPA9rY2ZnhE+Xl6BUVFl/e2/isPXRJ6yhLSvZzeIxxN
7kkpnuZnufLhXRYl33/Gd0KdLsanj9CCzQe5Odm5OL4uRBwcbDzce7cu2LFh
1eVnRb1lY/ZH6aqBAm44+kZo5/7KglPxG/CJNRGJBOKQu121AZUWp5fNoN8v
bebc9jk605eAil+1lVmN4XfOLJs+aZXQKq3k0taxKwDwyNa292eus9CA6Yv5
X+f7/NdI3l8wqIQoPD418slpcrymV9c8qka4KPflJ+iu+nj1VXoaF25GQbWD
tnxcwYcUHdo103fsFH1hVYdvJSnac9sTtMSXT2PilLsVB316nvfbTNOijSTI
8ZqeybhWDsqUQIS6Cj00dfbRrJz2+UU7ku3v7EurekIbbuyHXjyqp9P9ohrP
VDBpFrdh+rfe6b8PBAym3p4U5fJnIg8QWxOQHy/sWnxmzwnbiCHsi1CBzjG4
unX2wX0nFUKJJd1/et8ndTrctz1loQaGDGApWLqJT/dNJdQ0Lo+MMLUuMj9y
h/ReKVh41kw9pO8vtxB9jnKJrE02f8VGsw7MX8F4y6gQX0353iGWmgeqn6YB
MnJ2qQVDGhkdnWYlfYgGcMvZGeUOCXf5Q+gpiw69PoV5IQBLDxx4nBVUNvxh
u78LpJUVC+9GcUYnr64Gk8A+fi1f756fu7z2I9kiq4nRSucZxWZveOjc1vfN
kZvQCTXZGQlvpZ2/QcKxNbJprEUhRR4gRbm0qqVGHphg+MSaWpKsvW7THWal
G8AudubdMtdsgz1z6loJnwP5Evrbu4LVja5xfU5De4CJ9qi0jt2z4PSIyn4M
fuxLEr63udVW4Bw5fsHBJ2OP10SKlhmi+UKBm46kGd+ycdEUsvl8ycy1u+gO
stGJPNf6kNc2RLfTGFPtdIGFQ1RU2zmpC+obPID7W3pKwnzvHDrFsmHJbrq9
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
ufs7jfO7fck8dc79xGIpvjUjVPwDcvs7OFJ9HAV3ZO1MrhkbbugUIlUDzbvU
BQYdydJ3vsLHrJIT94vc8M1l09qwAQI+A/E8KbWU55+VKs+zGcW/8enk6Uvf
2DdjyDFnk5ju70FbZayBHmboTDFlrudppF44m5rzEb+zCgJoczQVcD185JXX
zLa5YEJ+iP+Z4Wv2KK18nNrc1qVdZJ06d3/TEe5pHIof3kb09ylzLaVIsKrC
Wr6RM+XvxRFzBoUIwVcjPswol/olCGFQZBjyma+pJlJNTmmKj29KSWZ1NzHU
VkMsCA3wcv08f+IalJif39qnIQ+DRqZUJmdG+3j7BcYXE3oduwC1Qy6PT4vw
+OQSd/fw8Pb29nTzYLqX3XB+qfEFDW0dR2eRGjqX9i0Vv3z9Q0JUYXPPlbc+
PS/Ox+2Lm93DJ76cXN+elE6jNJQnBMT4enp9ulaHiSUc+v+RkcnlX1nAHOx+
/bo0OPI6oiCrh29/rMh0KqUqLSfO19vHL7YQX9lP4YxYqsk80tXNpw+qidxQ
XJ7s4Z9akFTRQw1gMIj1mWHxkeGeaTV1xP7u88mN9MrEYO8gn/Cckv7Oy/dB
VRM1Kcnm9A50JDFyB88F96z/tmqiNCNVSZH+QR5B6YXk37rGjFgcm5UY4J1Z
W9Hc/QYzyM3l5XHegTFpofl4ei/WotMbkVaX93s5OcHfYJH6LbdsPNtUE7Wl
vibVMzw5NaK4hd51DRaDGdKuMD49MsAjqbyoob/X5VBbkbrU+OBgV5/EvJZB
Ev4IVU1+TF8TVE2Djq+ppv8+hNLGNBebO3IHjqltfZyY3y++gmpry9tXROdr
YpPKy/vj+r8QGolUbvQy0N7Onor0txsI0hOE4DDdXWIAjF95Ye+75Mpv7T+C
DFjwjMr3WuKzF4Mp02Q/vIuq6rreADJYaGugOd5z8fPXK4Hn0A0y/kjVxIyO
Rkk2C9Xgm7xObbtWeCWDTmHtS2HnLrRP0SBZl2FCITbUW+09e05htGpwTPHA
WU/ZS+jktioLdQ8Lndf5tJK2T6eywfa8v/lU62hUSrOn2guZ8YBj6NqrrkY5
/Z0vyM/Beo50OqU8Mf/NRon5HMP+Xa/o2PIrzlCA/F4+R+9sqyoq1DljjXMx
qkBa4ABmUPFHqiYKgmTEvT16fCxa+r85Ji/h4efj5eHh5t4hJPbaJreGPScY
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
lV1NFd6mkza0U+Mg2lpiXEl4gr+thYWphcW9GyJbWGDFNZKcl15YWNpYuCRE
5DR096mvuipbku0eSrOq3tYyzYMaezuYuvhy16snt21k3y8u9criHVxKswcG
dwVRW1GSlw3tSqC2QcNPEwsezRc/tg2oJRf1xFTpqoi1sbtyREaIh5cbheLi
Qm1hQQmpnTJNjW/oGvJycGrkAeujF1mpl47lbqz5X4w8QIvXNJw9dLhC97wn
bDOXnd5yMbBf8Aks1Gj7kH0c2+pdez9WJ/U/le4Pg6OeUejl6KCvo6EtixLY
Lyp7y8Gna4QeqQq7pjJrsbt7aMN27HdOWpR3/H+f/opvgSpjAlyd3z67++AU
Sni/8HHlT27NfyggeVuOj+8ZsHb33nlij0xMzWjV40cLC1VlAf7jvJc0feuz
hhuvCYk8gIDw1xjMNVVjbpvITZgoZ3DF7Vt3idBZF2p3YtnBWWPGMDExjWH8
fkpqAgBHxDQx0UOaoCF3NTbZy1zmGsc0Zf6ht9leFUMsDrm7udlB9hrfzC+z
Ooy9sjpmElitdvJdfO3XsfHPc1u4FPPQe+xz9t4SfRHb3/KRcZ3troqaQnMY
v84UjZ0yW/h9tucPo1hR99A9WCklvneqWuSg8ZrIWCjjkZ7EMTBW5Ul82ZAj
VJFxHa2uZ+7wT2IaP53vefLvCHU1pGxQY4NTXZMvBA25TWiMMXJSZJwr/eiY
WXG/P5KI2HSM0gahXdvGqQQFF/ztbnZTIsFdkX0R26J9d96XQSMlitRgUMhQ
nrH7DXbqGztDCqUZUECntWEjhLZsyOe8wPrt01lUXuZDQ61Ohkh7QUig6kSu
ZdRZ5l41JMPua/YfcqHfMDua9CXKZerffgkQEP5BBnNNuMbCqqyQkKzK/Ppv
/TMyEddUnRqWGBIYGBwUHODn79trBgXji8EkJuXVNw9prIlCIhBqM/OSgoND
I1IrOhuGujKGqlOdmhMf8HlWx9cvIOBbVn38MKHZaaUtuJ5eNgWKvvvmqsSa
gxp3nFMTyjsGznlzTnFqiN/XmSLfgJDUGkLzDwtJJuHbi6MyMhJD81s6cD9I
Gu6tqSkMTuvHFOcOnugnRSYTifU5RSkhwSFhKWXtdX9p2xbNNVnGeHr5D8M1
4VsqajIDwrNLM2oHGBWgULqa82JTE2IDcxqHE+Hq94BvJdemRwVFBscVVv7t
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
vq6pqSTkmc4mMPXA9QOm5fDnUtMD17bCr5mimmtWv7GmygL/9/emL7nAsXm3
hByDiNOnxLp+bUQzLPh4M5iBugILwj2McnM+muApVYf0zFHZpuDhZ9H38u5j
axYDBTd0LgRVhfhfBCxM65fsfOP03VhTa1X8R70tYM6+CzvfFhIoULWdiNZu
uOwyp43j0ujomuAc5vpf45RaPQ+ccjaB3U9dbKAyw44JK+dv1rP/bqyprSbZ
+NW2MQv3Kmx9nd9FgupdZB5wAAYgKf+BOho2Cl0TAYIKwrQFTq6eAWRs3iSS
oOb08OsTOaYsmbn6sUUfk0OdfcvyUVNUm7LwtPjuOcK3VqqE5WPx/QSLIh4e
Vlg9DRZ8HkeEWrNhQa5pi6YvfwgLfjfWRMJCzTkZMQG2nz49knxs4x6VTfs+
wiiij2tqL0LHvhLey3qZm2WrrMjkMdKGam6Vg333Cy22BrIcC8AaWcuCQHpW
1r8CCd9eG69teoX/KIvgJdtPNy9IyIOxQOCNklv5ENQ6ywOzvWQv7D4geV79
mouR+sLpm+ahJqtHpFZ/t2SGhK2utDp2VYCdcdPt98ndXyuc3KxPZy+smTCX
S++8eVHDqKxe/gMkXFeNyWkHQ917udAgCwOIhO4095Pz921ZD84FRFZDlBwL
zPmJMyYJssg6xPZZhoQvIpS8ldskL8dzxjX40Y6dEgel9AMaoLbvLiIZFvRU
WMzNugYWDIGf03y034WJsybzwoLRo3JdE2wQukr8dZ5uA2O5rxwwroA7KnWW
Alf2zAaTr971y+/pwEAkCinXR2mVAMtSIO/lXQJ3d7yClSctnMa94ohlOH3X
NXWXh796uROM36+8630x/LkeffgW1www6fItr9y+nZOO4Eizu3vHS73Wu6H7
QX3RIqlb5olZfTOHhQVfsYNJXEqwIIkMNdqJ0gSV1V2zS0flDB1sdspCbuyQ
2DQdSDuaZ5Ch2ogY9Wkb5uyax23khyP28v+4mmTTd3vADA6FjXp5ODLU4irz
mHcymHjhvEUyPdc1wTmsCLu9W3bTJCBl9z6JBDUmxN2YwTZ/24w97zFd+F4V
Ob4uzcKAE8zdI7XmaXYHEWrzPvNMcBKYeOaMSWLRqFzXBGe5OuYJ35lNY8Fx
82cxeKgtM0Vr/p7FLBPZXrs0dn43u01shhqtdKQu8SyWdvV7KCGrsGGbmk1u
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
wzxw4qxWKjD1e3aWaddznYC8NgKhl0ShIHFN30DtKo4KVWI+eV1d0Y+Mp0LN
7tJPTs0BTqONY5omSjtiq6CoKydlrs477pTY0oX9HMM7oelsgkJNQ+OTrGqg
HmSuaVLxWTX14NtDbLdMO8YtdcSsqpQMNUc9tBpCNcGauC7dWPbuvKm7lAKN
M7uwhJpUjfmHRq+asM0ttsJya+DLAbbqZXlUjrJY0K+kmrraXY6pbqZV3SbN
ZIfS/+CcQwCrpgZHx6SAgFGrJngEqchy0n4we5XKmzi3dpojDh9zRV9OBFik
+yq5aqIsKyV2gI1ZcTHWRndkxDk5ORSs1SMm4fJzBtIDQemu4geucB+7k0TI
J8HdIqXdUYR7o9yKY27p9AXTEwJsZVNxeJCH3s3DPDzchzgepyT8cpGv36eh
JsVO9+8VyjetTWsgIhUiZxn43jkAzL2r6phZM0H8p+ReqDUvI8XVzuDyKa6N
HGI6x9H1431NP4KmmszDEpJt6hDVNMnoU03kpqh8f9l9/2w6ccHyfSNNG3UE
q789zcp62ry/agIpuJ58PYNzvFsWH9bHtObBbd1Rkfbg74MS+0apmkBCNzbx
tZ2mjLT8hafBtWmje+7SgYfptJhn31FNWLArJ97DxdnKysrG3uZ9VmLJoGWq
X2nsaXXWW/VD1QSfND3u5ZCqCbZN7KrJyg50eudgY2tt9Qm3YMcPDa09I5+i
BUl4XIqF6xNZaRkFHf/ypPFTFRUmryKcnQJHqZqoJKgrIMDgFs8MeX3/4lyI
JsigGkvny2J/AAIqrlnJE+Vx20dOmZ/OtQMHBM/cOfPY1MrK2iogK6ZqEubX
HHNItVCT5Q0+2UO7dd+3QrReiS+CktSPLd+9fMMNyyaobgJVEh7Chb67K3f8
gJjg9RcaL0ytbD2s4hvqJ+danDGmJyHHR0vg95M39SOTKfT1z63eqYay84Bd
x7T8w7oh0gSa06nEZVg8PCwkeEJF4qHJG3MLK484n/xxWrLwQzrroGAtL0zc
ixIIcdBNLmiqCSRX+9x5I8UyRcH6hv+nlZr1gfesTrOy9VdNVBDfUpqgNk9Y
4sDch2klLbQFp4T2ytQH80VHrZoYwHdUEz1akJDTHHNfbtW82SgUink6sFTl
9KuEGgqVPHQGy9GrJprEzPO4p7EOmMcKAKjPrBSZrRaXMeKFXOMPzREDUki9
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
wvFXTSVWAXcPMqN2ir+IDh1vJf5jusuhyOvyPHNQwDxgs65eSCnj1C+2LC7i
ylRu6bNcL/KwA8NV4I91iXqiSjsWsSi8M08c713mcDVQzHXZHdun/iP3JINQ
Ns5X83N0NUFhtCyXb6shLKKaJhXDqSZCa2ldXlRUXm1x8/fcRyAJ31UWn5md
HlvahSOOvO1h9UJqzC1Ki4yMjsus6WkZqf6i2anPLEjBfHIHhGIwkRGRmFCa
UzE4NCg6P6uyg/D17YwKJWoY35BafeDOQ6/M1OqBnRfENnQUx0WH97kYQkPD
IyIiwiP6HJRhiWGpNU042h4I8POc1JBVlDrwpBjaSUOCovIzKvqftD+xgffv
HwbOvU4qH7jt6c8XGSSTmwvKMqIio2IyqrrHK/0DXTU5JvkHhI1CNRE7ahpy
MbH5lTmNQ/Q6KhXXXpScmZocXtDahhvvkBNiJ9iYnRARH/mhtHa8r+XHwKqJ
kpXpdvkYAKCmiHHfDBw2/mgs6Kn6WJQdH1nS3jzEXhFUQlddXXpkTHphahV2
/IPBe6qbClOCghLTq7pG7ln+z6B2QHj/tyc2bwb+AFY/1Ago6mKYaiLj2lvz
Mcm5+R9qesGB4hb+SOquyixMjcXkNFR3jLfcpOChtvzMhISQqOxyHDQ5VgnB
qimcNteEqKZJx3Cq6f+f7ur2bG8njVMySurHXmRVjMvg3ejkpKG2d5WeZ2bd
hE9l+wMoBEKdtWGkp7sHGfquTxdhnOiOijMREwCAmRw3pSxzGidIVmeEf0cX
td5Mf/8/q1BzF0h7Wn6g7f053roTYUQQOijvtf0w4ebVyD50k4xfUjXREjMS
M+yiH3D9ufXW4Wdx9WRSL4FAoGUyJH8vk+GoTwpSSCR67BwMrrOpyfG46jX5
GWpxH6snvdAAifhGF80gJ5NXRfgy7Kd9oJDxfLzp63VkYi+u3f+mwbGZKNYp
ux8EjtfiN4SRQmtHConYW5VSZMR7YCUz26o953zxaSOe1UUYLz5n7+yuKS0x
UUX7+tvVQzhkrmlS8UuqJhIE5ae+OXv+N7j0M4C/Vm7i5tpES4p3aBe/kUtx
M2Oi0OCTFqahH93h5NxNz9TGsZmbXfy2vBkmoqyrmzDpbxta5HZDVrqbusYR
Tq5DmpesaPE9k75Ukx74aVteHGmoycGxbeH89dskFBwig0rbh/J/IkxkeiAo
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
LUUV2fGxcQnZNdhm/IgtjZa8J1r+Zqb+o5xrohCh8rfOj6/MXadpllBNCw4C
SVCri5ea0Apg0alXyf6MnLj793Rga7JTQkMwrjp6qsLs69ezy1vdD5+E0Xtj
Tk8RlKYpIXx52wn7DwT6ynxSOZSlc5Z92fqVEpppUDEjF6z/SygQua4yLT7a
1wXz9oq04Gb2zaLsj5IT/gNnd927RKtr89fcfeiaVUOlr3vvDkwxPcUOzDl4
w82pZnRqpyUP8rtgEvBRJ3esLhcBAYGumlrTo15eVty5ZrtZsmPZp793hGs6
yLOyydvcDBomIuoLLUHvbm/nnAv8poB+EjVxIuu+o5rgkai3OS8s0eDSJXFR
QUHBA/sEt2wSkn741qec0EkY8u3up1UTrrgi7KmFwlrU7DVzJfReppC6PilA
WE+2ZTnfub+CmWPzjk37BD8hf0/ibU5py/hpndFCC5ZvzIuONLOwuG/i8j4s
e3QBXFQSqTtQQefqMeCEb3DVl2rJS7c+c3oOwHXZTTuZYT46fAulIsbfw8lq
CNA2NgnpdZ3D6qF2zEfba6JHxMWUtVSemtlYWTtFFX6sGyIb6i8CqTahyZKX
8/i9TY/TP78D4SFckIX44n1rOXktm+JqGeaj6yyqSfP/JgvvV3y9gvIrQXCY
1zIcVGBpcEP6sJis+D3jx4am1k5ePlkd9d2MmqnBxaq73j8AiLmYJH+ZoK2s
wTy8OB/gltK7hMFSRhP81lMH5dh5OBlrW6PfZ7RVdiDzTQgIYwCsmsDwM2qH
pFEzb78prK8kfvIdVXirmUmzsEq/VnlXRovOIn/P+9YQdN/mNMuUUyZX3o+B
a22M+I5qggVMY6q1zcv91z3KGmix0r2tWY8WXVMS3WNeX9Qy5JPuZ1QTlUro
JCVrvZBeCQDTWQ69ueFb2+9beMhqyXDUf86771locexEWdUxeuDKzIk3lVdA
TTn5ONa+YpTW6MktddadEWNnvhQSUdD6qTsSWgt8NZ5sBX4TeihmXcyoFcJt
6QRvBb71c1BDsJh1iurjyJIfrBqjkMCc144qHACKea6cjWbkL5uYmdqR6eGn
CCw/prLbMBtuRLofHIcn5Ifc4JbYvAxQ9HPNaBveIT46SuxCtfi/rCH4lt2b
Bc19SZTvvgpSoa4iMFj5KMdvqDmbdxjkR1cyYi01PbmlmfADidmAwru38fWf
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
CSY1p0ZfFNwgsZrrwNswbCvxB4f+EAYJ3xyk++zUWsmNOy45Y6NqemqHRm4q
CC/BFhSxpEpq9ONeqSZSXVFNdkh+PbWR2UxrstOb9yPVBOPC8zHyK/lFViua
m9c0henOVpUT/wuqiUEhtIbpvdZcLym9WcMhL7jq5z/hzGX8VDUxmYy2+rz4
9JTkiMKmZjIyzm4gVKTFpxenleA7BHabUzGR18eInzE56d5AYeIiz09T3rJk
8v30mFJiB4MN+QkZyUmIQTxikNLINliEGCRzurdtTKMG39x3wkjFOO3P9V3I
JdNJTeXlKeHRGcWZ1exCNBWVF2SGp+FwzeR2ihjRyoTGwsSs5MTw/IYGRE5R
m4mVaYkZhcnFjZ1io38WOrm5siIVucKiNBxbxzUVVxZmhKdVVra7wq58TVS4
1ccINUFqntD6N/URldQOBmPSCxGDrMk6eOwngxV4MsdX3xfZB5vfXKjsaJv+
ByUIcskkPDY1Nzk2PK++po0J09rIuPTUzIKEggbCd/ORGJTWalxaeGx6QXIF
kaUYm0uqi9LD0ypKG4jdlh2oJgCg7/iimqi0lrRo9Tmywhtn7/UMJcLYaF0L
JR4+JfR51+5VE6WyOcVUY9FoIelDm50qqtt6vliM3lpTa7FZeS5r7uiKB2lO
2B5b+nZxMJwYqndAlhWh66Fqageutc7uwdwxs8ZKd6WakOaNUBPw0Gbj6JnC
dw6Z5mLh5oT7sxX2iQ3VjEjlcISOTmputNt9ejHr1gnfjLUq5OjZugVRTTgb
mxhPT18Y7mK522/A6jWLPB6/FBum8MjTuAApIb3+3Q4tRQlI2sohtaa/xN3w
ubTY52ev3jlw9v4rNNrYNTkIC+Il38BnuCGqSWjNurlytz+vnzO+h9ZBbZLc
vO2goXsRXE3p60v8RJlnrNOD7cfvXr71CG1q/yqsksOjnD9Bonupn+3LPGpa
a19fCQDw7/FJNTHppbX5RhfG8u/bcul2CmteLt7/qpkyL6+ySTeqibWeiVHm
Wfhqz7ihostUzZwb4ZZexIYYhPoGZ9WLG4bz/zd9FzrH+6dzqX4O0oUlhen/
QDUxmAwqmUgkfIJIYafs625gW91Wb/dwXteqicmkMKjRfvf3yXONOmSU6dYA
w8TaNN0ZcvvF26km9h2jU6kkwpdTfjoviUChf5e/8DdhkFvxbuq3UKP5R4zb
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
9r31PjDCoAAGL+vAgqWa6JRSVy0jWd4hRywveX8eyuO8r5kr8/J9p5qYTHoz
DWf9+vByQWjMkivBtsWIyK/LMlioMBeChozbaJjpiqX3m+jAD1QTa50fnZRe
E3Lt4LyJY7m5uXmGQzNPKj2LKKUxqV1mpWTSmaRGUtTNu3tnQlyj513yNUv5
IhCrP9bbq8wdI7Z466HHb+9unzJyxOQNY6/H57IcD8UtsbcVJvKJrTp2OQqu
hQkl7ld15kPjeSGI+wvzto3TjkgZwA00K6BGp5LbGhpCb9x0NjEN7HZe06+Z
o5EZ8beMrhyB1r22Ta+msv8Et3r73tu2iot7y41A8zyOjW475yn9BvJXCpXO
6Pbc+abOF1Zwcw/iXqNzwCKTnQywy8ycf+hKa2MprqrLt19dcTkA+2m8Ty9n
5L/QXDJKZN46NQ96ZlP/eAv7BAaNTiV1+RRZ+XhJ1G5Tz5JL4Y/n5FeO5uYX
4D783j6ugpU8lMqg9/toD+dgZJsGP1Hhknxy1TW37VNNo8RkOBzbwgetPfjy
fgqDyKHA9OdskF2/jaxUw7TOeXS/gHPNer51zBBu7vkqSx/EVdY3E0gUdsLh
/vQcW8rgYA1r5w9aHwk1rSAuPJBgqaaMpy+Pn5g3U+1WWsPXpc3EsDsOarx8
ajZagV+1Op1Yn/DxynIZ6dWj5V67ptazJ+owKVVJEUaK50Wg8dPVDxpEp3+3
OqYP+YFqQgRPXbqT9evdRwzfujiGhgZ7u6EPC6qfO37Gq6m8y4kzhFxmxG2V
VWPGTlwC7Xr1NqG69msIhJjSFKy1a9aU0SPGzBLcpqzn+Co8PbqUyHY3FBCS
9JXGCm3eoGNYDOPh5jyHu/dXCqvrWxv6hX4mNj2yCN9KHrguWtZSqURbLe15
Qiduelmn1bfAvRo60SnUUnMpjcNruE5Hxn3zmxErfHV0F0OTFZ8fdedYjK4p
ixJwRUFGVKALpIQW3jGOKSnt7reU6qayrNjE1LSA5+hLMgsE5otrOb+I4dTK
odZM19jr42Yq3t5k3t4VnOt9Yv6eFQvH3UwMLhq4OrzXlLhEvFCaL9jVYxQ4
sPOwQxCV3k0wlQ43FxdkpyVEB6a/01LZLCwounP/m8K4ioH7evaWGrejRifn
Qapupsnf2nVCjvVLCWg+6tw6y1IymTOjGAIOjn+oc3h9Vw9RREDg4k3H5Ozu
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
69Q2EFtkc0KFjaqaZMx7qiZYMfrZCm3aDktQYQfzjE5sdbD3BWA93Zp523T7
qqaOMij2yXVBUY7jmrbVUP0oPBQCwv8z3aqJ8PV90K3ljNNWzmDdxyssLCTc
zSlh4WsPTIJQ7RCme8gCiVB7Rorzsxdi+zYdPrGXeh2/MN8G9r087OJGFtG1
hbRc8f8z4J62szYlJPTtS5s34uf2zJoFP+F+nUuupUOwBTbkVEZZql45JMh3
uLtGBA/sPMiylfuaqXZQTiEOwnf16xQSHp/n42Vy86zgDiFBfvgyIYETfGxr
9x+WEtMPDi5DN44xPUkLKGQirigo+dNjrdtwqzF87JLT2Fc1tRMwQRbcS9mX
7WBSRiU2QFCW1SdpeAjct+2UQz/VhCcSi/0ubJNbCKxYtQAQNJX9WE3oWyYa
NmjNu3zHEnbYYAysi3PtPS7AgzQnbHB8qia4oVTkfFa9NQ+YePC+oGMdBIJl
VgcUNzMCwOV7vrn5vS6GG197eZjZu63AgfmTmLccm30tyq+wz6G78DUVeV8e
3pkHTN5/j8++Bi6hwubIrW2wDLt8xzOblmtN8J1EO4ttOjh/DaAQ4F0CQeV+
fleBdQxb1hw07aea4HdbG36bR3ERsHrFTOCYloh5WWffZVoMBMXABrnnrQSu
+FINVoUEKgCbmDat3Gs8blVTTXmMzqPFwIxd13aZFJMoUJ2LiOY+uM+SumSR
2EM1wc+e4Cm3i2/OYkDWywF+bXUx4UoM7JNYF3Po9VVN2Boo/b2W0o0Toqrq
uiERRTWNXQ0LAQFhROhWTcSv5qEau6dxPpYwTR18rKFQcI2kmHsqvJzA9FOq
oXXZ1P8kQRgPp+uc7PRT1ip4GybgyKN60j2FQiATov3Uhc8CE/Y/eSp6VuQC
MAHgM5D3rBiCNVKaXbz2vvly1lc+VX/7r2L31Occi+lXswrpvK+GmrsWkkBc
W6vjaaVbF5nvxmU3dP0XBYv9ckH10HKA/tCVT4Ux/4GwAzK+s8H+jIOh2rVw
qKxzwEtIJFy696VVPDvZGW+ExtVBlCwr9/N0C+kOsp91DIOnyD2vpdTh0a4a
m07d3MBjYKo499D9w/d8i8kQsVfbIsMGfa6s5d2xBTYYWUNVTZ4X6RbT74cN
hvRbvBoPUDV/WcgrHU5gBt89ftsqWJGXWR5W3DoZoFdQ88sr7HUtCIGp8fbP
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
F6wncWHlqiXLdCzjykp7qt8ehYTAYS5n9koKb19y3N6jqKgg18VWWnij8DFx
pXcRKErplMG3Z/cfFd4qLGPvll+IGbSXEd4sLI0Z/ISi4BRfAAAAQL+oJrg+
tyLG6ZW1mdljQwP9r2D/tHYKSM2gocyGR00um87I/xDpafX0ibFRi3b6+iYm
5h6hReTqPvXcXhQU6/nUzPKFpU96ZNF/X0aw5RaXXRn50srcsMWUGBmZW/nn
0CrZrRvDdZmlgUbPTRvbGeobv3IJzi7+wx7S2bWZxQH6T+39XKLKyQ16pQXV
TKqD5rQh46HJ0PaXnmXVJVE6Rsuh/tCSmbtt/L9blxGYS8p0++RqbmJi8Sq8
MKW23U5ZuLyScHM7CzMzBx+fHDqe0WrKsZsyKcpCWhy718ecXm/8uRopCVad
vpcfe31KLSg3p7sG/0vBwRxXQ+HRgtAYaIOlQ25lRbrVkzXQUGjuRDHz9yhK
/LY1l4tScn1i3pk/fmz2Mjgzoer7u7IeM/h4+VghaCS09qltFs/g07XQcGgW
ZtADk7wt2zLr0IIAp+f25g5hqUyU0aMDBQAAgL5Eo2piJdsEX5s2ckg/COo/
kO8rQ/j4Fmw6b/O6DnsQ5TWGKdU4h4PnxASwd/UbMLBFyzGj/5FUDSpP+k5L
/HIa3DEMKqWysPTVkQti/bERQRuNz78t7oQtTubbWI2lcycJNA90QL+hAsM2
aEU7ZDNZSNNJ4lwuF2FRi4MePT3YT3BUw6wM5B8ITV4qrv04m1rBQDh/gHJq
nISKj8b2x/gmLD+zQzOyrPXpvXUs2rvHIhPnjhDluxgai6mg9BduJ6CJ0Nol
Eg4fWqsmhMMkxj9cKj8bu9cGjDxufzeIirQhQXkfd02U9WtxSGggBE3fudwg
N76C/W0z7H0Z8TYKpwZA/daqH3KuRhF2/tOViosGQwOU7ofk5/XAbPQ8eAT2
sVwvJDx0QT/FgKBy7BnhvfcZSKi/6OxtVr6tVRMXQRipxpsvLcAmExpy0PSy
D/m7ySRgBp9vmSkyeA501s+3hGfQ7yw0c6AIZtAH+3XLtsR01E9x0yzRv5eo
6CfRCpi/qZcTAAAA/jNNqinhefAtYYH5JzddsQmIjY2J/UpqZlEtjo3CDd+w
MLkKZ7/v1J51A1beNfYMjmxulhCfmFdKZFGRH3TX82Df36VxlldUpwnuv31x
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
1pCBoP78kss03+X9f6smFhUmlBdm56bnVqGZf9SrRsMU15RlZ1QTGyjfP60c
JhWHK8nIKa7Mr6ewO50xIMWvIsQNqCYAoFfoYA/d/zkNBejE5xZax2XVDFQc
CrpnIdXvUm7noHNxpZCJT3pNX1s//LuwaNQq+wdhnh4vGT2TFgDQRXBBESY7
xCFozPLrx51z6/+/I3T/38S55b00eZBFR4ETVQCAP84/qZq4iRkpCbbBlxcO
Xay+Qy+0hNSAwWLQaBwG20hhsnvGodGUDZJERKObsijWVRYXPjt89pLyhFuf
mzbu/dWw6dS6V3ffuz42S0Wn1xLxZAarr+Q7/ZfhPnVMWiOxvq785Tn9fWMG
jRq3VT/Uo6S36wXoBCwag4xHho78V2YhNoZP8+jZf29yXADgr+WfVE0MGE6P
fax4rD/S+gEQ3ziB6dOmThUQEFjz3yJDh5zantmFhlw0M97xylkBgf+aMvMJ
zp60W0fJPi6jlkzp/HaavgI3NtpQmOapfWuzwKy1l+UeJ1T1pZ1u/yqIairI
CTLQFBCYO2Ls7JXHNQIyPlWTGv7AqmhAt1PqHWsmKThVYOaBmxdfFVU2sql/
/bABAPx9/JOqiQnDJbmhz23PnNc+r6p2RllJsYmrqudfhVQ0dGULWIcXLcsL
dXiqqKjadDXlM0oWn7yy+uq2q9+G61jCZgUE6yqe1bZ/6JePBTGg3ge5KVUV
ya8ckKdO+cqNJx8SGf/Xy5n+v6mLzfE1OKmoeNoiyCMHBq5cAKBX+CdVEwAA
AAAAAMBvA1QTAAAAAAAAwK8AVBMAAAAAAADArwBUEwAAAAAAAMCvAFQTAAAA
AAAAwK8AVBMAAAAAAADArwBUEwAAAAAAAMCvAFQTAAAAAAAAwK8AVBMAAAAA
AADArwBUE+BPweZw6BQ8rgHTgCVQ6SwWk0Gh4DFYDAFPojE6k+mYa5D61SDt
q0Fc5w32OkiVWUxaIwmDwWJJBAqDxWHRyXgiFovBNJKRLmspyWs7oYHbXDwF
aTuLSeW1Hd9ApNJ7tu0spE6NvBrikTrB3BqSflDDThgkcg1ym0zgGSQ10pl/
52mGSJUZNCK+6e5QmEwWi0YlYBuQu4M8+RxOq5z5LBaD0ojltR1pLQf5iUDC
8dpOYzL/yrYDAP/nANUE+FPgGJTQ59Jb9gntXqL0IrimNDfZzvagsLiwgvSV
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
5+NbDJMbb1ZcNkz4lPTs+tUD6xbvPb7jFPK6rPzR5Wv+2bzwoLlDTHVez+/4
I7cJSnVyUPCNK/es5I6sHTsOGeE/Nkre5Z0zS+Lhkv2Utu0RQ57ZIWiTpbJX
i0E+h8HI8vJyUNt7YKPsCVlkUk7LnTi2UnLTpqMHTAJDikmYP6BgKh+RO/kB
H7xumFyRl9Nztg4orIe/KRRLZtGiXbZPXDZleX/Ntx9xyP3cxfcUNB5at1ja
PfKLauIwqRkmM04v7wtN2rLt0AnhGkTW2e7tWzeMX3j2pnvah9pmqxTE4LPd
U1ZOWoIYTMTAcL6bvzw0AVqNGHzzW6omZGhV+QHXdMZBAzdd2++Jhnm8cucN
FxeIICJHLzT/670mRCARy6IdHeb02zZx6Kjlu4edfRtSSIa/vaYKFXJDdxw0
aL3uLrcapIVK161ai/siBnX8c7/ea+LBtdEpHhby8lrqmi6uQR+RJc6AAQAA
ANBCk2riUsmVIQ/2jlzcd8roWVYvcay27jh8Ph3LiL2ktW0lNErWMIFQ1PjP
7HB/rX9WiwyYouhrm0Bh92ilez6PySJHBF3bd1hk6GZzi+Oy0grQX9AuB9WA
yg6bFMgiajI68vKhqdKLh4/ftE20z9E76j4tBnkMEvGV7GW9c2LX04pIjf/G
4UQoG2yeBEFrz3gVxtM7PbBeD5dJxT474n5P/8J7uLrt/TUOh5EVrDR124rF
/dRjkjEwP/epn3w/8X6bFx97EYdooEY7LFq2+VxFmYUimkmp6OalVJHrqabW
D5I8+lAnitbcJmIw9Oz0ncsXIAbjaxHV5B6o2E9CZANiMOaLDPutQMZLK4+2
sl0NDdupt9u1Gll6FS5bLi0ZDImoXQsrKPnqWh7MSU1yNT4ObbHXOa1mrNN/
sfGd2JL6rzb4EBlGq3x7224NNHK71jbnSkTdVj3bqb1cFDGoF5RX1HY3at6o
GdxTtfLnwJg/ysEMAAAAP6JJNeHj0UG6kmvO7dZwj8vFEnhtKh8erf5jhOqk
Y3v3LTdKS8dw2U3/zqIk2fudmzd61Fkpo7gsGGb+uu5/C4uMSTWfaaJ1TP5h
RiomIdTk6LEuUE2c8jc3n0qNXnv2paKq2uPTIkNP3FbxajHI53E59aVV1ZWZ
tQx208Sx4VrX56orJaGR0g6Zr6s7PbBeD5fJrHG1j/V56UWF69u+hMOmp70+
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
FJ+jG/owlSVwzPGZTNKHslCNg+NGDJx0YKZFVkXDN2No3GuysFyzxsAz3re0
sVYdvvO16gRTJ6i4JyiQR6SxGV0wdR0k9fnTOH+/AhjuzN5Ey16TemxCafOW
EpdTE4txPrZggtzS4x7xMNx7Ypt4bBqtrhaHLkv1uWm2TlR84bk9Vp/w3dce
nwdz0z95aB6DBk4aNGTYsOa1KfA0Dxk+ZIjoxP6Q3NWgnKzOrIQPJh98rVWi
4a6IMAQAAID/H4SqicMo8Ewz3Th0xI61Gn6xzbdwVmaMotjqJSugU/7vyyhM
mMchFaKs/zkyb3q/6Ro2n+lf9qXiQ/Q2bhs68B/DZJdc+r9qtv4UPDqRFKZr
dnLhvKX/nPMojkN3yeAKPzvIySKqaZ+TZlR7T948FqXQfLKJ3nEZX0qJMG8C
n8uhYVFVhZnZ2ZkZ6enpX/xp0Q/VTfdBoju1pSzD0zMyc6tIOCoiejgwJyH+
3umD08YN3XTzhHMOuo1YXEFcU/YL3WvToAmjRw8fJ6itJjFpk7TeywhWp2QG
j0UjR123V1oyb+EKpad5b2p+/JZugcereOaaGBjw/XxNP0WTajqyUEQ7Ja1F
fGBK/HWvjOg7c6ftOW8MpXNOwK6FlOH6dL/EIol5S/detYpKi86uLMbSu9Hh
KvACP/PXlRsOHVK09w3MaF6baWmf0zKS7zlpbp0NjZAxjXnZmRQNya454e4W
eeAMHQAAAHxFU25wegnlwxOtTYvWbdixU8foiqGRkdF1g2tKclJSx/Tu34jC
kOiCWCU+m8HN9/S6KrV/vuTqU1qKgsuuGenuPrp322apa48TSR3+jeVSsDiX
bSf+FhyfX2Ka4VXWQTt8Np2e8zrCzcrI6IaRkfKp9dOmIhbHb51/WMPI2Mzo
7hu/lGrKN7qOXFSXcO+i1GoVAyuvcpjYrjuCnmDuLQdBMvZn/Jsfwnkcelmu
52nt5YMFvZ+wZ8lJfXsrUxPjRreJiZGRh3toXgXMY8N0bFZIuOUFPdUzglOK
J+Xkd67es0d9n8nb2Fpyh8t/CDIPuB84P1/Q+Lzrya7FHTXUOQSZB4T5mkI7
d4ZOWIdupvzaQdACudMXrwnnEFlnyhcVDx3epm7gnhbdSxKt02u4BQFPbjtc
vaxjrCmveOqi3p03Cd1/DoLP4+L9jhtKL4Zm3L6X+u/VWlropXpiKDT5sJ1y
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
AADgP4Oopv8B60wPQw==
    "], {{0, 973.}, {393., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{393., 973.},
  PlotRange->{{0, 393.}, {
    0, 973.}}]], \
"Input",ExpressionUUID->"41e30b7e-81b9-47f8-ad94-ec30d6bc71e0"]], "Text",
 CellChangeTimes->{
  3.940426401464424*^9},ExpressionUUID->"672bc828-4489-474e-bcdc-\
83791c81dd7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Reduced Sessie Enumeration",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.938609223054897*^9}, {3.940426668506416*^9, 
  3.940426689870445*^9}, {3.940426946335136*^9, 
  3.940426947764797*^9}},ExpressionUUID->"e3599bf7-351f-4b90-b69e-\
f4dac992a86e"],

Cell[TextData[{
 "The Reduced Sessie Enumeration uses only quinary (base-5) codes, meaning \
that you never start with an empty string in the first rule. The function ",
 StyleBox["FromReducedRankIndex[n] ",
  FontSlant->"Italic"],
 "gives the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "316988ab-6918-ec47-ba90-b5885a58a24e"],
 " ruleset in the reduced quinary enumeration. The first 40 rulesets are \
listed below. If we define the weight of a ruleset as the sum of the \
individual letters, with A=1, B=2, C=3, \[Ellipsis], it is clear that in this \
list (as in the GSSS Enumeration), weight 1 rulesets (containing only 1 \
letter, an A) all appear before weight 2 rulesets (containing either 2 As or \
1 B), and weight 2 rulesets come before those of weight 3 in the list, etc. \
This ordering of rulesets is what makes \[OpenCurlyDoubleQuote]long-jumps\
\[CloseCurlyDoubleQuote] and the accelerated looping through the enumeration \
possible."
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607933844562*^9}, {
  3.938609081225607*^9, 3.938609093793503*^9}, {3.938609169444773*^9, 
  3.938609174788612*^9}, {3.940426970139702*^9, 3.9404270236143017`*^9}, {
  3.940537877341168*^9, 3.940537928220003*^9}, {3.940590235505411*^9, 
  3.9405903407343097`*^9}, {3.9410160034624386`*^9, 3.9410160073916435`*^9}, {
  3.941120603653353*^9, 
  3.9411206271557865`*^9}},ExpressionUUID->"619f27b9-6f9f-d44e-8ea5-\
a6659e93b944"],

Cell[TextData[{
 "Since all rulesets containing an insertion rule (\[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote] \[Rule] something) will be discarded by ",
 StyleBox["TestForConflictingRules",
  FontSlant->"Italic"],
 ", if the insertion rule is not the last rule, the only way an insertion \
rule can be the first one is if the ruleset has only the one rule.  A solo \
insertion rule can never delete cells, and so cannot produce a network.  \
Therefore it is logical to eliminate all initial insertion rule cases, and \
this can easily be done by an adjustment to the enumeration itself, basically \
dropping the first (binary) digit of the GSSS enumeration."
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607933844562*^9}, {
  3.938609081225607*^9, 3.938609093793503*^9}, {3.938609169444773*^9, 
  3.938609174788612*^9}, {3.940426970139702*^9, 3.9404270236143017`*^9}, {
  3.940537877341168*^9, 3.940537928220003*^9}, {3.940590235505411*^9, 
  3.9405903407343097`*^9}, {3.9410160034624386`*^9, 3.9410160064054794`*^9}, {
  3.9411206966431847`*^9, 3.941120702849139*^9}, {3.941120813842015*^9, 
  3.941120817020123*^9}},ExpressionUUID->"07762384-11f7-1f43-bbac-\
999d3e5ffc20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "\"\<Index\>\"", "]"}], "]"}], ",", "\"\<: \>\"", ",", 
      RowBox[{"Subscript", "[", " ", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "\"\<QCode\>\"", "]"}], "]"}], ",", "5"}], "]"}], ",", 
      "\"\<: \>\"", ",", " ", 
      RowBox[{"InputForm", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "\"\<RuleSet\>\"", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"FromReducedRankIndex", "/@", " ", 
    RowBox[{"Range", "[", "40", "]"}]}]}], "//", " ", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Alignment", "->", "Left"}], ",", " ", 
     RowBox[{"Spacings", "->", "0"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.938608044118566*^9, 3.938608109842596*^9}, 
   3.938608182404308*^9, {3.9386083886461143`*^9, 3.938608653742567*^9}, {
   3.9386087154360447`*^9, 3.938608737979229*^9}, {3.938608801715063*^9, 
   3.938608819041078*^9}, {3.938608852190481*^9, 3.938608936165283*^9}, {
   3.938608971516979*^9, 3.938609000079418*^9}, {3.940590200452476*^9, 
   3.940590215166456*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0521ee7a-7701-bf48-b428-782099279bb5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "\<\": \"\>", 
     SubscriptBox["\<\"\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"2", "\<\": \"\>", 
     SubscriptBox["\<\"0\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"3", "\<\": \"\>", 
     SubscriptBox["\<\"1\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"4", "\<\": \"\>", 
     SubscriptBox["\<\"2\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<A\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"5", "\<\": \"\>", 
     SubscriptBox["\<\"3\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<AA\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"AA" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"6", "\<\": \"\>", 
     SubscriptBox["\<\"4\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"B" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"7", "\<\": \"\>", 
     SubscriptBox["\<\"00\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"8", "\<\": \"\>", 
     SubscriptBox["\<\"01\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"9", "\<\": \"\>", 
     SubscriptBox["\<\"02\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"10", "\<\": \"\>", 
     SubscriptBox["\<\"03\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<AA\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "AA"}],
      AutoDelete->True,
      Editable->True]},
    {"11", "\<\": \"\>", 
     SubscriptBox["\<\"04\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<B\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "B"}],
      AutoDelete->True,
      Editable->True]},
    {"12", "\<\": \"\>", 
     SubscriptBox["\<\"10\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "A" -> "", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"13", "\<\": \"\>", 
     SubscriptBox["\<\"11\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "A" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"14", "\<\": \"\>", 
     SubscriptBox["\<\"12\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "A" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"15", "\<\": \"\>", 
     SubscriptBox["\<\"13\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<AA\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "AA" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"16", "\<\": \"\>", 
     SubscriptBox["\<\"14\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<B\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "B" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"17", "\<\": \"\>", 
     SubscriptBox["\<\"20\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "A", "" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"18", "\<\": \"\>", 
     SubscriptBox["\<\"21\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "A", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"19", "\<\": \"\>", 
     SubscriptBox["\<\"22\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "A", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"20", "\<\": \"\>", 
     SubscriptBox["\<\"23\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<AA\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "AA"}],
      AutoDelete->True,
      Editable->True]},
    {"21", "\<\": \"\>", 
     SubscriptBox["\<\"24\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<B\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "B"}],
      AutoDelete->True,
      Editable->True]},
    {"22", "\<\": \"\>", 
     SubscriptBox["\<\"30\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<AA\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"AA" -> "", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"23", "\<\": \"\>", 
     SubscriptBox["\<\"31\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<AA\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"AA" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"24", "\<\": \"\>", 
     SubscriptBox["\<\"32\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<AA\>\"", " ", "->", " ", "\"\<A\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"AA" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"25", "\<\": \"\>", 
     SubscriptBox["\<\"33\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<AAA\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"AAA" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"26", "\<\": \"\>", 
     SubscriptBox["\<\"34\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<AB\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"AB" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"27", "\<\": \"\>", 
     SubscriptBox["\<\"40\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<B\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"B" -> "", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"28", "\<\": \"\>", 
     SubscriptBox["\<\"41\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<B\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"B" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"29", "\<\": \"\>", 
     SubscriptBox["\<\"42\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<B\>\"", " ", "->", " ", "\"\<A\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"B" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"30", "\<\": \"\>", 
     SubscriptBox["\<\"43\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<BA\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"BA" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"31", "\<\": \"\>", 
     SubscriptBox["\<\"44\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", " ", "->", " ", "\"\<\>\""}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"C" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"32", "\<\": \"\>", 
     SubscriptBox["\<\"000\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "", "A" -> "", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"33", "\<\": \"\>", 
     SubscriptBox["\<\"001\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "", "A" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"34", "\<\": \"\>", 
     SubscriptBox["\<\"002\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "", "A" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"35", "\<\": \"\>", 
     SubscriptBox["\<\"003\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<AA\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "", "AA" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"36", "\<\": \"\>", 
     SubscriptBox["\<\"004\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<B\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "", "B" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"37", "\<\": \"\>", 
     SubscriptBox["\<\"010\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "A", "" -> "", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"38", "\<\": \"\>", 
     SubscriptBox["\<\"011\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "A", "" -> "A"}],
      AutoDelete->True,
      Editable->True]},
    {"39", "\<\": \"\>", 
     SubscriptBox["\<\"012\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "A", "A" -> ""}],
      AutoDelete->True,
      Editable->True]},
    {"40", "\<\": \"\>", 
     SubscriptBox["\<\"013\"\>", "5"], "\<\": \"\>", 
     InterpretationBox[
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<A\>\"", " ", "->", " ", "\"\<\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<A\>\""}], ",", " ", 
         RowBox[{"\"\<\>\"", " ", "->", " ", "\"\<AA\>\""}]}], "}"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[{"A" -> "", "" -> "A", "" -> "AA"}],
      AutoDelete->True,
      Editable->True]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.938608553816368*^9, 3.938608577627905*^9}, 
   3.9386086417128353`*^9, 3.938608740628174*^9, 3.938608823860501*^9, {
   3.938608876686765*^9, 3.938608937352661*^9}, 3.938609009622305*^9, {
   3.9405902056058044`*^9, 3.9405902156460056`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"13a56fac-886c-3044-99d8-60b9256daa67"]
}, Open  ]],

Cell["\<\
The RSS enumeration contains the same rulesets as the GSS enumeration in the \
same order, with initial insertion rules removed.  The encoding is also the \
same, except for the removal of the initial bit that distinguished between \
rulesets beginning with an empty string and those not.  The decision was made \
to use the RSS enumeration by default, since initial insertion rules have \
simple, well-understood behavior.\
\>", "Text",
 CellChangeTimes->{{3.941016077979046*^9, 3.941016084902565*^9}, {
  3.9411208431759996`*^9, 
  3.94112090870592*^9}},ExpressionUUID->"d19f4bc1-edf0-5840-89e3-\
700ec3fc85f8"],

Cell["\<\
Within any given weight, advancing through the enumeration tends to compact \
the weight into fewer characters, moving it gradually towards the left. So \
the most spread out ruleset of weight 3, {\[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote]\[Rule]\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]\
, \[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]\[Rule]\
\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]\[Rule]\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]\
, \[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]\[Rule]\
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]} is the first of this weight \
in the list, {\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]\[Rule]\
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]\[Rule]\[OpenCurlyDoubleQuote]B\
\[CloseCurlyDoubleQuote]} appears further down, and {\[OpenCurlyDoubleQuote]C\
\[CloseCurlyDoubleQuote]\[Rule]\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]\
} is the last of this weight, with the entire weight compacted to the left.\
\>", "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386080186467*^9}, {
  3.940537986249012*^9, 3.9405380284254436`*^9}, {3.941120977186552*^9, 
  3.941121022381155*^9}, {3.941121111590615*^9, 
  3.941121125207657*^9}},ExpressionUUID->"a5998614-67a9-694f-891c-\
733ead3577d1"],

Cell["\<\
Note: The \[OpenCurlyDoubleQuote]most spread out\[CloseCurlyDoubleQuote] \
rulesets have exactly 2 empty strings between single \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote] strings, since we want to include the possibility of \
deletion rules (where the replacement string is \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]) and insertion rules (where the search string is \
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]), and the possibility that an \
insertion might follow right after a deletion, thus putting 2 empty strings \
in sequence. E.g., {\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]\[Rule]\
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]\[Rule]\[OpenCurlyDoubleQuote]B\
\[CloseCurlyDoubleQuote]}. But we will never need more than 2 consecutive \
empty strings!  Unfortunately this algorithm also produces \
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote]\[Rule]\[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote] rules, which are always unnecessary, as are (for \
sessies) non-final insertion rules. More on the solution to these problems \
below.\
\>", "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, 
   3.938608212074718*^9, {3.940538049679123*^9, 3.9405380720702057`*^9}, {
   3.9405903973380985`*^9, 3.940590451940256*^9}, {3.941120992405934*^9, 
   3.9411209924301243`*^9}, {3.9411210554036846`*^9, 3.941121081533129*^9}, {
   3.941121111734814*^9, 3.941121125290346*^9}, {3.941121174483021*^9, 
   3.9411211778591404`*^9}},ExpressionUUID->"53a68df3-21ea-2641-872e-\
15508eda4e4a"],

Cell["\<\
The algorithm is guaranteed to produce all valid rulesets somewhere in the \
list, if one goes far enough. It can easily be seen that there is no limit on \
the number of rules in the ruleset: all cases will eventually occur, and all \
combinations of all letters will eventually appear everywhere in the ruleset.\
\>", "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, 
   3.938608214218326*^9, {3.940538092322108*^9, 3.940538098311293*^9}, 
   3.940538237640576*^9, {3.941121055515038*^9, 3.941121081561905*^9}, {
   3.941121111834831*^9, 
   3.9411211253151646`*^9}},ExpressionUUID->"1a933d5e-6161-b443-9f40-\
e71b9baf0e4a"],

Cell[TextData[{
 "As already mentioned, this does generate some unneeded cases, e.g., with \
empty strings at too many positions in the ruleset, such as ",
 StyleBox["nothing ",
  FontSlant->"Italic"],
 "\[Rule] ",
 StyleBox["nothing",
  FontSlant->"Italic"],
 " rules, or multiple ",
 StyleBox["nothing ",
  FontSlant->"Italic"],
 "\[Rule] ",
 StyleBox["something",
  FontSlant->"Italic"],
 " rules -- only the first one could ever be used, or indeed any case where \
an insertion rule appears before the final position in the ruleset. But the \
most important thing is that all cases we want to study are included, and \
there is no repetition at all in the enumeration. It is also worth noting \
that this enumeration never produces invalid rulesets."
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, {
  3.938608235054892*^9, 3.938608271495035*^9}, {3.94053811421474*^9, 
  3.94053817419828*^9}, {3.9405904851728935`*^9, 3.9405904914647903`*^9}, {
  3.9411209924461803`*^9, 3.941120992461834*^9}, {3.941121055548001*^9, 
  3.94112108165441*^9}, {3.9411211118624*^9, 3.9411211253931007`*^9}, {
  3.941121214596504*^9, 
  3.9411212518440237`*^9}},ExpressionUUID->"32c8b98f-7e92-af4d-b450-\
749c65828672"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Explanation of Q-Codes",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
  3.938609219772644*^9, 3.938609223054897*^9}, {3.940426668506416*^9, 
  3.940426689870445*^9}, {3.9404271194435873`*^9, 
  3.940427126959093*^9}},ExpressionUUID->"ebcaf03d-5a34-4b3a-8d41-\
a90cf2e51ddf"],

Cell["\<\
\[FilledSmallSquare] 0: end this string, insert two empty strings and start a \
new string with an \"A\" \
\>", "Text",
 CellChangeTimes->{{3.9404273272912436`*^9, 3.940427340528697*^9}, 
   3.9405382040476456`*^9, {3.940538251062901*^9, 3.940538259690079*^9}, {
   3.941121055625592*^9, 3.941121081667296*^9}, {3.941121111955946*^9, 
   3.941121125406927*^9}},ExpressionUUID->"04d28a3d-b184-b04a-8056-\
73e4187bdbdc"],

Cell["\<\
\[FilledSmallSquare] 1: end this string, insert one empty string and start a \
new string with an \"A\" \
\>", "Text",
 CellChangeTimes->{{3.9404273272912436`*^9, 3.940427340528697*^9}, 
   3.9405382040476456`*^9, {3.941121055644537*^9, 3.941121081685007*^9}, {
   3.9411211119702477`*^9, 
   3.9411211254231186`*^9}},ExpressionUUID->"7e16824d-5a5c-964f-9267-\
e1ce4977a950"],

Cell["\[FilledSmallSquare] 2: end this string and start a new string with an \
\"A\" ", "Text",
 CellChangeTimes->{{3.9404273272912436`*^9, 
  3.9404273430184608`*^9}},ExpressionUUID->"069e38a4-31ee-469e-acb1-\
cc8446d8c251"],

Cell["\<\
\[FilledSmallSquare] 3: end this character and start a new character (as an \
\"A\") \
\>", "Text",
 CellChangeTimes->{{3.9404273272912436`*^9, 
  3.9404273450113606`*^9}},ExpressionUUID->"b4d7ca10-be3c-451e-a523-\
fa84b0754c2e"],

Cell["\[FilledSmallSquare] 4: increment this character", "Text",
 CellChangeTimes->{
  3.9404273272912436`*^9, {3.94042757024762*^9, 3.94042761964515*^9}, 
   3.940538285957991*^9},ExpressionUUID->"cf984beb-48f2-4d25-8c07-\
fdc93ea832fb"],

Cell[TextData[StyleBox["Try constructing some rulesets by hand, using the RSS \
enumeration, starting with an empty q-code and a single \
\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]. Clicking the 0-4 buttons \
performs the actions listed above.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.9404273272912436`*^9, {3.94042757024762*^9, 3.94042761964515*^9}, {
   3.9410464711884327`*^9, 3.941046499814049*^9}, 3.941120889579914*^9, {
   3.941121055664217*^9, 3.941121081698115*^9}, {3.941121111986532*^9, 
   3.941121125433489*^9}, {3.94112127957552*^9, 3.9411213474519463`*^9}, {
   3.941121377546446*^9, 
   3.941121395636624*^9}},ExpressionUUID->"491c3464-2b71-ed49-822c-\
d027685e63f2"],

Cell[TextData[StyleBox["***Code needs to be De-Bugged***",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.948377577615652*^9, 
  3.948377587524065*^9}},ExpressionUUID->"36bca9ff-5f07-004a-baf3-\
d3e6d07bc599"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Reset\>\"", ",", " ", 
           RowBox[{
            RowBox[{"code", "=", "\"\<\>\""}], ";", 
            RowBox[{"ans", "=", 
             RowBox[{"{", 
              RowBox[{"{", "1", "}"}], "}"}]}]}]}], "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<0\>\"", ",", " ", 
           RowBox[{
            RowBox[{"code", "=", 
             RowBox[{"code", "<>", "\"\<0\>\""}]}], ";", 
            RowBox[{"ans", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"ans", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", " ", 
                 RowBox[{"{", "}"}], ",", " ", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}]}]}], " ", "]"}], 
         ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<1\>\"", ",", " ", 
           RowBox[{
            RowBox[{"code", "=", 
             RowBox[{"code", "<>", "\"\<1\>\""}]}], ";", 
            RowBox[{"ans", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"ans", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", " ", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}]}]}], " ", "]"}], 
         ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<2\>\"", ",", " ", 
           RowBox[{
            RowBox[{"code", "=", 
             RowBox[{"code", "<>", "\"\<2\>\""}]}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ans", ",", " ", 
              RowBox[{"{", "1", "}"}]}], "]"}]}]}], " ", "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<3\>\"", ",", " ", 
           RowBox[{
            RowBox[{"code", "=", 
             RowBox[{"code", "<>", "\"\<3\>\""}]}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"ans", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", " ", "1"}],
              "]"}]}]}], " ", "]"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<4\>\"", ",", " ", 
           RowBox[{
            RowBox[{"code", "=", 
             RowBox[{"code", "<>", "\"\<4\>\""}]}], ";", 
            RowBox[{
             RowBox[{
              RowBox[{"ans", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "++"}]}]}], " ", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Back\>\"", ",", " ", 
           RowBox[{"code", " ", "=", " ", 
            RowBox[{"StringDrop", "[", 
             RowBox[{"ans", ",", 
              RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
           RowBox[{"Most", "[", "ans", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<q-code: \>\"", ",", " ", "code"}], "}"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<answer: \>\"", ",", " ", "ans"}], "}"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<strings: \>\"", ",", " ", 
            RowBox[{"strings", "=", 
             RowBox[{"StringJoin", " ", "@@@", " ", 
              RowBox[{"(", 
               RowBox[{"ans", "  ", "/.", " ", 
                RowBox[{"(", 
                 RowBox[{"Reverse", " ", "/@", " ", "characterWeights"}], 
                 ")"}]}], ")"}]}]}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<ruleset: \>\"", ",", " ", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OddQ", "[", 
                RowBox[{"Length", "[", "strings", "]"}], "]"}], ",", " ", 
               RowBox[{"strings", "=", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"strings", ",", " ", "\"\<\>\""}], "]"}]}]}], "]"}], 
             ";", 
             RowBox[{"Rule", " ", "@@@", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{"strings", ",", " ", "2", ",", " ", "2"}], "]"}]}]}]}],
            "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
        RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ","}], " ", 
     "\[IndentingNewLine]", "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"code", ",", " ", 
     RowBox[{"{", "\"\<\>\"", "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"strings", ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"ans", ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"ControlType", "\[Rule]", "None"}], ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, 3.475836539078125*^9, {3.475836639203125*^9, 
   3.475836647625*^9}, {3.4758614526605062`*^9, 3.475861521415557*^9}, {
   3.475879461286953*^9, 3.475879483054389*^9}, {3.4758795376839333`*^9, 
   3.475879541137347*^9}, 3.476248309144345*^9, {3.476443302140625*^9, 
   3.4764433155625*^9}, {3.476653682015625*^9, 3.4766536895*^9}, {
   3.941046129142458*^9, 3.9410461475802994`*^9}, {3.941046396026068*^9, 
   3.9410463988977394`*^9}, {3.9410466246449127`*^9, 3.941046625453581*^9}, {
   3.941121055680771*^9, 3.941121055851874*^9}, {3.9411211119913487`*^9, 
   3.941121125577683*^9}, {3.941202177683739*^9, 3.941202206977049*^9}, {
   3.941202248353415*^9, 3.941202279272815*^9}, {3.9412023174815054`*^9, 
   3.941202320788746*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"481c6606-e13d-f545-97c8-91e1529dc7e2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{SSSiCv100`ans$$ = {{3, 1}, {2, 1}, {1, 1, 2, 1}}, 
    SSSiCv100`code$$ = "44324323343", SSSiCv100`strings$$ = {
    "CA", "BA", "AABA", ""}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[SSSiCv100`code$$], {""}, ControlType -> None}, {
      Hold[SSSiCv100`strings$$], {{}}, ControlType -> None}, {
      Hold[SSSiCv100`ans$$], {{{1}}}, ControlType -> None}}, 
    Typeset`size$$ = {
    762.5273671150208, {59.11440547115636, 64.84633927515242}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       SSSiCv100`ans$$ = {{1}}, SSSiCv100`code$$ = "", 
        SSSiCv100`strings$$ = {}}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         Row[{
           Button["Reset", SSSiCv100`code$$ = ""; SSSiCv100`ans$$ = {{1}}], 
           Button[
           "0", SSSiCv100`code$$ = SSSiCv100`code$$ <> "0"; 
            SSSiCv100`ans$$ = Join[SSSiCv100`ans$$, {{}, {}, {1}}]], 
           Button[
           "1", SSSiCv100`code$$ = SSSiCv100`code$$ <> "1"; 
            SSSiCv100`ans$$ = Join[SSSiCv100`ans$$, {{}, {1}}]], 
           Button[
           "2", SSSiCv100`code$$ = SSSiCv100`code$$ <> "2"; 
            AppendTo[SSSiCv100`ans$$, {1}]], 
           Button["3", SSSiCv100`code$$ = SSSiCv100`code$$ <> "3"; AppendTo[
              Part[SSSiCv100`ans$$, -1], 1]], 
           Button["4", SSSiCv100`code$$ = SSSiCv100`code$$ <> "4"; Increment[
              Part[
               Part[SSSiCv100`ans$$, -1], -1]]], 
           Button["Back", SSSiCv100`code$$ = StringDrop[SSSiCv100`ans$$, -1], 
            Most[SSSiCv100`ans$$]]}], 
         Grid[{{}, {"q-code: ", SSSiCv100`code$$}, {
           "answer: ", SSSiCv100`ans$$}, {
           "strings: ", SSSiCv100`strings$$ = MapApply[StringJoin, 
              ReplaceAll[SSSiCv100`ans$$, 
               Map[Reverse, $CellContext`characterWeights]]]}, {
           "ruleset: ", If[
              OddQ[
               Length[SSSiCv100`strings$$]], SSSiCv100`strings$$ = 
              AppendTo[SSSiCv100`strings$$, ""]]; MapApply[Rule, 
              Partition[SSSiCv100`strings$$, 2, 2]]}}, Alignment -> Left], 
         Null}], "Specifications" :> {{SSSiCv100`code$$, {""}}, {
        SSSiCv100`strings$$, {{}}}, {SSSiCv100`ans$$, {{{1}}}}}, 
      "Options" :> {ControlType -> None}, "DefaultOptions" :> {}],
     ImageSizeCache->{811., {90.13403309800196, 95.86596690199804}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>($CellContext`characterWeights = {
       "" -> 0, "A" -> 1, "B" -> 2, "C" -> 3, "D" -> 4, "E" -> 5, "F" -> 6, 
        "G" -> 7, "H" -> 8, "I" -> 9, "J" -> 10, "K" -> 11, "L" -> 12, "M" -> 
        13, "N" -> 14, "O" -> 15, "P" -> 16, "Q" -> 17, "R" -> 18, "S" -> 19, 
        "T" -> 20, "U" -> 21, "V" -> 22, "W" -> 23, "X" -> 24, "Y" -> 25, "Z" -> 
        26}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.941046389340193*^9, 3.941046399766676*^9}, 
   3.941046642239384*^9, 3.941202327665051*^9, 3.948377514086371*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"5caae0d8-237f-4040-8258-c4a092a58e38"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Ruleset tests:",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, {
  3.938608235054892*^9, 
  3.938608270448229*^9}},ExpressionUUID->"5184138c-136d-b44c-9fdc-\
2b02344918df"],

Cell[TextData[{
 "To save time and accelerate the use of the enumeration in an actual \
program, any ruleset that contains a problem can be skipped without \
generating the sessie and its network. In addition, the pattern and order of \
the enumeration allow us to skip over multiple cases at once. If such a \
\[OpenCurlyDoubleQuote]long-jump\[CloseCurlyDoubleQuote] is possible, the \
test returns the first ruleset in the enumeration that does ",
 StyleBox["not",
  FontSlant->"Italic"],
 " have that particular problem, i.e., the ",
 StyleBox["target",
  FontSlant->"Italic"],
 " of the long-jump. The main tests are:"
}], "Text",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, {
  3.938608235054892*^9, 3.938608274224966*^9}, {3.940538310663679*^9, 
  3.940538355373062*^9}, {3.940590540809946*^9, 3.940590605982149*^9}, {
  3.941121055863404*^9, 3.941121081770996*^9}, {3.941121112166212*^9, 
  3.941121125725159*^9}},ExpressionUUID->"c0a1ef9d-4aef-a042-b109-\
88f487fb68b2"],

Cell[CellGroupData[{

Cell["Tests that eliminate the ruleset, and allow long-jumps:", \
"Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, {
   3.938608235054892*^9, 3.9386083129436*^9}, {3.94053839056118*^9, 
   3.940538391647143*^9}, 3.9410154670433674`*^9, {3.9411210559272337`*^9, 
   3.941121081784123*^9}, {3.941121112227837*^9, 
   3.941121125737564*^9}},ExpressionUUID->"638331d6-c528-ef44-8c03-\
9777dddf3b15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Test\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",", 
       " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Description\>\"", ",", " ", "\"\<Subsection\>\""}], 
        "]"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForConflictingRules\>\"", ",", " ", 
       "\"\<(* Two rules conflict if the second rule never has a chance to be \
used because the first rule preempts it. Ex/ {\\\"C\\\"\[Rule]\\\"\\\", \\\"A\
\\\"\[Rule]\\\"B\\\", \\\"AA\\\"\[Rule]\\\"C\\\"}: rule 3 conflicts with rule \
2, so the ruleset is equivalent to {\\\"C\\\"\[Rule]\\\"\\\", \
\\\"A\\\"\[Rule]\\\"B\\\"}, omitting rule 3 *)\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForNonSoloIdentityRule\>\"", ",", " ", 
       "\"\<(* an identity rule is a rule in which a string is replaced by \
itself, no further rules will be used if the identity rule ever matches \
*)\>\""}], "}"}], ",", " ", "\n", 
     RowBox[{"{", 
      RowBox[{
      "\"\<(or TestForIdentityRule)\>\"", ",", " ", 
       "\"\<(* if solo identity rules are treated separately *)\>\""}], "}"}],
      ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForNonSoloInitialSubstringRule\>\"", ",", " ", 
       "\"\<(* Ex/ {\\\"A\\\"\[Rule]\\\"BAB\\\", \[Ellipsis]} If 1st rule \
matches, it will never fail again. *)\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForRenamedRuleSet\>\"", ",", " ", 
       "\"\<(* If the characters used in the strings of the ruleset are \
permuted or replaced by other characters, the SSS will look the same up to a \
permutation of colors, and the causal network will be identical. Ex/ {\\\"BAB\
\\\"\[RightArrow]\\\"ABA\\\", \\\"A\\\"\[RightArrow]\\\"B\\\", \\\"B\\\"\
\[RightArrow]\\\"AA\\\"} is indistinguishable from \
{\\\"ABA\\\"\[RightArrow]\\\"BAB\\\", \\\"B\\\"\[RightArrow]\\\"A\\\", \
\\\"A\\\"\[RightArrow]\\\"BB\\\"} *)\>\""}], "}"}], ",", " ", "\n", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForUnusedRules\>\"", ",", " ", "\n", 
       "\"\<(* Still under construction: the idea is that if a rule is never \
used, it could be omitted without affecting the results. The difficulty is in \
being sure that the rule will never be used, rather than only rarely. \
*)\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Scaled", "[", ".35", "]"}], ",", 
       RowBox[{"Scaled", "[", ".65", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940538759124077*^9, 3.9405391438435116`*^9}, {
  3.940539182854916*^9, 3.9405392369037247`*^9}, {3.9405392930391636`*^9, 
  3.94053932684792*^9}, {3.9405394167696075`*^9, 3.94053942850228*^9}, {
  3.940539461717089*^9, 3.940539515894873*^9}, {3.940539588848753*^9, 
  3.940539724170283*^9}, {3.940539789871941*^9, 3.940539793674948*^9}, {
  3.940539853720038*^9, 3.940539865045716*^9}, {3.9405399044348087`*^9, 
  3.940540024903253*^9}, {3.940540057426777*^9, 3.940540118563072*^9}, {
  3.941120992477608*^9, 3.941120992486544*^9}, {3.94112105594734*^9, 
  3.9411210818744407`*^9}, {3.941121112227837*^9, 3.941121125888159*^9}, {
  3.9411218862981186`*^9, 3.9411219388731976`*^9}, {3.941122047928522*^9, 
  3.941122065308071*^9}, {3.9483776559886837`*^9, 3.94837769670648*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"8d5db6a0-8633-4d47-9b3b-9c6d76bb775e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Test\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Description\"\>", "Subsection",
      StripOnInput->False]},
    {"\<\"TestForConflictingRules\"\>", "\<\"(* Two rules conflict if the \
second rule never has a chance to be used because the first rule preempts it. \
Ex/ {\\\"C\\\"\[Rule]\\\"\\\", \\\"A\\\"\[Rule]\\\"B\\\", \\\"AA\\\"\[Rule]\\\
\"C\\\"}: rule 3 conflicts with rule 2, so the ruleset is equivalent to \
{\\\"C\\\"\[Rule]\\\"\\\", \\\"A\\\"\[Rule]\\\"B\\\"}, omitting rule 3 \
*)\"\>"},
    {"\<\"TestForNonSoloIdentityRule\"\>", "\<\"(* an identity rule is a rule \
in which a string is replaced by itself, no further rules will be used if the \
identity rule ever matches *)\"\>"},
    {"\<\"(or TestForIdentityRule)\"\>", "\<\"(* if solo identity rules are \
treated separately *)\"\>"},
    {"\<\"TestForNonSoloInitialSubstringRule\"\>", "\<\"(* Ex/ {\\\"A\\\"\
\[Rule]\\\"BAB\\\", \[Ellipsis]} If 1st rule matches, it will never fail \
again. *)\"\>"},
    {"\<\"TestForRenamedRuleSet\"\>", "\<\"(* If the characters used in the \
strings of the ruleset are permuted or replaced by other characters, the SSS \
will look the same up to a permutation of colors, and the causal network will \
be identical. Ex/ {\\\"BAB\\\"\[RightArrow]\\\"ABA\\\", \
\\\"A\\\"\[RightArrow]\\\"B\\\", \\\"B\\\"\[RightArrow]\\\"AA\\\"} is \
indistinguishable from {\\\"ABA\\\"\[RightArrow]\\\"BAB\\\", \\\"B\\\"\
\[RightArrow]\\\"A\\\", \\\"A\\\"\[RightArrow]\\\"BB\\\"} *)\"\>"},
    {"\<\"TestForUnusedRules\"\>", "\<\"(* Still under construction: the idea \
is that if a rule is never used, it could be omitted without affecting the \
results. The difficulty is in being sure that the rule will never be used, \
rather than only rarely. *)\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{Medium, FontFamily -> "Times"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.35], 
       Scaled[0.65]}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.941121536767226*^9, 3.941121939738432*^9, {3.94112204969314*^9, 
   3.941122066220951*^9}, {3.948377664820711*^9, 3.9483776975174885`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"df85a8cc-f173-de4b-9372-4b3fdaf9f901"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Tests that eliminate the ruleset, but don\[CloseCurlyQuote]t allow long-jumps:\
\>", "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, {
   3.938608235054892*^9, 3.9386083129436*^9}, {3.94053839056118*^9, 
   3.940538391647143*^9}, 3.9410154670433674`*^9, 3.9410155819146748`*^9, {
   3.9411210562019873`*^9, 3.9411210819525194`*^9}, {3.94112111246591*^9, 
   3.941121125958235*^9}},ExpressionUUID->"37bca606-7753-b644-9a86-\
2526d07bc11d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Test\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",", 
       " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Description\>\"", ",", " ", "\"\<Subsection\>\""}], 
        "]"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForShorteningRuleSet\>\"", ",", " ", 
       "\"\<(* at least one rule shortens the state string, and none lengthen \
it, so this will eventually die out *)\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForUnbalancedRuleSet\>\"", ",", " ", 
       "\"\<(* some letter appears on only one side of the rules, so that \
letter is either created or destroyed, but not both: that letter is not \
needed for the main pattern of the sessie *)\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Scaled", "[", ".30", "]"}], ",", 
       RowBox[{"Scaled", "[", ".70", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQXfDjscHv6LeOPP9+JYDoyujbqSA64PWcHBB9xWFh
MYjWVLpdDqIXLJBoBtHrhCa0gOjUT9s6QPTZRTX9IPqPxuwZIPprUetKEP3x
2e6NIFp3pukmEN3LtX0niG4sU9wNor+85D0Aooufy5wH0RordC+D6A0sl26B
aBcxXc4nMW8dBSQ0uED0avan/CD6x+qDgiB6yorXoiD6RvZBKRBds4q/RjwW
aP9NCL2hjK0FRJek2reDaEMN/m4Q/WPLgR4QvcCn+jGIrtu98xmI9tzlwiIB
pOfEF4Jphj0Tz73LAppblHEBRAMAjpqlVg==
  "],
 CellLabel->"In[53]:=",ExpressionUUID->"eccbb270-6813-104a-a5d4-93f078f93939"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Test\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Description\"\>", "Subsection",
      StripOnInput->False]},
    {"\<\"TestForShorteningRuleSet\"\>", "\<\"(* at least one rule shortens \
the state string, and none lengthen it, so this will eventually die out \
*)\"\>"},
    {"\<\"TestForUnbalancedRuleSet\"\>", "\<\"(* some letter appears on only \
one side of the rules, so that letter is either created or destroyed, but not \
both: that letter is not needed for the main pattern of the sessie *)\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{Medium, FontFamily -> "Times"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.3], 
       Scaled[0.7]}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.941121562246201*^9, 3.941121834722002*^9, 3.941122084106167*^9, {
   3.9483777224905033`*^9, 3.948377732552799*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"cc4ac78d-a243-594f-9305-c8e03a400854"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other Tests:", "Subsubsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386079739759865`*^9}, {
   3.938608235054892*^9, 3.9386083129436*^9}, {3.94053839056118*^9, 
   3.940538391647143*^9}, 3.9410154670433674`*^9, 3.9410155819146748`*^9, {
   3.9411210562019873`*^9, 3.9411210819525194`*^9}, {3.94112111246591*^9, 
   3.941121125958235*^9}, {3.941121710205406*^9, 
   3.941121713908987*^9}},ExpressionUUID->"4274938a-b75d-5f41-a598-\
37ae87514d57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Test\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",", 
       " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Description\>\"", ",", " ", "\"\<Subsection\>\""}], 
        "]"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TestForAll\>\"", ",", " ", 
       "\"\<(* checks all of the above tests, in optimum order to allow \
longest possible long jumps *)\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}], 
   ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Scaled", "[", ".15", "]"}], ",", 
       RowBox[{"Scaled", "[", ".85", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940538759124077*^9, 3.9405391438435116`*^9}, {
  3.940539182854916*^9, 3.9405392369037247`*^9}, {3.9405392930391636`*^9, 
  3.94053932684792*^9}, {3.9405394167696075`*^9, 3.94053942850228*^9}, {
  3.940539461717089*^9, 3.940539515894873*^9}, {3.940539588848753*^9, 
  3.940539724170283*^9}, {3.940539789871941*^9, 3.940539793674948*^9}, {
  3.940539853720038*^9, 3.940539865045716*^9}, {3.9405399044348087`*^9, 
  3.940540024903253*^9}, {3.940540057426777*^9, 3.940540118563072*^9}, {
  3.941015625408968*^9, 3.9410156332529373`*^9}, {3.941015679157186*^9, 
  3.9410156940522423`*^9}, {3.9410157273643284`*^9, 3.9410157660444145`*^9}, {
  3.941120992489561*^9, 3.941120992495356*^9}, {3.9411210562019873`*^9, 
  3.9411210819811335`*^9}, {3.941121112473656*^9, 3.941121126022091*^9}, {
  3.941121717630711*^9, 3.941121782676071*^9}, {3.9411220953017063`*^9, 
  3.941122096113756*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e4c43911-5f63-a648-8323-f410d176a95e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Test\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Description\"\>", "Subsection",
      StripOnInput->False]},
    {"\<\"TestForAll\"\>", "\<\"(* checks all of the above tests, in optimum \
order to allow longest possible long jumps *)\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{Medium, FontFamily -> "Times"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.15], 
       Scaled[0.85]}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.941121562246201*^9, {3.941121763074593*^9, 3.941121783739514*^9}, 
   3.941122096701407*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"b46eb30e-4bde-d74e-9f0d-2a648eb45ddb"]
}, {2}]],

Cell["\<\
Camille continued Christen\[CloseCurlyQuote]s effort to identify the long \
jump target ruleset directly based on the quinary (base-5) index of the \
problem ruleset.  The plan was to speed up the tests, as well as to increase \
understanding of the enumeration.  This effort will now be transferred to the \
new base-3 algorithm (see below).\
\>", "Text",
 CellChangeTimes->{{3.9410158325831623`*^9, 3.941015838443506*^9}, {
  3.941121056308506*^9, 3.941121082020724*^9}, {3.941121112581812*^9, 
  3.941121126062578*^9}},ExpressionUUID->"11f61f1e-6a53-3240-b81e-\
eed300dee629"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["New Trinary Enumeration", "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.938607876794874*^9}, {
   3.938609219772644*^9, 3.938609223054897*^9}, 3.940426668506416*^9, {
   3.940426717661736*^9, 3.940426728898861*^9}, {3.9410336782990546`*^9, 
   3.9410336861234674`*^9}},
 FontWeight->"Bold",ExpressionUUID->"ab0df75f-fd2e-a340-8cef-afbded482eee"],

Cell["\<\
This may (perhaps) supersede the quinary enumerations, since the math is \
significantly simpler, and the only disadvantage is the appearance of some \
invalid codes, which are easily jumped over, much as with any long jumps.\
\>", "Text",
 CellChangeTimes->{{3.94101617476314*^9, 3.941016176337311*^9}, {
  3.941044904450603*^9, 3.9410449071843796`*^9}, {3.9411210563254156`*^9, 
  3.941121082072359*^9}, {3.941121112592924*^9, 
  3.941121126112*^9}},ExpressionUUID->"85d8cd1a-3f5a-234c-876f-55206609e4f9"],

Cell["\<\
In the course of lengthy discussion, we have fine-tuned the new, trinary \
enumeration that will generate all sessie rulesets.\[NonBreakingSpace] The \
base-3 codes represent the following operations:\
\>", "Text",
 CellChangeTimes->{{3.94101617476314*^9, 3.9410161819757843`*^9}, {
  3.941121056379332*^9, 3.941121082097477*^9}, {3.941121112647345*^9, 
  3.9411211261366386`*^9}},ExpressionUUID->"dc3cedda-201b-8a4c-b4e2-\
e73005284dfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<0 = Increment last character (if there is one)\>\"", ",", " ", 
        RowBox[{"Background", "\[Rule]", "Orange"}]}], "]"}], "}"}], ",", " ",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<1 = Append an \>\"", "A", "\"\<\>\""}], ",", " ", 
        RowBox[{"Background", "\[Rule]", "Cyan"}]}], "]"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<2 = Start a new empty/null string\>\"", ",", " ", 
        RowBox[{"Background", "\[Rule]", "Magenta"}]}], "]"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQXfDjscHv6LeOPP9+JYDoyujbqSA64PWcHBB9xWFh
MYjWVLpdDqIXLJBoBtHrhCa0gOjUT9s6QPTZRTX9IPqPxuwZIPprUetKEP3x
2e6NIFp3pukmEN3LtX0niG4sU9wNor+85D0Aooufy5wH0RordC+D6A0sl26B
aBcxXc4nMW8dBSQ0uED0avan/CD6x+qDgiB6yorXoiD6RvZBKbC6GYtCQHTE
oumpIPrgdfYnb4D0hymb34BoDkbRLyC6Ynk941sg/eUmf4147FvHHQsFwPSd
lzwtIDql0LkdRD/xFu0G0R4uR3tANAAeiajb
  "],ExpressionUUID->"7817992a-c963-f44d-b678-aecd2814e366"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"0 = Increment last character (if there is one)\"\>",
      StripOnInput->False,
      Background->RGBColor[1, 0.5, 0]]},
    {
     StyleBox[
      RowBox[{"\<\"\"\>", " ", "\<\"1 = Append an \"\>", " ", "A"}],
      StripOnInput->False,
      Background->RGBColor[0, 1, 1]]},
    {
     StyleBox["\<\"2 = Start a new empty/null string\"\>",
      StripOnInput->False,
      Background->RGBColor[1, 0, 1]]}
   },
   AutoDelete->False,
   BaseStyle->{Medium, FontFamily -> "Times"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9410162339370613`*^9, 3.941016367909422*^9, 3.941023191275888*^9, 
   3.9410338606540356`*^9, 3.941033897106217*^9, {3.941033927328277*^9, 
   3.941033941766633*^9}, {3.9410339802742043`*^9, 3.941033997018399*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"01df217d-78c7-4b97-b414-e4995248a1e3"]
}, {2}]],

Cell["A couple of points to note:", "Text",
 CellChangeTimes->{{3.9410164031968327`*^9, 
  3.941016409489134*^9}},ExpressionUUID->"527c6318-2139-c04d-a8a5-\
48fdbcbf5ca1"],

Cell["\<\
1. The math is simpler than using the original sessie enumeration (published \
in IS&R) or the generalized or reduced quinary (base-5) enumerations \
(published in CCMK).\[NonBreakingSpace] But unlike them, some forbidden codes \
exist, yielding no ruleset.\
\>", "Text",
 CellChangeTimes->{{3.9410164031968327`*^9, 3.941016415771169*^9}, {
  3.941121056448839*^9, 3.9411210821335716`*^9}, {3.9411211127124186`*^9, 
  3.941121126193011*^9}, {3.9411221429147267`*^9, 3.9411221481591268`*^9}, {
  3.9411221878135223`*^9, 
  3.9411221897402487`*^9}},ExpressionUUID->"33cec26e-0227-2148-b786-\
afec9d77fea7"],

Cell["\<\
2. An initial \[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] or a \
\[OpenCurlyDoubleQuote]20\[CloseCurlyDoubleQuote] anywhere in the trinary \
code is invalid, and should simply be skipped over in running through the \
enumeration.\[NonBreakingSpace] This is not a hardship, since it\
\[CloseCurlyQuote]s easy to check and go on.\[NonBreakingSpace] The simpler \
math may make it worth it.\
\>", "Text",
 CellChangeTimes->{{3.9410164031968327`*^9, 3.9410164208272533`*^9}, {
  3.941121056466721*^9, 3.941121082156172*^9}, {3.941121112738556*^9, 
  3.941121126215803*^9}},ExpressionUUID->"93025586-baeb-8d47-a786-\
3d30ad0f8fe0"],

Cell["\<\
3. Our working version is to also drop any ruleset generated that has an odd \
number of strings.\[NonBreakingSpace] This can easily be checked by counting \
the number of times \[OpenCurlyDoubleQuote]2\[CloseCurlyDoubleQuote] appears \
in the trinary operation code, no need to even generate the ruleset!\
\[NonBreakingSpace] (Sadly, I see no way to long-jump over runs of such cases \
in the enumeration, so we just check and go on.)\
\>", "Text",
 CellChangeTimes->{{3.9410164031968327`*^9, 3.94101642988329*^9}, {
  3.941121056499579*^9, 3.941121082188469*^9}, {3.941121112764208*^9, 
  3.94112112625232*^9}},ExpressionUUID->"2779f732-dd1b-ef4b-a696-\
0b46081d4a1b"],

Cell["\<\
4. The next task is to determine the easiest way to perform long-jumps over \
runs of invalid cases, non-final creation rulesets, conflicting rules, \
initial substring rules, etc. These are all situations that occur in runs in \
the enumeration, so if found, the odds are we can long-jump over a run of \
similar cases, and so quickly move on to more interesting cases.\
\[NonBreakingSpace] (That is the strength of the enumeration.)\
\>", "Text",
 CellChangeTimes->{{3.9410164031968327`*^9, 3.941016447169359*^9}, {
  3.9411210565461073`*^9, 3.941121082271393*^9}, {3.9411211128112392`*^9, 
  3.941121126334139*^9}},ExpressionUUID->"ba8e6a9b-cea7-644b-b406-\
6e6f799211ad"],

Cell["\<\
Below is the list of the first 50 positive integers, first in base 10, then \
in base 3, with the ruleset generated by the new enumeration algorithm, if \
any, shown.  In case of an invalid ruleset, the \[OpenCurlyDoubleQuote]ok?\
\[CloseCurlyDoubleQuote] column indicates why:  \[OpenCurlyDoubleQuote]\
\[Ellipsis]20\[Ellipsis]\[CloseCurlyDoubleQuote] means that the trinary code \
contains the digits 2 and 0 sequentially (new empty string followed by \
increment last character of current string: impossible), \
\[OpenCurlyDoubleQuote]odd\[CloseCurlyDoubleQuote] means that an odd number \
of strings was generated, a situation that does not correspond to a ruleset, \
which must have an integer number of rules, an even number of strings (each \
search string has a corresponding replacement string).\
\>", "Text",
 CellChangeTimes->{{3.9410164031968327`*^9, 3.941016429417234*^9}, 
   3.941030892623329*^9, {3.941121056642269*^9, 3.941121082410229*^9}, {
   3.94112111291259*^9, 
   3.9411211264613056`*^9}},ExpressionUUID->"18a46a66-93ee-924d-befa-\
d959146c92b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Index\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",",
        " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Base-3\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], 
       ",", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Ok?\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",", 
       " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Ruleset\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}]}], 
      "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<1\>\"", ",", " ", "\"\<1\>\"", ",", " ", "\"\<odd\>\"", ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<2\>\"", ",", " ", "\"\<2\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\" \[Rule] \\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<3\>\"", ",", " ", "\"\<10\>\"", ",", " ", "\"\<odd\>\"", ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<4\>\"", ",", " ", "\"\<11\>\"", ",", " ", "\"\<odd\>\"", ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<5\>\"", ",", " ", "\"\<12\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\" \[Rule] \\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<6\>\"", ",", " ", "\"\<20\>\"", ",", " ", "\"\<...20...\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<7\>\"", ",", " ", "\"\<21\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<8\>\"", ",", " ", "\"\<22\>\"", ",", " ", "\"\<odd\>\"", ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<9\>\"", ",", " ", "\"\<100\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<10\>\"", ",", " ", "\"\<101\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", " ", "\"\<102\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"B\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<12\>\"", ",", " ", "\"\<110\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<13\>\"", ",", " ", "\"\<111\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<14\>\"", ",", " ", "\"\<112\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<15\>\"", ",", " ", "\"\<120\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<16\>\"", ",", " ", "\"\<121\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<17\>\"", ",", " ", "\"\<122\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<18\>\"", ",", " ", "\"\<200\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<19\>\"", ",", " ", "\"\<201\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<20\>\"", ",", " ", "\"\<202\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<21\>\"", ",", " ", "\"\<210\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"B\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<22\>\"", ",", " ", "\"\<211\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"AA\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<23\>\"", ",", " ", "\"\<212\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<24\>\"", ",", " ", "\"\<220\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<25\>\"", ",", " ", "\"\<221\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<26\>\"", ",", " ", "\"\<222\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"\\\", \\\"\\\"\[Rule]\\\"\\\"\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<27\>\"", ",", " ", "\"\<1000\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<28\>\"", ",", " ", "\"\<1001\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<29\>\"", ",", " ", "\"\<1002\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"C\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<30\>\"", ",", " ", "\"\<1010\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<31\>\"", ",", " ", "\"\<1011\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<32\>\"", ",", " ", "\"\<1012\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<33\>\"", ",", " ", "\"\<1020\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<34\>\"", ",", " ", "\"\<1021\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"B\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<35\>\"", ",", " ", "\"\<1022\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<36\>\"", ",", " ", "\"\<1100\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<37\>\"", ",", " ", "\"\<1101\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<38\>\"", ",", " ", "\"\<1102\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AB\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<39\>\"", ",", " ", "\"\<1110\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<40\>\"", ",", " ", "\"\<1111\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<41\>\"", ",", " ", "\"\<1112\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AAA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<42\>\"", ",", " ", "\"\<1120\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<43\>\"", ",", " ", "\"\<1121\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AA\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<44\>\"", ",", " ", "\"\<1122\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<45\>\"", ",", " ", "\"\<1200\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<46\>\"", ",", " ", "\"\<1201\>\"", ",", " ", "\"\<...20...\>\"", 
       ",", " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<47\>\"", ",", " ", "\"\<1202\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<48\>\"", ",", " ", "\"\<1210\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"B\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<49\>\"", ",", " ", "\"\<1211\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"AA\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<50\>\"", ",", " ", "\"\<1212\>\"", ",", " ", "\"\<odd\>\"", ",", 
       " ", "\"\<\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQXfDjscHv6LeOPP9+JYDosujbqSA64PWcHBB9xWFh
MYjWVLpdDqIXLJBoBtFrhSa0gOjUT9s6QPTZRTX9IPqPxuwZIPprUetKEP3x
2e6NIFp3pukmEN3LtX0niG4sU9wNor+85D0Aooufy5wH0RordC+D6A0sl26B
aBcxXc4nMW8dBSQ0uED0Gvan/CD6x+qDgiB6yorXoiD6RvZBKRDNU51WAlYX
x9ULos8YvJ0MFt+RuAVEt1Sc3gGit2QJHQPRHrcPXwDTTMZ3QHRKnvUDEB3Q
q/gMROsEeb8B0SzfNnwE0bEWarOfA2mL2u8LQTTDgTMrQbTBg3tbQLSVqspe
EB0xl0f8BZAuUBKsEY8F8q8Kg+mKEskWEF3y1rcdRHc4K3aDaA1Zhl4QDQCN
TNng
  "],
 CellLabel->"In[35]:=",ExpressionUUID->"93a08548-8e65-44c3-8ffb-008ad374f446"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Index\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Base-3\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Ok?\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Ruleset\"\>", "Subsection",
      StripOnInput->False]},
    {"\<\"1\"\>", "\<\"1\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"2\"\>", "\<\"2\"\>", "\<\"\"\>", "\<\"\\\"\\\" \[Rule] \
\\\"\\\"\"\>"},
    {"\<\"3\"\>", "\<\"10\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"4\"\>", "\<\"11\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"5\"\>", "\<\"12\"\>", "\<\"\"\>", "\<\"\\\"A\\\" \[Rule] \\\"\\\"\"\
\>"},
    {"\<\"6\"\>", "\<\"20\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"7\"\>", "\<\"21\"\>", "\<\"\"\>", \
"\<\"\\\"\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"8\"\>", "\<\"22\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"9\"\>", "\<\"100\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"10\"\>", "\<\"101\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"11\"\>", "\<\"102\"\>", "\<\"\"\>", "\<\"\\\"B\\\"\[Rule]\\\"\\\"\"\
\>"},
    {"\<\"12\"\>", "\<\"110\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"13\"\>", "\<\"111\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"14\"\>", "\<\"112\"\>", "\<\"\"\>", \
"\<\"\\\"AA\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"15\"\>", "\<\"120\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"16\"\>", "\<\"121\"\>", "\<\"\"\>", \
"\<\"\\\"A\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"17\"\>", "\<\"122\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"18\"\>", "\<\"200\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"19\"\>", "\<\"201\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"20\"\>", "\<\"202\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"21\"\>", "\<\"210\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"B\\\"\"\
\>"},
    {"\<\"22\"\>", "\<\"211\"\>", "\<\"\"\>", \
"\<\"\\\"\\\"\[Rule]\\\"AA\\\"\"\>"},
    {"\<\"23\"\>", "\<\"212\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"24\"\>", "\<\"220\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"25\"\>", "\<\"221\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"26\"\>", "\<\"222\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"\\\", \
\\\"\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"27\"\>", "\<\"1000\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"28\"\>", "\<\"1001\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"29\"\>", "\<\"1002\"\>", "\<\"\"\>", \
"\<\"\\\"C\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"30\"\>", "\<\"1010\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"31\"\>", "\<\"1011\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"32\"\>", "\<\"1012\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"33\"\>", "\<\"1020\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"34\"\>", "\<\"1021\"\>", "\<\"\"\>", "\<\"\\\"B\\\"\[Rule]\\\"A\\\"\
\"\>"},
    {"\<\"35\"\>", "\<\"1022\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"36\"\>", "\<\"1100\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"37\"\>", "\<\"1101\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"38\"\>", "\<\"1102\"\>", "\<\"\"\>", "\<\"\\\"AB\\\"\[Rule]\\\"\\\"\
\"\>"},
    {"\<\"39\"\>", "\<\"1110\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"40\"\>", "\<\"1111\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"41\"\>", "\<\"1112\"\>", "\<\"\"\>", \
"\<\"\\\"AAA\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"42\"\>", "\<\"1120\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"43\"\>", "\<\"1121\"\>", "\<\"\"\>", \
"\<\"\\\"AA\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"44\"\>", "\<\"1122\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"45\"\>", "\<\"1200\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"46\"\>", "\<\"1201\"\>", "\<\"...20...\"\>", "\<\"\"\>"},
    {"\<\"47\"\>", "\<\"1202\"\>", "\<\"odd\"\>", "\<\"\"\>"},
    {"\<\"48\"\>", "\<\"1210\"\>", "\<\"\"\>", "\<\"\\\"A\\\"\[Rule]\\\"B\\\"\
\"\>"},
    {"\<\"49\"\>", "\<\"1211\"\>", "\<\"\"\>", \
"\<\"\\\"A\\\"\[Rule]\\\"AA\\\"\"\>"},
    {"\<\"50\"\>", "\<\"1212\"\>", "\<\"odd\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{Medium, FontFamily -> "Times"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9411222441051254`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"6ab6de43-bced-8840-aa49-97191dac0319"]
}, {2}]],

Cell["\<\
Note that the presence of \[OpenCurlyDoubleQuote]\[Ellipsis]20\[Ellipsis]\
\[CloseCurlyDoubleQuote] anywhere in the trinary operation code means we can \
immediately increment the 0 to a 1, and zero out anything that follows: \
\[OpenCurlyDoubleQuote]\[Ellipsis] 20 \[Ellipsis]\[CloseCurlyDoubleQuote] => \
\[OpenCurlyDoubleQuote]\[Ellipsis] 21 \
000\[Ellipsis]0\[CloseCurlyDoubleQuote], rather than just incrementing the \
final digit of the code.  This is a long-jump.\
\>", "Text",
 CellChangeTimes->{{3.9410308226746054`*^9, 3.941030837937534*^9}, {
  3.941121058053767*^9, 3.941121082464978*^9}, {3.941121114310884*^9, 
  3.941121128036761*^9}},ExpressionUUID->"14eeba54-d91b-4e19-b37a-\
d60410ce7207"],

Cell["In the table below, all invalid cases have been omitted:", "Text",
 CellChangeTimes->{{3.9410308226746054`*^9, 3.9410308371817646`*^9}, {
  3.941121058092054*^9, 3.941121082474898*^9}, {3.9411211143346024`*^9, 
  3.94112112804928*^9}},ExpressionUUID->"613db6ca-68fe-49af-9255-\
2e7d68c61648"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Index\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",",
        " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Base-3\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], 
       ",", " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Ok?\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}], ",", 
       " ", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Ruleset\>\"", ",", " ", "\"\<Subsection\>\""}], "]"}]}], 
      "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<2\>\"", ",", " ", "\"\<2\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\" \[Rule] \\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<5\>\"", ",", " ", "\"\<12\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\" \[Rule] \\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<7\>\"", ",", " ", "\"\<21\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", " ", "\"\<102\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"B\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<14\>\"", ",", " ", "\"\<112\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<16\>\"", ",", " ", "\"\<121\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<21\>\"", ",", " ", "\"\<210\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"B\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<22\>\"", ",", " ", "\"\<211\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"AA\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<26\>\"", ",", " ", "\"\<222\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"\\\", \\\"\\\"\[Rule]\\\"\\\"\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<29\>\"", ",", " ", "\"\<1002\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"C\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<32\>\"", ",", " ", "\"\<1012\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"BA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<34\>\"", ",", " ", "\"\<1021\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"B\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<38\>\"", ",", " ", "\"\<1102\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AB\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<41\>\"", ",", " ", "\"\<1112\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AAA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<43\>\"", ",", " ", "\"\<1121\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"AA\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<48\>\"", ",", " ", "\"\<1210\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"B\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<49\>\"", ",", " ", "\"\<1211\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"AA\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<53\>\"", ",", " ", "\"\<1222\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"A\\\"\[Rule]\\\"\\\", \\\"\\\"\[Rule]\\\"\\\"\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<63\>\"", ",", " ", "\"\<2100\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"C\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<64\>\"", ",", " ", "\"\<2101\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"BA\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<66\>\"", ",", " ", "\"\<2110\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"AB\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<67\>\"", ",", " ", "\"\<2111\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"AAA\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<71\>\"", ",", " ", "\"\<2122\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"A\\\", \\\"\\\"\[Rule]\\\"\\\"\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<77\>\"", ",", " ", "\"\<2212\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"\\\", \\\"A\\\"\[Rule]\\\"\\\"\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<79\>\"", ",", " ", "\"\<2221\>\"", ",", " ", "\"\<\>\"", ",", " ", 
       "\"\<\\\"\\\"\[Rule]\\\"\\\", \\\"\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<83\>\"", ",", " ", "\"\<10002\>\"", ",", " ", "\"\<\>\"", ",", 
       " ", "\"\<\\\"D\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<86\>\"", ",", " ", "\"\<10012\>\"", ",", " ", "\"\<\>\"", ",", 
       " ", "\"\<\\\"CA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<88\>\"", ",", " ", "\"\<10021\>\"", ",", " ", "\"\<\>\"", ",", 
       " ", "\"\<\\\"C\\\"\[Rule]\\\"A\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<92\>\"", ",", " ", "\"\<10102\>\"", ",", " ", "\"\<\>\"", ",", 
       " ", "\"\<\\\"BB\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<95\>\"", ",", " ", "\"\<10112\>\"", ",", " ", "\"\<\>\"", ",", 
       " ", "\"\<\\\"BAA\\\"\[Rule]\\\"\\\"\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<97\>\"", ",", " ", "\"\<10121\>\"", ",", " ", "\"\<\>\"", ",", 
       " ", "\"\<\\\"BA\\\"\[Rule]\\\"A\\\"\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Medium", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk8oQwEAx/HXWi1rwgrLkAk9ZaxJLS5bHMRl7aRmi2VLiGVrlDnIROll
ZQcatSm1ZTRaTEttWS4mwkEmTdhodpj8WQj7vcOvT/36CjQjCi2DIAh+dlCf
uRd9K1Myzu9XDzQpo1ooT64MwUup0wBrK6Nj0OHgTcNNrtUCta+7c/BkzbwA
f0j7EnwfnXHDdDywDYXLTTuQYu/twymTIADfnnOD0JAoPYWkS3gBvczza9hW
JMx56E7J8nkkG3pYj3kwsxEqgDZXshBeDYZKIGdCZ6Q7NZuCEVFqkf79vT5o
GT/2Q98A9wi2Rw/PaBmNN7BvuCUG5ZQgDusUnS+Q+eFNQ5Wkxp7IKpn8dEIi
GHFDUezWB5urqw5g1yqn+CmrlOUph+uaPxKKxeEGuKVQ90OjjmcuVqVkVm4Z
bVjVaoEVXPks1N91zENbPZ+C/3rT6k4=
  "],
 CellLabel->"In[36]:=",ExpressionUUID->"bc294630-42f0-45b8-9ec8-4998deb7ba3e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Index\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Base-3\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Ok?\"\>", "Subsection",
      StripOnInput->False], 
     StyleBox["\<\"Ruleset\"\>", "Subsection",
      StripOnInput->False]},
    {"\<\"2\"\>", "\<\"2\"\>", "\<\"\"\>", "\<\"\\\"\\\" \[Rule] \
\\\"\\\"\"\>"},
    {"\<\"5\"\>", "\<\"12\"\>", "\<\"\"\>", "\<\"\\\"A\\\" \[Rule] \\\"\\\"\"\
\>"},
    {"\<\"7\"\>", "\<\"21\"\>", "\<\"\"\>", \
"\<\"\\\"\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"11\"\>", "\<\"102\"\>", "\<\"\"\>", "\<\"\\\"B\\\"\[Rule]\\\"\\\"\"\
\>"},
    {"\<\"14\"\>", "\<\"112\"\>", "\<\"\"\>", \
"\<\"\\\"AA\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"16\"\>", "\<\"121\"\>", "\<\"\"\>", \
"\<\"\\\"A\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"21\"\>", "\<\"210\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"B\\\"\"\
\>"},
    {"\<\"22\"\>", "\<\"211\"\>", "\<\"\"\>", \
"\<\"\\\"\\\"\[Rule]\\\"AA\\\"\"\>"},
    {"\<\"26\"\>", "\<\"222\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"\\\", \
\\\"\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"29\"\>", "\<\"1002\"\>", "\<\"\"\>", \
"\<\"\\\"C\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"32\"\>", "\<\"1012\"\>", "\<\"\"\>", "\<\"\\\"BA\\\"\[Rule]\\\"\\\"\
\"\>"},
    {"\<\"34\"\>", "\<\"1021\"\>", "\<\"\"\>", "\<\"\\\"B\\\"\[Rule]\\\"A\\\"\
\"\>"},
    {"\<\"38\"\>", "\<\"1102\"\>", "\<\"\"\>", "\<\"\\\"AB\\\"\[Rule]\\\"\\\"\
\"\>"},
    {"\<\"41\"\>", "\<\"1112\"\>", "\<\"\"\>", \
"\<\"\\\"AAA\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"43\"\>", "\<\"1121\"\>", "\<\"\"\>", \
"\<\"\\\"AA\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"48\"\>", "\<\"1210\"\>", "\<\"\"\>", "\<\"\\\"A\\\"\[Rule]\\\"B\\\"\
\"\>"},
    {"\<\"49\"\>", "\<\"1211\"\>", "\<\"\"\>", \
"\<\"\\\"A\\\"\[Rule]\\\"AA\\\"\"\>"},
    {"\<\"53\"\>", "\<\"1222\"\>", "\<\"\"\>", "\<\"\\\"A\\\"\[Rule]\\\"\\\", \
\\\"\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"63\"\>", "\<\"2100\"\>", "\<\"\"\>", \
"\<\"\\\"\\\"\[Rule]\\\"C\\\"\"\>"},
    {"\<\"64\"\>", "\<\"2101\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"BA\\\"\
\"\>"},
    {"\<\"66\"\>", "\<\"2110\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"AB\\\"\
\"\>"},
    {"\<\"67\"\>", "\<\"2111\"\>", "\<\"\"\>", \
"\<\"\\\"\\\"\[Rule]\\\"AAA\\\"\"\>"},
    {"\<\"71\"\>", "\<\"2122\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"A\\\", \
\\\"\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"77\"\>", "\<\"2212\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"\\\", \
\\\"A\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"79\"\>", "\<\"2221\"\>", "\<\"\"\>", "\<\"\\\"\\\"\[Rule]\\\"\\\", \
\\\"\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"83\"\>", "\<\"10002\"\>", "\<\"\"\>", "\<\"\\\"D\\\"\[Rule]\\\"\\\"\
\"\>"},
    {"\<\"86\"\>", "\<\"10012\"\>", "\<\"\"\>", \
"\<\"\\\"CA\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"88\"\>", "\<\"10021\"\>", "\<\"\"\>", \
"\<\"\\\"C\\\"\[Rule]\\\"A\\\"\"\>"},
    {"\<\"92\"\>", "\<\"10102\"\>", "\<\"\"\>", \
"\<\"\\\"BB\\\"\[Rule]\\\"\\\"\"\>"},
    {"\<\"95\"\>", "\<\"10112\"\>", "\<\"\"\>", "\<\"\\\"BAA\\\"\[Rule]\\\"\\\
\"\"\>"},
    {"\<\"97\"\>", "\<\"10121\"\>", "\<\"\"\>", "\<\"\\\"BA\\\"\[Rule]\\\"A\\\
\"\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{Medium, FontFamily -> "Times"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.941122279092119*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c5e25d90-cab9-3a46-9d29-f4a70f9896b4"]
}, {2}]],

Cell["\<\
Next job:  Identify what long-jumps can be triggered by the various ruleset \
tests, and find the simplest way to implement them.  (Directly operating on \
the trinary code?)\
\>", "Text",
 CellChangeTimes->{
  3.941030877742666*^9, {3.941121058865455*^9, 3.9411210825137615`*^9}, {
   3.941121115013588*^9, 
   3.941121128875412*^9}},ExpressionUUID->"383e5917-5865-4829-b1a4-\
4ff27c9864fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Side-trip: Enumerations of Turing Machines:",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.938607774823105*^9, 3.9386078234522743`*^9}, {
  3.9410327970441236`*^9, 3.941032800918605*^9}, {3.941042722160066*^9, 
  3.941042788783539*^9}, {3.941043029543216*^9, 
  3.9410430587997665`*^9}},ExpressionUUID->"1c2ad77e-2c23-2441-9f79-\
ef3742322d47"],

Cell["\<\
https://demonstrations.wolfram.com/\
SmallTuringMachinesWithHaltingStateEnumerationAndRunningOnAB/\
\>", "Text",
 CellChangeTimes->{{3.941043068969658*^9, 
  3.941043072078209*^9}},ExpressionUUID->"b8b7cfb6-b6d9-d64b-94ab-\
204d3ca0c88e"],

Cell["\<\
https://demonstrations.wolfram.com/SimulationOfATuringMachine/\
\>", "Text",
 CellChangeTimes->{{3.941043068969658*^9, 3.941043070753481*^9}, 
   3.941043179481611*^9},ExpressionUUID->"3a401885-cf69-314e-9cda-\
a0c3a09928bf"],

Cell["\<\
FAQ Sessie Intro, 2025.2.12, Kenneth Caviness and Colton Edelbach\
\>", "Affiliation",
 CellChangeTimes->{{3.939995416333565*^9, 3.9399955199292727`*^9}, {
   3.9399960732544947`*^9, 3.939996081692621*^9}, {3.94042617528881*^9, 
   3.940426175923518*^9}, 3.940534869007164*^9, {3.941206015962395*^9, 
   3.94120601719134*^9}, {3.948371750830275*^9, 3.9483717604797997`*^9}},
 TextAlignment->Center,ExpressionUUID->"e20cda65-c6ee-394f-a0d1-49ca9af980da"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 741.75},
WindowMargins->{{1434, Automatic}, {Automatic, -6}},
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3ffc0c55-281c-ab46-b941-549132a817c7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "DefaultContent"->{
  Cell[45031, 1042, 1799, 49, 35, "Input",ExpressionUUID->"e72a88cf-808f-9342-83ea-cfe96a74984f",
   CellTags->"DefaultContent",
   CellID->298664010],
  Cell[46833, 1093, 28797, 771, 148, "Output",ExpressionUUID->"f610ec1d-f9b1-e145-87ba-d73627abe043",
   CellTags->"DefaultContent"],
  Cell[82905, 2076, 2256, 56, 35, "Input",ExpressionUUID->"73dd0810-f6e1-594d-8466-547b5e54b8cf",
   CellTags->"DefaultContent",
   CellID->80188292],
  Cell[85164, 2134, 28795, 771, 148, "Output",ExpressionUUID->"cb678549-d43a-1448-bd1e-1a81c4648487",
   CellTags->"DefaultContent"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"DefaultContent", 924248, 17292}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 312, 5, 98, "Title",ExpressionUUID->"a3854beb-fd0e-4df7-aa0c-bab197b93b32"],
Cell[895, 29, 731, 15, 19, "Input",ExpressionUUID->"cef5c5d2-55d4-47d0-adce-42b0f5efa22a",
 CellOpen->False,
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1651, 48, 298, 5, 54, "Subsection",ExpressionUUID->"3ce7e1f7-6f93-6040-99a2-c39c5c736db3"],
Cell[1952, 55, 1571, 23, 81, "Text",ExpressionUUID->"5e0cba32-b56e-3f40-bdac-a8c1cc8451b6"],
Cell[3526, 80, 1511, 22, 104, "Text",ExpressionUUID->"dc5a2f52-4eed-2147-8c67-cdc19e546565"],
Cell[5040, 104, 932, 15, 35, "Text",ExpressionUUID->"13a43344-3a0c-704f-8fe5-efac0963dc80"],
Cell[5975, 121, 622, 14, 35, "Text",ExpressionUUID->"97842065-2369-9d48-8ba5-88160b6ce70f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6634, 140, 268, 5, 54, "Subsection",ExpressionUUID->"cb6b8ab5-2fbc-4aae-9dfe-b2a1feab4c8e"],
Cell[CellGroupData[{
Cell[6927, 149, 332, 5, 45, "Subsubsection",ExpressionUUID->"f38e27cb-5925-b842-8acd-9e533e6e5916"],
Cell[7262, 156, 969, 15, 35, "Text",ExpressionUUID->"3a45cc0f-a0f0-ac4b-b476-2248885c4880"],
Cell[CellGroupData[{
Cell[8256, 175, 7586, 188, 241, "Input",ExpressionUUID->"4a4802f5-9878-cc4a-8ec1-55061de92cb1"],
Cell[15845, 365, 9432, 221, 269, "Output",ExpressionUUID->"6630db1e-5b01-5346-9ec6-6d1500e82705",
 CellID->817400576]
}, {2}]],
Cell[25289, 589, 1723, 26, 104, "Text",ExpressionUUID->"6caa9b1f-13a6-e94b-b145-1237fb772543"],
Cell[27015, 617, 356, 8, 81, "Text",ExpressionUUID->"5a01bd67-3f1a-7c44-a114-e24bd249aa08"],
Cell[27374, 627, 993, 16, 81, "Text",ExpressionUUID->"62c65762-4c25-2b48-9cc2-1c46b04b3f5c"],
Cell[28370, 645, 294, 5, 35, "Text",ExpressionUUID->"ce2905a8-d70b-fe44-b9b4-0e118b863595"],
Cell[28667, 652, 736, 16, 53, "ItemNumbered",ExpressionUUID->"c0a8a535-1105-4541-b946-16a3fd27b0cd"],
Cell[29406, 670, 1886, 50, 74, "ItemNumbered",ExpressionUUID->"a5bf9784-479a-bc48-8958-7f17a0dcfe02"],
Cell[31295, 722, 2228, 61, 95, "ItemNumbered",ExpressionUUID->"c879b71a-3bbc-174f-b779-3eefa7a3ee19"]
}, Open  ]],
Cell[33538, 786, 308, 5, 45, "Subsubsection",ExpressionUUID->"25c005ef-f198-4041-8af4-bb794df09fe6"],
Cell[CellGroupData[{
Cell[33871, 795, 232, 4, 37, "Subsubsection",ExpressionUUID->"91d43454-dfdc-4a46-8c74-dff82a8138af"],
Cell[34106, 801, 1285, 22, 81, "Text",ExpressionUUID->"134c5aa5-045c-f94b-af47-cf147ffd0cfa"],
Cell[CellGroupData[{
Cell[35416, 827, 883, 20, 64, "Input",ExpressionUUID->"393543dd-762e-c645-81a8-cd096efbfd86",
 InitializationCell->True],
Cell[36302, 849, 824, 13, 32, "Output",ExpressionUUID->"638dcca2-861f-c74a-b031-d21243ecbc0f"]
}, Open  ]],
Cell[37141, 865, 1088, 17, 81, "Text",ExpressionUUID->"ad59e40f-dfaa-d742-b995-ad74956ff43c"],
Cell[38232, 884, 925, 23, 48, "Input",ExpressionUUID->"944f28d0-9807-b94d-a5d9-d5cb8730b9e3",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[39182, 911, 442, 11, 31, "Input",ExpressionUUID->"e3034b0b-be20-494d-82b7-d1ad58666c8f"],
Cell[39627, 924, 357, 6, 48, "Output",ExpressionUUID->"67e23a94-b4a4-ac43-875f-bbf3afa72f69",
 CellID->259922360]
}, Open  ]],
Cell[CellGroupData[{
Cell[40021, 935, 241, 4, 28, "Input",ExpressionUUID->"7a38b2f0-0229-4248-b06b-b1cb5a400d41"],
Cell[40265, 941, 727, 14, 48, "Output",ExpressionUUID->"3603a768-0356-c546-843a-d7bfce563a33"]
}, Open  ]],
Cell[41007, 958, 1398, 21, 81, "Text",ExpressionUUID->"0c2f3d84-ad90-f04e-8b4d-50a3161ada70"],
Cell[CellGroupData[{
Cell[42430, 983, 248, 5, 28, "Input",ExpressionUUID->"3a9d8b64-b285-0344-b0ac-fb0d627148da"],
Cell[42681, 990, 1128, 22, 48, "Output",ExpressionUUID->"ac68ea9a-2fd9-4544-b883-745e4f50bf80",
 CellID->572674672]
}, Open  ]],
Cell[43824, 1015, 901, 14, 58, "Text",ExpressionUUID->"3acb980a-89b8-7c48-b628-9486e8635df3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44762, 1034, 244, 4, 45, "Subsubsection",ExpressionUUID->"45bf0bf7-6b2e-4c34-8478-9375e22904b6"],
Cell[CellGroupData[{
Cell[45031, 1042, 1799, 49, 35, "Input",ExpressionUUID->"e72a88cf-808f-9342-83ea-cfe96a74984f",
 CellTags->"DefaultContent",
 CellID->298664010],
Cell[46833, 1093, 28797, 771, 148, "Output",ExpressionUUID->"f610ec1d-f9b1-e145-87ba-d73627abe043",
 CellTags->"DefaultContent"]
}, Open  ]],
Cell[75645, 1867, 189, 5, 35, "Text",ExpressionUUID->"591d049d-7110-c042-bc01-4d5700cd3a0d"],
Cell[75837, 1874, 177, 3, 35, "Text",ExpressionUUID->"5ee0dc5a-779b-d44f-8bf6-e67d83093c22"],
Cell[76017, 1879, 1134, 31, 38, "Text",ExpressionUUID->"28cacb00-e6c7-a243-a597-01fd70c49e02"],
Cell[77154, 1912, 302, 6, 35, "Text",ExpressionUUID->"9a805b54-18af-d848-8b6c-e1093c99593a"],
Cell[77459, 1920, 1215, 34, 83, "Input",ExpressionUUID->"54a2abdf-0c8e-fa44-8e68-77aee393c2a9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[78699, 1958, 232, 6, 28, "Input",ExpressionUUID->"0bba6102-7087-ca4e-8240-d938c4f8feff"],
Cell[78934, 1966, 634, 11, 32, "Output",ExpressionUUID->"80413c14-28af-c543-b097-02c09b64aeea",
 CellID->401893439]
}, Open  ]],
Cell[79583, 1980, 588, 15, 35, "Text",ExpressionUUID->"0dbe738e-1924-7348-8fd6-94c9d7601c31"],
Cell[80174, 1997, 166, 3, 28, "Input",ExpressionUUID->"2437085a-5702-1e4b-bf60-13a12c1ef170"],
Cell[80343, 2002, 394, 8, 35, "Text",ExpressionUUID->"e70fa728-f328-5e43-b252-eff23700f693"],
Cell[80740, 2012, 500, 11, 44, "Input",ExpressionUUID->"f6d3debc-6a42-344e-b011-a3c92576ff60",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81265, 2027, 257, 6, 28, "Input",ExpressionUUID->"f286e00a-4c8b-6d43-b181-a541a52c5377"],
Cell[81525, 2035, 1037, 27, 48, "Output",ExpressionUUID->"f521170a-5521-1e4c-aeec-bbd66ea7ef9e",
 CellID->247142538]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82611, 2068, 269, 4, 45, "Subsubsection",ExpressionUUID->"1af59ff6-a3e2-7b4d-aa12-394e480bb6b2"],
Cell[CellGroupData[{
Cell[82905, 2076, 2256, 56, 35, "Input",ExpressionUUID->"73dd0810-f6e1-594d-8466-547b5e54b8cf",
 CellTags->"DefaultContent",
 CellID->80188292],
Cell[85164, 2134, 28795, 771, 148, "Output",ExpressionUUID->"cb678549-d43a-1448-bd1e-1a81c4648487",
 CellTags->"DefaultContent"]
}, Open  ]],
Cell[113974, 2908, 272, 6, 35, "Text",ExpressionUUID->"62be7116-2bb1-b844-ac1b-c1ad5f507829"],
Cell[114249, 2916, 216, 3, 35, "Text",ExpressionUUID->"3a37ccd6-2ae4-bc4d-8af7-3f9edbddfb1b"],
Cell[114468, 2921, 195, 5, 35, "Text",ExpressionUUID->"afd5a660-b9fc-9847-bcb5-29dd72a02e12"],
Cell[114666, 2928, 188, 4, 35, "Text",ExpressionUUID->"74d07014-3360-c940-94ae-75ae132b6fab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114903, 2938, 416, 7, 54, "Subsection",ExpressionUUID->"1050f35f-2445-2a4d-af18-9c42fe01d80a"],
Cell[115322, 2947, 343, 7, 35, "Text",ExpressionUUID->"bad40eb2-da6c-4340-9556-9426d9caba39"],
Cell[115668, 2956, 210, 6, 35, "Text",ExpressionUUID->"31047142-3c29-c04f-b8ea-34f87bd8fa1f"],
Cell[115881, 2964, 266, 6, 35, "Text",ExpressionUUID->"63ea8fbd-991e-c244-8fdb-f9732fd1e6bd"],
Cell[116150, 2972, 224, 5, 35, "Text",ExpressionUUID->"c34bf7e1-3473-1b4a-a61d-76640e5e7e1d"],
Cell[116377, 2979, 222, 5, 35, "Text",ExpressionUUID->"cda3cc39-5489-5e4c-966e-b77da8e6d6fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116636, 2989, 268, 5, 54, "Subsection",ExpressionUUID->"8bc3b62f-debb-a64b-bea5-4acc4d0ba661"],
Cell[116907, 2996, 426, 8, 35, "Text",ExpressionUUID->"4b19bce1-48a5-634e-83ae-9faa8e4fe8cf"],
Cell[117336, 3006, 262, 6, 35, "Text",ExpressionUUID->"6b18be3d-89cd-7440-a8ac-87c39abd6071"],
Cell[117601, 3014, 14835, 305, 576, "Input",ExpressionUUID->"8a9a74aa-fabf-af4d-8d26-864c3421af3f",
 CellID->270262828],
Cell[132439, 3321, 410, 8, 35, "Text",ExpressionUUID->"a1f33734-4a75-0c46-91b6-67a2f94bdbbf"],
Cell[132852, 3331, 266, 5, 35, "Text",ExpressionUUID->"91d0d255-0ddc-7f4f-b32c-66ceaa54b123"],
Cell[CellGroupData[{
Cell[133143, 3340, 21756, 550, 1515, "Input",ExpressionUUID->"f34365a8-c098-ad40-bfb2-7101b1d37f42",
 InitializationCell->True,
 CellID->13156003],
Cell[154902, 3892, 9209, 197, 533, "Output",ExpressionUUID->"40d2267a-98a7-854b-b2ef-c88859c813a0"]
}, Open  ]],
Cell[164126, 4092, 1283, 22, 81, "Text",ExpressionUUID->"668199dd-da18-49b7-9370-974d9d8de5d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165446, 4119, 218, 4, 54, "Subsection",ExpressionUUID->"7de7bb53-7b63-9c4c-a567-c9c502fd73fa"],
Cell[165667, 4125, 299, 4, 35, "Text",ExpressionUUID->"c65f00c2-5dcc-f447-b593-cb3cc37b746d"],
Cell[165969, 4131, 622, 14, 35, "Text",ExpressionUUID->"ce50beaa-1a02-2141-ab42-1fa47836a33b"],
Cell[166594, 4147, 1069, 17, 81, "Text",ExpressionUUID->"0512e0fc-4263-c64f-8872-666cdd0bfb0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167700, 4169, 313, 4, 54, "Subsection",ExpressionUUID->"201a5103-bafb-6747-8d6b-4b5bdcab6842"],
Cell[CellGroupData[{
Cell[168038, 4177, 317, 5, 45, "Subsubsection",ExpressionUUID->"c4b0e155-fcfc-496e-b257-147c2d44aac8"],
Cell[168358, 4184, 1722, 28, 104, "Text",ExpressionUUID->"5a4753e1-a863-3742-b5ba-7c9f7a9ae2f7"],
Cell[170083, 4214, 620, 11, 35, "Text",ExpressionUUID->"e70d71b1-d122-024c-8d8d-ec950e7ca058"],
Cell[170706, 4227, 656093, 10763, 988, "Text",ExpressionUUID->"672bc828-4489-474e-bcdc-83791c81dd7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826836, 14995, 362, 6, 45, "Subsubsection",ExpressionUUID->"e3599bf7-351f-4b90-b69e-f4dac992a86e"],
Cell[827201, 15003, 1487, 27, 104, "Text",ExpressionUUID->"619f27b9-6f9f-d44e-8ea5-a6659e93b944"],
Cell[828691, 15032, 1196, 19, 81, "Text",ExpressionUUID->"07762384-11f7-1f43-bbac-999d3e5ffc20"],
Cell[CellGroupData[{
Cell[829912, 15055, 1258, 29, 28, "Input",ExpressionUUID->"0521ee7a-7701-bf48-b428-782099279bb5"],
Cell[831173, 15086, 19519, 535, 686, "Output",ExpressionUUID->"13a56fac-886c-3044-99d8-60b9256daa67"]
}, Open  ]],
Cell[850707, 15624, 623, 11, 58, "Text",ExpressionUUID->"d19f4bc1-edf0-5840-89e3-700ec3fc85f8"],
Cell[851333, 15637, 1384, 21, 58, "Text",ExpressionUUID->"a5998614-67a9-694f-891c-733ead3577d1"],
Cell[852720, 15660, 1601, 24, 81, "Text",ExpressionUUID->"53a68df3-21ea-2641-872e-15508eda4e4a"],
Cell[854324, 15686, 662, 11, 58, "Text",ExpressionUUID->"1a933d5e-6161-b443-9f40-e71b9baf0e4a"],
Cell[854989, 15699, 1236, 27, 81, "Text",ExpressionUUID->"32c8b98f-7e92-af4d-b450-749c65828672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856262, 15731, 360, 6, 45, "Subsubsection",ExpressionUUID->"ebcaf03d-5a34-4b3a-8d41-a90cf2e51ddf"],
Cell[856625, 15739, 428, 8, 35, "Text",ExpressionUUID->"04d28a3d-b184-b04a-8056-73e4187bdbdc"],
Cell[857056, 15749, 385, 8, 35, "Text",ExpressionUUID->"7e16824d-5a5c-964f-9267-e1ce4977a950"],
Cell[857444, 15759, 225, 4, 35, "Text",ExpressionUUID->"069e38a4-31ee-469e-acb1-cc8446d8c251"],
Cell[857672, 15765, 239, 6, 35, "Text",ExpressionUUID->"b4d7ca10-be3c-451e-a523-fa84b0754c2e"],
Cell[857914, 15773, 238, 4, 35, "Text",ExpressionUUID->"cf984beb-48f2-4d25-8c07-fdc93ea832fb"],
Cell[858155, 15779, 705, 12, 35, "Text",ExpressionUUID->"491c3464-2b71-ed49-822c-d027685e63f2"],
Cell[858863, 15793, 215, 4, 35, "Text",ExpressionUUID->"36bca9ff-5f07-004a-baf3-d3e6d07bc599"],
Cell[CellGroupData[{
Cell[859103, 15801, 6373, 146, 352, "Input",ExpressionUUID->"481c6606-e13d-f545-97c8-91e1529dc7e2"],
Cell[865479, 15949, 3969, 75, 205, "Output",ExpressionUUID->"5caae0d8-237f-4040-8258-c4a092a58e38"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[869509, 16031, 254, 5, 54, "Subsection",ExpressionUUID->"5184138c-136d-b44c-9fdc-2b02344918df"],
Cell[869766, 16038, 1001, 19, 81, "Text",ExpressionUUID->"c0a1ef9d-4aef-a042-b109-88f487fb68b2"],
Cell[CellGroupData[{
Cell[870792, 16061, 430, 7, 45, "Subsubsection",ExpressionUUID->"638331d6-c528-ef44-8c03-9777dddf3b15"],
Cell[CellGroupData[{
Cell[871247, 16072, 4098, 83, 600, "Input",ExpressionUUID->"8d5db6a0-8633-4d47-9b3b-9c6d76bb775e"],
Cell[875348, 16157, 2417, 45, 244, "Output",ExpressionUUID->"df85a8cc-f173-de4b-9372-4b3fdaf9f901"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[877811, 16208, 484, 8, 45, "Subsubsection",ExpressionUUID->"37bca606-7753-b644-9a86-2526d07bc11d"],
Cell[CellGroupData[{
Cell[878320, 16220, 2087, 50, 219, "Input",ExpressionUUID->"eccbb270-6813-104a-a5d4-93f078f93939"],
Cell[880410, 16272, 1151, 26, 95, "Output",ExpressionUUID->"cc4ac78d-a243-594f-9305-c8e03a400854"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[881607, 16304, 460, 7, 45, "Subsubsection",ExpressionUUID->"4274938a-b75d-5f41-a598-37ae87514d57"],
Cell[CellGroupData[{
Cell[882092, 16315, 2242, 48, 86, "Input",ExpressionUUID->"e4c43911-5f63-a648-8323-f410d176a95e"],
Cell[884337, 16365, 863, 22, 72, "Output",ExpressionUUID->"b46eb30e-4bde-d74e-9f0d-2a648eb45ddb"]
}, {2}]],
Cell[885212, 16390, 589, 10, 58, "Text",ExpressionUUID->"11f61f1e-6a53-3240-b81e-eed300dee629"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[885850, 16406, 363, 5, 54, "Subsection",ExpressionUUID->"ab0df75f-fd2e-a340-8cef-afbded482eee"],
Cell[886216, 16413, 517, 8, 58, "Text",ExpressionUUID->"85d8cd1a-3f5a-234c-876f-55206609e4f9"],
Cell[886736, 16423, 448, 8, 35, "Text",ExpressionUUID->"dc3cedda-201b-8a4c-b4e2-e73005284dfc"],
Cell[CellGroupData[{
Cell[887209, 16435, 1663, 39, 105, "Input",ExpressionUUID->"7817992a-c963-f44d-b678-aecd2814e366"],
Cell[888875, 16476, 1121, 27, 88, "Output",ExpressionUUID->"01df217d-78c7-4b97-b414-e4995248a1e3"]
}, {2}]],
Cell[890008, 16506, 171, 3, 35, "Text",ExpressionUUID->"527c6318-2139-c04d-a8a5-48fdbcbf5ca1"],
Cell[890182, 16511, 614, 11, 58, "Text",ExpressionUUID->"33cec26e-0227-2148-b786-afec9d77fea7"],
Cell[890799, 16524, 641, 11, 58, "Text",ExpressionUUID->"93025586-baeb-8d47-a786-3d30ad0f8fe0"],
Cell[891443, 16537, 680, 11, 58, "Text",ExpressionUUID->"2779f732-dd1b-ef4b-a696-0b46081d4a1b"],
Cell[892126, 16550, 685, 11, 58, "Text",ExpressionUUID->"ba8e6a9b-cea7-644b-b406-6e6f799211ad"],
Cell[892814, 16563, 1080, 17, 81, "Text",ExpressionUUID->"18a46a66-93ee-924d-befa-d959146c92b5"],
Cell[CellGroupData[{
Cell[893919, 16584, 10996, 255, 1056, "Input",ExpressionUUID->"93a08548-8e65-44c3-8ffb-008ad374f446"],
Cell[904918, 16841, 4353, 86, 1194, "Output",ExpressionUUID->"6ab6de43-bced-8840-aa49-97191dac0319"]
}, {2}]],
Cell[909283, 16930, 717, 12, 58, "Text",ExpressionUUID->"14eeba54-d91b-4e19-b37a-d60410ce7207"],
Cell[910003, 16944, 298, 4, 35, "Text",ExpressionUUID->"613db6ca-68fe-49af-9255-2e7d68c61648"],
Cell[CellGroupData[{
Cell[910326, 16952, 8138, 194, 657, "Input",ExpressionUUID->"bc294630-42f0-45b8-9ec8-4998deb7ba3e"],
Cell[918467, 17148, 3601, 82, 759, "Output",ExpressionUUID->"c5e25d90-cab9-3a46-9d29-f4a70f9896b4"]
}, {2}]],
Cell[922080, 17233, 402, 9, 58, "Text",ExpressionUUID->"383e5917-5865-4829-b1a4-4ff27c9864fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922519, 17247, 382, 6, 54, "Subsection",ExpressionUUID->"1c2ad77e-2c23-2441-9f79-ef3742322d47"],
Cell[922904, 17255, 248, 6, 58, "Text",ExpressionUUID->"b8b7cfb6-b6d9-d64b-94ab-204d3ca0c88e"],
Cell[923155, 17263, 235, 5, 35, "Text",ExpressionUUID->"3a401885-cf69-314e-9cda-a0c3a09928bf"],
Cell[923393, 17270, 463, 7, 31, "Affiliation",ExpressionUUID->"e20cda65-c6ee-394f-a0d1-49ca9af980da"]
}, Open  ]]
}, Open  ]]
}
]
*)

